{"version":3,"file":"editor.js","sources":["webpack://microweber-webpack/./userfiles/modules/microweber/api/classes/css.js","webpack://microweber-webpack/./userfiles/modules/microweber/api/classes/dialog.js","webpack://microweber-webpack/./userfiles/modules/microweber/api/classes/dom.js","webpack://microweber-webpack/./userfiles/modules/microweber/api/classes/element.js","webpack://microweber-webpack/./userfiles/modules/microweber/api/classes/object.service.js","webpack://microweber-webpack/./userfiles/modules/microweber/api/classes/state.js","webpack://microweber-webpack/./userfiles/modules/microweber/api/classes/tabs.js","webpack://microweber-webpack/./userfiles/modules/microweber/api/core/uploader.js","webpack://microweber-webpack/./userfiles/modules/microweber/api/editor/check.js","webpack://microweber-webpack/./userfiles/modules/microweber/api/system/filepicker.js","webpack://microweber-webpack/webpack/bootstrap","webpack://microweber-webpack/webpack/runtime/define property getters","webpack://microweber-webpack/webpack/runtime/hasOwnProperty shorthand","webpack://microweber-webpack/webpack/runtime/make namespace object","webpack://microweber-webpack/./userfiles/modules/microweber/api/editor/editor.js","webpack://microweber-webpack/./userfiles/modules/microweber/api/editor/bar.js","webpack://microweber-webpack/./userfiles/modules/microweber/api/editor/api.js","webpack://microweber-webpack/./userfiles/modules/microweber/api/editor/helpers.js","webpack://microweber-webpack/./userfiles/modules/microweber/api/editor/tools.js","webpack://microweber-webpack/./userfiles/modules/microweber/api/editor/core.js","webpack://microweber-webpack/./userfiles/modules/microweber/api/editor/controllers.js","webpack://microweber-webpack/./userfiles/modules/microweber/api/editor/add.controller.js","webpack://microweber-webpack/./userfiles/modules/microweber/api/editor/interaction-controls.js","webpack://microweber-webpack/./userfiles/modules/microweber/api/editor/i18n.js","webpack://microweber-webpack/./userfiles/modules/microweber/api/editor/liveeditmode.js"],"sourcesContent":["\r\n\r\n\r\n\r\nexport const CSSParser = function(el) {\r\n    if(!el || !el.nodeName) return false;\r\n    if(el.nodeName === '#text') return false;\r\n\r\n\r\n\r\n    const css = window.getComputedStyle(el, null);\r\n\r\n\r\n\r\n    var f = {};\r\n\r\n    f.display = function(){\r\n        return css.display;\r\n    };\r\n\r\n    f.is = function(){\r\n        return {\r\n            bold: parseFloat(css.fontWeight)>600 || css.fontWeight === 'bold' || css.fontWeight === 'bolder',\r\n            italic: css.fontStyle === 'italic'||css.fontStyle === 'oblique',\r\n            underlined: css.textDecoration === 'underline',\r\n            striked: css.textDecoration.indexOf('line-through') === 0,\r\n        };\r\n    };\r\n    f.font = function(){\r\n        if(css === null) return false;\r\n        return {\r\n            size:css.fontSize,\r\n            weight:css.fontWeight,\r\n            style:css.fontStyle,\r\n            height:css.lineHeight,\r\n            family:css.fontFamily,\r\n            color:css.color\r\n        };\r\n    }\r\n    f.alignNormalize = function(){\r\n        if(!!css){\r\n            var a = css.textAlign;\r\n            return a.contains('left')?'left':a.contains('center')?'center':a.contains('justify')?'justify':a.contains('right')?'right':'left';\r\n        }\r\n    }\r\n    f.border = function(parse){\r\n        if(!parse){\r\n            return {\r\n                top:{width:css.borderTopWidth, style:css.borderTopStyle, color:css.borderTopColor},\r\n                left:{width:css.borderLeftWidth, style:css.borderLeftStyle, color:css.borderLeftColor},\r\n                right:{width:css.borderRightWidth, style:css.borderRightStyle, color:css.borderRightColor},\r\n                bottom:{width:css.borderBottomWidth, style:css.borderBottomStyle, color:css.borderBottomColor}\r\n            }\r\n        }\r\n        else{\r\n            return {\r\n                top:{width:parseFloat(css.borderTopWidth), style:css.borderTopStyle, color:css.borderTopColor},\r\n                left:{width:parseFloat(css.borderLeftWidth), style:css.borderLeftStyle, color:css.borderLeftColor},\r\n                right:{width:parseFloat(css.borderRightWidth), style:css.borderRightStyle, color:css.borderRightColor},\r\n                bottom:{width:parseFloat(css.borderBottomWidth), style:css.borderBottomStyle, color:css.borderBottomColor}\r\n            }\r\n        }\r\n\r\n    }\r\n    f.width = function(){\r\n        return css.width;\r\n    }\r\n    f.position = function(){\r\n        return css.position;\r\n    }\r\n    f.background = function(){\r\n        return {\r\n            image:css.backgroundImage,\r\n            color:css.backgroundColor,\r\n            position:css.backgroundPosition,\r\n            repeat:css.backgroundRepeat\r\n        }\r\n    }\r\n    f.margin = function(parse, actual){\r\n        if(actual){\r\n            var _parent = el.parentNode;\r\n            var parentOff = mw.$(_parent).offset();\r\n            var elOff = mw.$(el).offset();\r\n            if(elOff.left > parentOff.left && css.marginLeft === css.marginRight && elOff.left - parentOff.left === parseInt(css.marginLeft, 10)){\r\n                return {\r\n                    top:css.marginTop,\r\n                    left:'auto',\r\n                    right:'auto',\r\n                    bottom:css.marginBottom\r\n                };\r\n            }\r\n        }\r\n        if(!parse){\r\n            return {\r\n                top:css.marginTop,\r\n                left:css.marginLeft,\r\n                right:css.marginRight,\r\n                bottom:css.marginBottom\r\n            }\r\n        }\r\n        else{\r\n            return {\r\n                top:parseFloat(css.marginTop),\r\n                left:parseFloat(css.marginLeft),\r\n                right:parseFloat(css.marginRight),\r\n                bottom:parseFloat(css.marginBottom)\r\n            }\r\n        }\r\n    }\r\n    f.padding = function(parse){\r\n        if(!parse){\r\n            return {\r\n                top:css.paddingTop,\r\n                left:css.paddingLeft,\r\n                right:css.paddingRight,\r\n                bottom:css.paddingBottom\r\n            }\r\n        }\r\n        else{\r\n            return {\r\n                top:parseFloat(css.paddingTop),\r\n                left:parseFloat(css.paddingLeft),\r\n                right:parseFloat(css.paddingRight),\r\n                bottom:parseFloat(css.paddingBottom)\r\n            }\r\n        }\r\n    }\r\n    f.opacity = function(){return css.opacity}\r\n\r\n    f.radius = function(parse){\r\n        if(!parse){\r\n            return {\r\n                tl:css.borderTopLeftRadius,\r\n                tr:css.borderTopRightRadius,\r\n                br:css.borderBottomRightRadius,\r\n                bl:css.borderBottomLeftRadius\r\n            }\r\n        }\r\n        else{\r\n            return {\r\n                tl:parseFloat(css.borderTopLeftRadius),\r\n                tr:parseFloat(css.borderTopRightRadius),\r\n                br:parseFloat(css.borderBottomRightRadius),\r\n                bl:parseFloat(css.borderBottomLeftRadius)\r\n            }\r\n        }\r\n    }\r\n\r\n    f.transform = function(){\r\n        let transform = css['transform'] || css['WebkitTransform'];\r\n        if(transform===\"\" || transform===\"none\"){\r\n            return [1, 0, 0, 1, 0, 0];\r\n        }\r\n        else{\r\n            transform = transform.substr(7, transform.length - 8).split(\", \");\r\n            return transform;\r\n        }\r\n    }\r\n\r\n    f.shadow = function(){\r\n         const shadow = (css['boxShadow'] || css['WebkitBoxShadow']).replace(/, /g, \",\").split(\" \");\r\n        return {\r\n            color: shadow[0],\r\n            left: shadow[1],\r\n            top: shadow[2],\r\n            blur: shadow[3],\r\n            spread: shadow[3]\r\n        }\r\n    }\r\n\r\n    return {\r\n        el: el,\r\n        css: css,\r\n        get: f\r\n    }\r\n}\r\n\r\n\r\n","import {ElementManager} from \"../classes/element\";\r\n\r\nconst dialogFooter = (okLabel, cancelLabel) => {\r\n    const footer = ElementManager({\r\n        props: {\r\n            className: 'le-dialog-footer'\r\n        }\r\n    });\r\n\r\n    const ok = ElementManager({\r\n        props: {\r\n            className: 'le-btn le-btn-primary le-dialog-footer-ok',\r\n            innerHTML: okLabel || 'OK'\r\n        }\r\n    });\r\n\r\n    const cancel = ElementManager({\r\n        props: {\r\n            className: 'le-btn le-dialog-footer-cancel'\r\n        }\r\n    });\r\n\r\n    footer.append(cancel);\r\n    footer.append(ok);\r\n\r\n    return  {\r\n        ok, cancel, footer\r\n    }\r\n}\r\n\r\nexport class Dialog {\r\n    constructor(options) {\r\n        options = options || {}\r\n        const defaults = {\r\n            content: null,\r\n            overlay: true,\r\n            document: document\r\n        }\r\n        this.settings = Object.assign({}, defaults, options);\r\n        console.log( this.settings );\r\n        this.build();\r\n        setTimeout(_ => this.open())\r\n    }\r\n    build() {\r\n        this.root = ElementManager({\r\n            props: {\r\n                className: 'le-dialog',\r\n\r\n            }\r\n        });\r\n        var closeBtn = ElementManager({\r\n            props: {\r\n                className: 'le-dialog-close',\r\n            }\r\n        });\r\n        closeBtn.on('click', () => {\r\n            this.remove();\r\n        });\r\n        this.container = ElementManager({\r\n            props: {\r\n                className: 'le-dialog-container'\r\n            },\r\n            content: this.settings.content\r\n        })\r\n        this.root.append(closeBtn);\r\n        this.root.append(this.container);\r\n        if(this.settings.footer) {\r\n            this.root.append(this.settings.footer.root || this.settings.footer);\r\n        }\r\n        this.settings.document.body.appendChild(this.root.get(0))\r\n        if (this.settings.overlay) {\r\n            this.overlay()\r\n        }\r\n    }\r\n    open() {\r\n        this.root.addClass('le-dialog-opened')\r\n    }\r\n    remove() {\r\n        this.root.remove()\r\n        if(this.overlay){\r\n            this.overlay.remove()\r\n        }\r\n    }\r\n    overlay() {\r\n        this.overlay = ElementManager({\r\n            props: {\r\n                className: 'le-dialog-overlay'\r\n            }\r\n        })\r\n        this.settings.document.body.appendChild(this.overlay.get(0))\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const Confirm = function (content, c) {\r\n    const footer = dialogFooter();\r\n    const dialog = new Dialog({\r\n        content, footer\r\n    });\r\n    footer.cancel.on('click', function (){\r\n        dialog.remove()\r\n    })\r\n    footer.ok.on('click', function (){\r\n        if(c){\r\n            c.call()\r\n        }\r\n        dialog.remove()\r\n    });\r\n    return dialog\r\n}\r\n\r\nexport const Alert = function (text) {\r\n    return new Dialog({\r\n        content: text\r\n    })\r\n}\r\n","\r\nlet matches;\r\nconst el = document.documentElement;\r\nif(!!el.matches) matches = 'matches';\r\nelse if (!!el.matchesSelector) matches = 'matchesSelector';\r\nelse if (!!el.mozMatchesSelector) matches = 'mozMatchesSelector';\r\nelse if (!!el.webkitMatchesSelector) matches = 'webkitMatchesSelector';\r\n\r\nexport class DomService {\r\n    static _isBlockCache = {};\r\n    static _fragment;\r\n\r\n    static fragment (){\r\n        if(!this._fragment){\r\n            this._fragment = document.createElement('div');\r\n            this._fragment.style.visibility = 'hidden';\r\n            this._fragment.style.position = 'absolute';\r\n            this._fragment.style.width = '1px';\r\n            this._fragment.style.height = '1px';\r\n            document.body.appendChild(this._fragment);\r\n        }\r\n        return this._fragment;\r\n    }\r\n\r\n    static matches(node, selector) {\r\n        return node[matches](selector)\r\n    }\r\n\r\n\r\n    static isBlockLevel (node){\r\n        if(!node || node.nodeType === 3){\r\n            return false;\r\n        }\r\n        var name = node.nodeName;\r\n         if(typeof this._isBlockCache[name] !== 'undefined'){\r\n            return this._isBlockCache[name];\r\n        }\r\n        var test = document.createElement(name);\r\n        this.fragment().appendChild(test);\r\n        this._isBlockCache[name] = getComputedStyle(test).display === 'block';\r\n        this.fragment().removeChild(test);\r\n        return this._isBlockCache[name];\r\n    }\r\n\r\n    static firstBlockLevel (el) {\r\n        while(el && el.classList) {\r\n            if(this.isBlockLevel(el)) {\r\n                return el;\r\n            }\r\n            el = el.parentNode;\r\n        }\r\n    }\r\n\r\n    static firstWithBackgroundImage (node) {\r\n        if (!node) {\r\n            return null;\r\n        }\r\n        while(node && node.nodeName !== 'BODY') {\r\n            if (!!node.style.backgroundImage) {\r\n                return node;\r\n            }\r\n            node = node.parentElement;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static hasAnyOfClassesOnNodeOrParent(node, arr) {\r\n        while (node && node.nodeName !== 'BODY') {\r\n            let i = 0, l = arr.length;\r\n            for ( ; i < l ; i++ ) {\r\n                if (node.classList.contains(arr[i])) {\r\n                    return true;\r\n                }\r\n            }\r\n            node = node.parentElement;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static hasParentsWithClass (el, cls) {\r\n        if (!el) return;\r\n        var curr = el.parentNode;\r\n        while (curr && curr.nodeName !== 'BODY') {\r\n            if (curr.classList.contains(cls)) {\r\n                return true;\r\n            }\r\n            curr = curr.parentNode;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static hasParentWithId (el, id) {\r\n        if (!el) return;\r\n        var curr = el.parentNode;\r\n        while (curr && curr.nodeName !== 'BODY') {\r\n            if (curr.id === id) {\r\n                return true;\r\n            }\r\n            curr = curr.parentNode;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static firstWithAyOfClassesOnNodeOrParent(node, arr) {\r\n        while (node && node.nodeName !== 'BODY') {\r\n            let i = 0, l = arr.length;\r\n            for ( ; i < l ; i++ ) {\r\n                if (node.classList.contains(arr[i])) {\r\n                    return node;\r\n                }\r\n            }\r\n            node = node.parentElement;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static firstParentOrCurrentWithTag (el, tag) {\r\n        if (!el || !tag) return;\r\n        tag = typeof tag !== 'string' ? tag : [tag];\r\n        var curr = el;\r\n        while (curr && curr.nodeName !== 'BODY') {\r\n            if (tag.indexOf(curr.nodeName.toLowerCase()) !== -1) {\r\n                return curr;\r\n            }\r\n            curr = curr.parentNode;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static index(el, parent, selector) {\r\n        selector = selector || el.tagName.toLowerCase();\r\n        parent = parent || el.parentNode;\r\n        var all;\r\n        if (parent.constructor === [].constructor) {\r\n            all = parent;\r\n        }\r\n        else {\r\n            all = parent.querySelectorAll(selector)\r\n        }\r\n        var i = 0, l = all.length;\r\n        for (; i < l; i++) {\r\n            if (el === all[i]) return i;\r\n        }\r\n    }\r\n\r\n    static firstParentOrCurrentWithClass (el, cls) {\r\n        if (!el) return false;\r\n        var curr = el;\r\n        while (curr && curr.nodeName !== 'BODY') {\r\n            if (curr.classList.contains(cls)) {\r\n                return curr;\r\n            }\r\n            curr = curr.parentNode;\r\n        }\r\n        return false;\r\n    }\r\n    static firstParentOrCurrent (el, selector) {\r\n        if (!el) return false;\r\n        var curr = el;\r\n        while (curr && curr.nodeName !== 'BODY') {\r\n            if (curr.matches(selector)) {\r\n                return curr;\r\n            }\r\n            curr = curr.parentNode;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static firstParentOrCurrentWithAnyOfClasses (node, arr) {\r\n        if (!node) return false;\r\n        var curr = node;\r\n        while (curr && curr.nodeName !== 'BODY') {\r\n            if (!curr) return false;\r\n            if (this.hasAnyOfClasses(curr, arr)) {\r\n                return curr;\r\n            }\r\n            curr = curr.parentNode;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static parentsOrCurrentOrderMatchOrOnlyFirst (node, arr) {\r\n        let curr = node;\r\n        while (curr && curr.nodeName !== 'BODY') {\r\n            const h1 = curr.classList.contains(arr[0]);\r\n            const h2 = curr.classList.contains(arr[1]);\r\n            if (h1 && h2) {\r\n                return false;\r\n            }\r\n            else {\r\n                if (h1) {\r\n                    return true;\r\n                }\r\n                else if (h2) {\r\n                    return false;\r\n                }\r\n            }\r\n            curr = curr.parentNode;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static parentsOrCurrentOrderMatchOrOnlyFirstOrNone (node, arr) {\r\n        let curr = node;\r\n        while (curr && curr.nodeName !== 'BODY') {\r\n\r\n            const h1 = curr.classList.contains(arr[0]);\r\n            const h2 = curr.classList.contains(arr[1]);\r\n            if (h1 && h2) {\r\n                return false;\r\n            } else {\r\n                if (h1) {\r\n                    return true;\r\n                } else if (h2) {\r\n                    return false;\r\n                }\r\n            }\r\n            curr = curr.parentNode;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static hasAnyOfClasses (node, arr) {\r\n        if (!node) return;\r\n        let i = 0, l = arr.length;\r\n        for (; i < l; i++) {\r\n            if (node.classList.contains(arr[i])) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static offset (node) {\r\n        if(!node) return;\r\n        var off = node.getBoundingClientRect();\r\n        var res = {top: off.top , left: off.left, width: off.width, height: off.height, bottom: off.bottom, right: off.right};;\r\n        res.top += node.ownerDocument.defaultView.scrollY;\r\n        res.bottom += node.ownerDocument.defaultView.scrollY;\r\n        res.left += node.ownerDocument.defaultView.scrollX;\r\n        res.right += node.ownerDocument.defaultView.scrollX;\r\n        return res;\r\n    }\r\n    static parentsOrder (node, arr) {\r\n        var only_first = [];\r\n        var obj = {}, l = arr.length, i = 0, count = -1;\r\n        for (; i < l; i++) {\r\n            obj[arr[i]] = -1;\r\n        }\r\n        if (!node) return obj;\r\n\r\n        var curr = node.parentNode;\r\n        while (curr && curr.nodeName !== 'BODY') {\r\n            count++;\r\n            i = 0;\r\n            for ( ; i < l; i++) {\r\n                if (curr.classList.contains(arr[i]) && only_first.indexOf(arr[i]) === -1) {\r\n                    obj[arr[i]] = count;\r\n                    only_first.push(arr[i]);\r\n                }\r\n            }\r\n            curr = curr.parentNode;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n\r\n}\r\n","import {ObjectService} from \"./object.service\";\r\n\r\n\r\n\r\n    var MWElement = function(options, root){\r\n        var scope = this;\r\n\r\n        this.isMWElement = true;\r\n\r\n        this.toggle = function () {\r\n            this.css('display', this.css('display') === 'none' ? 'block' : 'none');\r\n        };\r\n\r\n        this._active = function () {\r\n            return this.nodes[this.nodes.length - 1];\r\n        };\r\n\r\n        this.getDocument = function () {\r\n            return this._active().ownerDocument;\r\n        }\r\n\r\n        this.getWindow = function () {\r\n            return this.getDocument().defaultView;;\r\n        }\r\n\r\n        this.get = function(selector, scope){\r\n            this.nodes = (scope || document).querySelectorAll(selector);\r\n        };\r\n\r\n        this.each = function(cb){\r\n            if(this.nodes) {\r\n                for (var i = 0; i < this.nodes.length; i++) {\r\n                    cb.call(this.nodes[i], i);\r\n                }\r\n            } else if(this.node) {\r\n                cb.call(this.node, 0);\r\n            }\r\n            return this;\r\n        };\r\n\r\n        this.encapsulate = function () {\r\n\r\n        };\r\n\r\n        var contentManage = function (content, scope) {\r\n            if (content) {\r\n                if (Array.isArray(content)) {\r\n                    content.forEach(function (el){\r\n                        contentManage(el, scope);\r\n                    });\r\n                } else if (content instanceof MWElement) {\r\n                    scope.append(content);\r\n                } else if (typeof content === 'object') {\r\n                    scope.append(new MWElement(content));\r\n                }\r\n            }\r\n        }\r\n\r\n        this.create = function() {\r\n            var el = this.document.createElement(this.settings.tag);\r\n            this.node = el;\r\n\r\n            if (this.settings.encapsulate === true) {\r\n                var mode = this.settings.encapsulate === true ? 'open' : this.settings.encapsulate;\r\n                el.attachShadow({\r\n                    mode: mode\r\n                });\r\n            }\r\n            this.nodes = [el];\r\n\r\n            if (this.settings.content) {\r\n                contentManage(this.settings.content, this)\r\n            }\r\n        };\r\n\r\n        this._specialProps = function(dt, val){\r\n            if(dt === 'tooltip') {\r\n                this.node.dataset[dt] = val;\r\n                return true;\r\n            }\r\n        };\r\n\r\n        this.setProps = function(){\r\n            for(var i in this.settings.props) {\r\n                if (i === 'dataset') {\r\n                    for(var dt in this.settings.props[i]) {\r\n                        this.node.dataset[dt] = this.settings.props[i][dt];\r\n                    }\r\n                } else if (i === 'style') {\r\n                    for(var st in this.settings.props[i]) {\r\n                        this.node.style[st] = this.settings.props[i][st];\r\n                    }\r\n                } else {\r\n                    var val = this.settings.props[i];\r\n                    if(!this._specialProps(i, val)) {\r\n                        this.node[i] = val;\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        this.__ = {\r\n            cssNumber: [\r\n                'animationIterationCount',\r\n                'columnCount',\r\n                'fillOpacity',\r\n                'flexGrow',\r\n                'flexShrink',\r\n                'fontWeight',\r\n                'gridArea',\r\n                'gridColumn',\r\n                'gridColumnEnd',\r\n                'gridColumnStart',\r\n                'gridRow',\r\n                'gridRowEnd',\r\n                'gridRowStart',\r\n                'lineHeight',\r\n                'opacity',\r\n                'order',\r\n                'orphans',\r\n                'widows',\r\n                'zIndex',\r\n                'zoom'\r\n            ]\r\n        };\r\n\r\n        this._normalizeCSSValue = function (prop, val) {\r\n            if(typeof val === 'number') {\r\n                if(this.__.cssNumber.indexOf(prop) === -1) {\r\n                    val = val + 'px';\r\n                }\r\n            }\r\n            return val;\r\n        };\r\n\r\n        this.css = function(css, val){\r\n            if(typeof css === 'string') {\r\n                if(typeof val !== 'undefined'){\r\n                    var nval =  this._normalizeCSSValue(css, val);\r\n                    this.each(function (){\r\n                        this.style[css] = nval;\r\n                    });\r\n                } else {\r\n                    return this.document.defaultView.getComputedStyle(this.node)[css];\r\n                }\r\n            }\r\n            if(typeof css === 'object') {\r\n                for (var i in css) {\r\n\r\n                    this.each(function (){\r\n                        this.style[i] = scope._normalizeCSSValue(i, css[i]);\r\n                    });\r\n                }\r\n            }\r\n            return this;\r\n        };\r\n\r\n        this.dataset = function(prop, val){\r\n            if(typeof val === 'undefined') {\r\n                return this._active()[prop];\r\n            }\r\n            this.each(function (){\r\n                this.dataset[prop] = val;\r\n            });\r\n            return this;\r\n        };\r\n\r\n        this.attr = function(prop, val){\r\n            if(typeof val === 'undefined') {\r\n                return this._active()[prop];\r\n            }\r\n            this.each(function (){\r\n                this.setAttribute(prop, val);\r\n            });\r\n            return this;\r\n        };\r\n\r\n        this.val = function(val){\r\n            if(typeof val === 'undefined') {\r\n                return this._active().value;\r\n            }\r\n            this.each(function (){\r\n                this.value = val;\r\n            });\r\n            return this;\r\n        };\r\n\r\n        this.prop = function(prop, val){\r\n            var active = this._active();\r\n            if(typeof val === 'undefined') {\r\n                return active[prop];\r\n            }\r\n            if(active[prop] !== val){\r\n                active[prop] = val;\r\n                this.trigger('propChange', [prop, val]);\r\n            }\r\n            return this;\r\n        };\r\n\r\n        this.hide = function () {\r\n            return this.each(function (){\r\n                this.style.display = 'none';\r\n            });\r\n        };\r\n        this.show = function () {\r\n            return this.each(function (){\r\n                this.style.display = '';\r\n            });\r\n        };\r\n\r\n        this.find = function (sel) {\r\n            var el = mw.element('#r' + new Date().getTime());\r\n            this.each(function (){\r\n                var all = this.querySelectorAll(sel);\r\n                for(var i = 0; i < all.length; i++) {\r\n                    if(el.nodes.indexOf(all[i]) === -1) {\r\n                        el.nodes.push(all[i]);\r\n                    }\r\n                }\r\n            });\r\n            return el;\r\n        };\r\n\r\n        this.addClass = function (cls) {\r\n            cls = cls.trim().split(' ');\r\n            return this.each(function (){\r\n                var node = this;\r\n                cls.forEach(function (singleClass){\r\n                    node.classList.add(singleClass);\r\n                });\r\n\r\n            });\r\n        };\r\n\r\n        this.toggleClass = function (cls) {\r\n            return this.each(function (){\r\n                this.classList.toggle(cls.trim());\r\n            });\r\n        };\r\n\r\n        this.removeClass = function (cls) {\r\n            var isArray = Array.isArray(cls);\r\n            if(!isArray) {\r\n                cls = cls.trim();\r\n                var isMultiple = cls.split(' ');\r\n                if(isMultiple.length > 1) {\r\n                    return this.removeClass(isMultiple)\r\n                }\r\n                return this.each(function (){\r\n                    this.classList.remove(cls);\r\n                });\r\n            } else {\r\n                return this.each(function (){\r\n                    var i = 0, l = cls.length;\r\n                    for ( ; i < l; i++) {\r\n                        this.classList.remove(cls[i]);\r\n                    }\r\n                });\r\n            }\r\n        };\r\n\r\n        this.remove = function () {\r\n            return this.each(function (){\r\n                this.remove();\r\n            });\r\n        };\r\n\r\n        this.empty = function () {\r\n            return this.html('');\r\n        };\r\n\r\n        this.html = function (val) {\r\n            if (typeof val === 'undefined') {\r\n                return this._active().innerHTML;\r\n            }\r\n            return this.each(function (){\r\n                this.innerHTML = val;\r\n            });\r\n        };\r\n        this.text = function (val, clean) {\r\n            if(typeof val === 'undefined') {\r\n                return this.node.textContent;\r\n            }\r\n            if(typeof clean === 'undefined') {\r\n                clean = true;\r\n            }\r\n            if (clean) {\r\n                val = this.document.createRange().createContextualFragment(val).textContent;\r\n            }\r\n            this.node.innerHTML = val;\r\n        };\r\n\r\n        this._asdom = function (obj) {\r\n            if (typeof obj === 'string') {\r\n                return this.document.createRange().createContextualFragment(obj);\r\n            } else if (obj.node){\r\n                return obj.node;\r\n            }\r\n            else if (obj.nodes){\r\n                return obj.nodes[obj.nodes.length - 1];\r\n            } else {\r\n                return obj;\r\n            }\r\n        };\r\n\r\n        this.offset = function () {\r\n            var curr = this._active();\r\n            var win = this.getWindow();\r\n            var rect = curr.getBoundingClientRect();\r\n            rect.offsetTop = rect.top + win.pageYOffset;\r\n            rect.offsetBottom = rect.bottom + win.pageYOffset;\r\n            rect.offsetLeft = rect.left + win.pageXOffset;\r\n            return rect;\r\n        };\r\n\r\n\r\n        this.width = function (val) {\r\n            if(val) {\r\n                return this.css('width', val);\r\n            }\r\n            return this._active().offsetWidth;\r\n        };\r\n\r\n        this.height = function (val) {\r\n            if(val) {\r\n                return this.css('height', val);\r\n            }\r\n            return this._active().offsetHeight;\r\n        };\r\n\r\n        this.parent = function () {\r\n            return mw.element(this._active().parentNode);\r\n        };\r\n        this.parents = function (selector) {\r\n            selector = selector || '*';\r\n            var el = this._active();\r\n            var curr = el.parentElement;\r\n            var res = mw.element();\r\n            res.nodes = []\r\n            while (curr) {\r\n                if(curr.matches(selector)) {\r\n                    res.nodes.push(curr);\r\n                }\r\n                curr = curr.parentElement;\r\n            }\r\n            return res;\r\n        };\r\n        this.append = function (el) {\r\n\r\n            if (el) {\r\n                this.each(function (){\r\n                    this.append(scope._asdom(el));\r\n                });\r\n            }\r\n            return this;\r\n        };\r\n\r\n        this.before = function (el) {\r\n            if (el) {\r\n                this.each(function (){\r\n                    if(this.parentNode){\r\n                        this.parentNode.insertBefore(scope._asdom(el), this);\r\n                    }\r\n                });\r\n            }\r\n            return this;\r\n        };\r\n\r\n        this.after = function (el) {\r\n            if (el) {\r\n                this.each(function (){\r\n                    if(this.parentNode) {\r\n                        this.parentNode.insertBefore(scope._asdom(el), this.nextSibling);\r\n                    }\r\n                });\r\n            }\r\n        };\r\n\r\n        this.prepend = function (el) {\r\n            if (el) {\r\n                this.each(function (){\r\n                    this.prepend(scope._asdom(el));\r\n                });\r\n            }\r\n            return this;\r\n        };\r\n        this._disabled = false;\r\n\r\n        Object.defineProperty(this, \"disabled\", {\r\n            get : function () { return this._disabled; },\r\n            set : function (value) {\r\n                this._disabled = value;\r\n                this.node.disabled = this._disabled;\r\n                this.node.dataset.disabled = this._disabled;\r\n            }\r\n        });\r\n\r\n        this.trigger = function(event, data){\r\n            data = data || {};\r\n            this.each(function (){\r\n                this.dispatchEvent(new CustomEvent(event, {\r\n                    detail: data,\r\n                    cancelable: true,\r\n                    bubbles: true\r\n                }));\r\n                if(scope._on[event]) {\r\n                    scope._on[event].forEach(function(cb){\r\n                        cb.call(this, event, data);\r\n                    });\r\n                }\r\n            });\r\n            return this;\r\n        };\r\n\r\n        this.get = function (i) {\r\n            return this.nodes[i];\r\n        };\r\n\r\n        this.wrap = function (what) {\r\n            var newEl = DomQuery(what);\r\n            this.before(newEl)\r\n            newEl.append(this)\r\n        }\r\n\r\n        this._on = {};\r\n        this.on = function(events, cb){\r\n            events = events.trim().split(' ');\r\n            events.forEach(function (ev) {\r\n                if(!scope._on[ev]) {  scope._on[ev] = []; }\r\n                scope._on[ev].push(cb);\r\n                scope.each(function (){\r\n                    /*this.addEventListener(ev, function(e) {\r\n                        cb.call(scope, e, e.detail, this);\r\n                    }, false);*/\r\n                    this.addEventListener(ev, cb, false);\r\n                });\r\n            });\r\n            return this;\r\n        };\r\n        this.init = function(){\r\n            this.nodes = [];\r\n            this.root = root || document;\r\n            if(this.root instanceof MWElement) {\r\n                this.root = this.root.get(0)\r\n            }\r\n            this._asElement = false;\r\n            this.document =  (this.root.body ? this.root : this.root.ownerDocument);\r\n\r\n            options = options || {};\r\n\r\n            if(options.nodeName && options.nodeType) {\r\n                this.nodes.push(options);\r\n                this.node = (options);\r\n                options = {};\r\n                this._asElement = true;\r\n            } else if(typeof options === 'string') {\r\n                if(options.indexOf('<') === -1) {\r\n\r\n                    this.nodes = Array.prototype.slice.call(this.root.querySelectorAll(options));\r\n                    options = {};\r\n                    this._asElement = true;\r\n                } else if(this.settings && this.settings.content instanceof MWElement) {\r\n                    this.append(this.settings.content);\r\n                }  else if(this.settings && typeof this.settings.content === 'object') {\r\n                    this.append(new MWElement(this.settings.content));\r\n                }else {\r\n                    var el = this._asdom(options);\r\n\r\n                    this.nodes = [].slice.call(el.children);\r\n                    this._asElement = true;\r\n                }\r\n            }\r\n\r\n            options = options || {};\r\n\r\n            var defaults = {\r\n                tag: 'div',\r\n                props: {}\r\n            };\r\n\r\n            this.settings = ObjectService.extend({}, defaults, options);\r\n\r\n            if(this._asElement) return;\r\n            this.create();\r\n            this.setProps();\r\n        };\r\n        this.init();\r\n    };\r\nconst DomQuery = function(options, root){\r\n    return new MWElement(options, root);\r\n};\r\nDomQuery.module = function (name, func) {\r\n    MWElement.prototype[name] = func;\r\n};\r\n\r\n\r\n\r\n\r\nconst nodeName = 'mw-le-element';\r\nif (window.customElements && !customElements.get(nodeName)) {\r\n    customElements.define( nodeName,\r\n        class extends HTMLElement {\r\n            constructor() {\r\n                super();\r\n            }\r\n        }\r\n    );\r\n}\r\nexport const ElementManager = (config, root) => {\r\n    if (config instanceof Object && !config.nodeType) {\r\n        config = ObjectService.extend({}, config || {}, { tag: config.tag || nodeName });\r\n    }\r\n    return DomQuery(config, root)\r\n}\r\n","export class ObjectService {\r\n    static extend () {\r\n        const extended = {};\r\n        let deep = false;\r\n        let i = 0;\r\n        const l = arguments.length;\r\n\r\n        if ( Object.prototype.toString.call( arguments[0] ) === '[object Boolean]' ) {\r\n            deep = arguments[0];\r\n            i++;\r\n        }\r\n        const merge = function (obj) {\r\n            for ( const prop in obj ) {\r\n                if ( Object.prototype.hasOwnProperty.call( obj, prop ) ) {\r\n                    if ( deep && Object.prototype.toString.call(obj[prop]) === '[object Object]' ) {\r\n                        extended[prop] = ObjectService.extend( true, extended[prop], obj[prop] );\r\n                    } else {\r\n                        extended[prop] = obj[prop];\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        for ( ; i < l; i++ ) {\r\n            const obj = arguments[i];\r\n            merge(obj);\r\n        }\r\n        return extended;\r\n\r\n    }\r\n}\r\n","export const State = function(options){\r\n\r\n    var scope = this;\r\n    var defaults = {\r\n        maxItems: 1000\r\n    };\r\n    this.options = Object.assign({}, defaults, (options || {}));\r\n    this._state = this.options.state || [];\r\n    this._active = null;\r\n    this._activeIndex = -1;\r\n\r\n    this.hasNext = false;\r\n    this.hasPrev = false;\r\n\r\n    this.state = function(state){\r\n        if(!state){\r\n            return this._state;\r\n        }\r\n        this._state = state;\r\n        return this;\r\n    };\r\n    var _e = {};\r\n    this.on = function (e, f) { _e[e] ? _e[e].push(f) : (_e[e] = [f]); return this; };\r\n    this.dispatch = function (e, f) { _e[e] ? _e[e].forEach(function (c){ c.call(this, f); }) : '';  return this; };\r\n\r\n\r\n    this.active = function(active){\r\n        if(!active){\r\n            return this._active;\r\n        }\r\n    };\r\n\r\n    this.activeIndex = function(activeIndex){\r\n        if(!activeIndex){\r\n            return this._activeIndex;\r\n        }\r\n    };\r\n\r\n    this._timeout = null;\r\n    this.timeoutRecord = function(item){\r\n        clearTimeout(this._timeout);\r\n        this._timeout = setTimeout(function(scope, item){\r\n            scope.record(item);\r\n        }, 333, this, item);\r\n    };\r\n\r\n    var recentRecordIsEqual = function (item) {\r\n        const curr = scope._state[0];\r\n        if(!curr) return false;\r\n        for (var n in item) {\r\n            if(curr[n] !== item[n]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n\r\n    this.record = function(item){\r\n        if(this._activeIndex>-1) {\r\n            var i = 0;\r\n            while ( i <  this._activeIndex) {\r\n                this._state.shift();\r\n                i++;\r\n            }\r\n        }\r\n        if (recentRecordIsEqual(item)) {\r\n            return;\r\n        }\r\n        this._state.unshift(item);\r\n        if(this._state.length >= this.options.maxItems) {\r\n            this._state.splice(-1,1);\r\n        }\r\n        this._active = null;\r\n        this._activeIndex = -1;\r\n        this.afterChange(false);\r\n        this.dispatch('record', [this.eventData()]);\r\n        return this;\r\n    };\r\n\r\n    this.actionRecord = function(recordGenFunc, action){\r\n        this.record(recordGenFunc());\r\n        action.call();\r\n        this.record(recordGenFunc());\r\n    };\r\n\r\n    this.redo = function(){\r\n        this._activeIndex--;\r\n        this._active = this._state[this._activeIndex];\r\n        this.afterChange('stateRedo');\r\n        this.dispatch('redo');\r\n        return this;\r\n    };\r\n\r\n    this.undo = function(){\r\n        if(this._activeIndex === -1) {\r\n            this._activeIndex = 1;\r\n        }\r\n        else{\r\n            this._activeIndex++;\r\n        }\r\n        this._active = this._state[this._activeIndex];\r\n        this.afterChange('stateUndo');\r\n        this.dispatch('undo');\r\n        return this;\r\n    };\r\n\r\n    this.hasRecords = function(){\r\n        return !!this._state.length;\r\n    };\r\n\r\n    this.eventData = function(){\r\n        return {\r\n            hasPrev: this.hasPrev,\r\n            hasNext: this.hasNext,\r\n            active: this.active(),\r\n            activeIndex: this.activeIndex()\r\n        };\r\n    };\r\n    this.afterChange = function(action){\r\n        this.hasNext = true;\r\n        this.hasPrev = true;\r\n\r\n        if(action) {\r\n            if(this._activeIndex >= this._state.length) {\r\n                this._activeIndex = this._state.length - 1;\r\n                this._active = this._state[this._activeIndex];\r\n            }\r\n        }\r\n\r\n        if(this._activeIndex <= 0) {\r\n            this.hasPrev = false;\r\n        }\r\n        if(this._activeIndex === this._state.length-1 || (this._state.length === 1 && this._state[0].$initial)) {\r\n            this.hasNext = false;\r\n        }\r\n\r\n        if(action){\r\n\r\n             this.dispatch(action, [this.eventData()]);\r\n        }\r\n        if(action !== false){\r\n            this.dispatch('change', [this.eventData()]);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    this.reset = function(){\r\n        this._state = this.options.state || [];\r\n        this.afterChange('reset');\r\n        return this;\r\n    };\r\n\r\n    this.clear = function(){\r\n        this._state = [];\r\n        this.afterChange('clear');\r\n        return this;\r\n    };\r\n\r\n\r\n};\r\n","export class Tabs {\r\n    constructor(options) {\r\n        const defaults = {\r\n            activeClass: 'active'\r\n        }\r\n        this.settings = Object.assign({}, defaults, options || {});\r\n        if(typeof this.settings.tabs === 'string') {\r\n            this.settings.tabs = Array.from(document.querySelectorAll(this.settings.tabs));\r\n        }\r\n        if(typeof this.settings.nav === 'string') {\r\n            this.settings.nav = Array.from(document.querySelectorAll(this.settings.nav))\r\n        }\r\n\r\n        this.init();\r\n    }\r\n\r\n    unsetAll() {\r\n        this.settings.tabs.forEach(tab => {\r\n            tab.classList.remove(this.settings.activeClass)\r\n        })\r\n        this.settings.nav.forEach(nav => {\r\n            nav.classList.remove(this.settings.activeClass)\r\n        })\r\n    }\r\n\r\n    set(index) {\r\n        this.unsetAll();\r\n        if (typeof index === 'number') {\r\n            this.settings.tabs[index].classList.add(this.settings.activeClass)\r\n            this.settings.nav[index].classList.add(this.settings.activeClass)\r\n        }\r\n    }\r\n\r\n    init() {\r\n         Array.from(this.settings.nav).forEach((tab, index) => {\r\n            tab.addEventListener('click', e => {\r\n                e.preventDefault();\r\n                 this.set(index);\r\n                console.log(index)\r\n                if(this.settings.onclick) {\r\n                    this.settings.onclick.call(tab, tab, e, index)\r\n                }\r\n            })\r\n        })\r\n    }\r\n}\r\n","\r\n\r\n    export const Uploader = function( options ) {\r\n        //var upload = function( url, data, callback, type ) {\r\n        options = options || {};\r\n        options.accept = options.accept || options.filetypes;\r\n        var defaults = {\r\n            multiple: false,\r\n            progress: null,\r\n            element: null,\r\n            url: options.url || (mw.settings.site_url + 'plupload'),\r\n            urlParams: {},\r\n            on: {},\r\n            autostart: true,\r\n            async: true,\r\n            accept: '*',\r\n            chunkSize: 1500000,\r\n        };\r\n\r\n        var normalizeAccept = function (type) {\r\n            type = (type || '').trim().toLowerCase();\r\n            if(!type) return '*';\r\n            if (type === 'image' || type === 'images') return '.png,.gif,.jpg,.jpeg,.tiff,.bmp,.svg';\r\n            if (type === 'video' || type === 'videos') return '.mp4,.webm,.ogg,.wma,.mov,.wmv';\r\n            if (type === 'document' || type === 'documents') return '.doc,.docx,.log,.pdf,.msg,.odt,.pages,' +\r\n                '.rtf,.tex,.txt,.wpd,.wps,.pps,.ppt,.pptx,.xml,.htm,.html,.xlr,.xls,.xlsx';\r\n\r\n            return '*';\r\n        };\r\n\r\n        var scope = this;\r\n        this.settings = $.extend({}, defaults, options);\r\n        this.settings.accept = normalizeAccept(this.settings.accept);\r\n\r\n        this.getUrl = function () {\r\n            var params = this.urlParams();\r\n            var empty = mw.tools.isEmptyObject(params);\r\n            return this.url() + (empty ? '' : ('?' + $.param(params)));\r\n        };\r\n\r\n        this.urlParam = function (param, value) {\r\n            if(typeof value === 'undefined') {\r\n                return this.settings.urlParams[param];\r\n            }\r\n            this.settings.urlParams[param] = value;\r\n        };\r\n\r\n        this.urlParams = function (params) {\r\n            if(!params) {\r\n                return this.settings.urlParams;\r\n            }\r\n            this.settings.urlParams = params;\r\n        };\r\n\r\n        this.url = function (url) {\r\n            if(!url) {\r\n                return this.settings.url;\r\n            }\r\n            this.settings.url = url;\r\n        };\r\n\r\n        this.create = function () {\r\n            this.input = document.createElement('input');\r\n            this.input.multiple = this.settings.multiple;\r\n            this.input.accept = this.settings.accept;\r\n            this.input.type = 'file';\r\n            this.input.className = 'mw-uploader-input';\r\n            this.input.oninput = function () {\r\n                scope.addFiles(this.files);\r\n            };\r\n        };\r\n\r\n        this.files = [];\r\n        this._uploading = false;\r\n        this.uploading = function (state) {\r\n            if(typeof state === 'undefined') {\r\n                return this._uploading;\r\n            }\r\n            this._uploading = state;\r\n        };\r\n\r\n        this._validateAccept = this.settings.accept\r\n            .toLowerCase()\r\n            .replace(/\\*/g, '')\r\n            .replace(/ /g, '')\r\n            .split(',')\r\n            .filter(function (item) {\r\n                return !!item;\r\n            });\r\n        this.validate = function (file) {\r\n            if(!file) return false;\r\n            var ext = '.' + file.name.split('.').pop().toLowerCase();\r\n            if (this._validateAccept.length === 0) {\r\n                return true;\r\n            }\r\n            for (var i = 0; i < this._validateAccept.length; i++) {\r\n                var item =  this._validateAccept[i];\r\n                if(item === ext) {\r\n                    return true;\r\n                }\r\n                else if(file.type.indexOf(item) === 0) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n\r\n        };\r\n\r\n        this.addFile = function (file) {\r\n            if(this.validate(file)) {\r\n                if(!this.files.length || this.settings.multiple){\r\n                    this.files.push(file);\r\n                    if(this.settings.on.fileAdded) {\r\n                        this.settings.on.fileAdded(file);\r\n                    }\r\n                    $(scope).trigger('FileAdded', file);\r\n                } else {\r\n                    this.files = [file];\r\n                    $(scope).trigger('FileAdded', file);\r\n                    if(this.settings.on.fileAdded) {\r\n                        this.settings.on.fileAdded(file);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        this.addFiles = function (files) {\r\n\r\n            if(!files || !files.length) return;\r\n\r\n            if(!this.settings.multiple) {\r\n                files = [files[0]];\r\n            }\r\n            if (files && files.length) {\r\n                for (var i = 0; i < files.length; i++) {\r\n                    scope.addFile(files[i]);\r\n                }\r\n                if(this.settings.on.filesAdded) {\r\n                    if(this.settings.on.filesAdded(files) === false) {\r\n                        return;\r\n                    }\r\n                }\r\n                $(scope).trigger('FilesAdded', [files]);\r\n                if(this.settings.autostart) {\r\n                    this.uploadFiles();\r\n                }\r\n            }\r\n        };\r\n\r\n        this.remove = function () {\r\n            if(this.input.parentNode) {\r\n                this.input.parentNode.removeChild(this.input);\r\n            }\r\n        }\r\n\r\n        this.build = function () {\r\n            if(this.settings.element) {\r\n                this.$element = $(this.settings.element);\r\n                this.element = this.$element[0];\r\n\r\n                if(this.element) {\r\n                    this.$element/*.empty()*/.append(this.input);\r\n                    var pos = getComputedStyle(this.element).position;\r\n                    if(pos === 'static') {\r\n                        this.element.style.position = 'relative';\r\n                    }\r\n                    this.element.style.overflow = 'hidden';\r\n                }\r\n            }\r\n        };\r\n\r\n        this.show = function () {\r\n            this.$element.show();\r\n        };\r\n\r\n        this.hide = function () {\r\n            this.$element.hide();\r\n        };\r\n\r\n        this.initDropZone = function () {\r\n            if (!!this.settings.dropZone) {\r\n                mw.$(this.settings.dropZone).each(function () {\r\n                    $(this).on('dragover', function (e) {\r\n                        e.preventDefault();\r\n                    }).on('drop', function (e) {\r\n                        var dt = e.dataTransfer || e.originalEvent.dataTransfer;\r\n                        e.preventDefault();\r\n                        if (dt && dt.items) {\r\n                            var files = [];\r\n                            for (var i = 0; i < dt.items.length; i++) {\r\n                                if (dt.items[i].kind === 'file') {\r\n                                    var file = dt.items[i].getAsFile();\r\n                                    files.push(file);\r\n                                }\r\n                            }\r\n                            scope.addFiles(files);\r\n                        } else  if (dt && dt.files)  {\r\n                            scope.addFiles(dt.files);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        };\r\n\r\n\r\n        this.init = function() {\r\n            this.create();\r\n            this.build();\r\n            this.initDropZone();\r\n        };\r\n\r\n        this.init();\r\n\r\n        this.removeFile = function (file) {\r\n            var i = this.files.indexOf(file);\r\n            if (i > -1) {\r\n                this.files.splice(i, 1);\r\n            }\r\n        };\r\n\r\n        this.uploadFile = function (file, done, chunks, _all, _i) {\r\n            return new Promise(function (resolve, reject) {\r\n                chunks = chunks || scope.sliceFile(file);\r\n                _all = _all || chunks.length;\r\n                _i = _i || 0;\r\n                var chunk = chunks.shift();\r\n                var data = {\r\n                    name: file.name,\r\n                    chunk: _i,\r\n                    chunks: _all,\r\n                    file: chunk,\r\n                };\r\n                _i++;\r\n                $(scope).trigger('uploadStart', [data]);\r\n\r\n                scope.upload(data, function (res) {\r\n                    var dataProgress;\r\n                    if(chunks.length) {\r\n                        scope.uploadFile(file, done, chunks, _all, _i).then(function (){\r\n                            if (done) {\r\n                                done.call(file, res);\r\n                            }\r\n                            resolve(file);\r\n                        }, function (xhr){\r\n                             if(scope.settings.on.fileUploadError) {\r\n                                scope.settings.on.fileUploadError(xhr);\r\n                            }\r\n                        });\r\n                        dataProgress = {\r\n                            percent: ((100 * _i) / _all).toFixed()\r\n                        };\r\n                        $(scope).trigger('progress', [dataProgress, res]);\r\n                        if(scope.settings.on.progress) {\r\n                            scope.settings.on.progress(dataProgress, res);\r\n                        }\r\n\r\n                    } else {\r\n                        dataProgress = {\r\n                            percent: '100'\r\n                        };\r\n                        $(scope).trigger('progress', [dataProgress, res]);\r\n                        if(scope.settings.on.progress) {\r\n                            scope.settings.on.progress(dataProgress, res);\r\n                        }\r\n                        $(scope).trigger('FileUploaded', [res]);\r\n                        if(scope.settings.on.fileUploaded) {\r\n                            scope.settings.on.fileUploaded(res);\r\n                        }\r\n                        if (done) {\r\n                            done.call(file, res);\r\n                        }\r\n                        resolve(file);\r\n                    }\r\n                }, function (req) {\r\n                    if (req.responseJSON && req.responseJSON.error && req.responseJSON.error.message) {\r\n                        mw.notification.warning(req.responseJSON.error.message);\r\n                    }\r\n                    scope.removeFile(file);\r\n                    reject(req)\r\n                });\r\n            });\r\n        };\r\n\r\n        this.sliceFile = function(file) {\r\n            var byteIndex = 0;\r\n            var chunks = [];\r\n            var chunksAmount = file.size <= this.settings.chunkSize ? 1 : ((file.size / this.settings.chunkSize) >> 0) + 1;\r\n\r\n            for (var i = 0; i < chunksAmount; i ++) {\r\n                var byteEnd = Math.ceil((file.size / chunksAmount) * (i + 1));\r\n                chunks.push(file.slice(byteIndex, byteEnd));\r\n                byteIndex += (byteEnd - byteIndex);\r\n            }\r\n\r\n            return chunks;\r\n        };\r\n\r\n        this.uploadFiles = function () {\r\n            if (this.settings.async) {\r\n                 if (this.files.length) {\r\n                    this.uploading(true);\r\n                    var file = this.files[0]\r\n                    scope.uploadFile(file)\r\n                        .then(function (){\r\n                        scope.files.shift();\r\n                        scope.uploadFiles();\r\n                    }, function (xhr){\r\n                            scope.removeFile(file);\r\n                            if(scope.settings.on.fileUploadError) {\r\n                                scope.settings.on.fileUploadError(xhr)\r\n                            }\r\n                        });\r\n\r\n                } else {\r\n                    this.uploading(false);\r\n                    scope.input.value = '';\r\n                    if(scope.settings.on.filesUploaded) {\r\n                        scope.settings.on.filesUploaded();\r\n                    }\r\n                    $(scope).trigger('FilesUploaded');\r\n\r\n                }\r\n            } else {\r\n                var count = 0;\r\n                var all = this.files.length;\r\n                this.uploading(true);\r\n                this.files.forEach(function (file) {\r\n                    scope.uploadFile(file)\r\n                        .then(function (file){\r\n                            count++;\r\n                            scope.uploading(false);\r\n                            if(all === count) {\r\n                                scope.input.value = '';\r\n                                if(scope.settings.on.filesUploaded) {\r\n                                    scope.settings.on.filesUploaded();\r\n                                }\r\n                                $(scope).trigger('FilesUploaded');\r\n                            }\r\n                        }, function (xhr){\r\n                            if(scope.settings.on.fileUploadError) {\r\n                                scope.settings.on.fileUploadError(xhr)\r\n                            }\r\n                        });\r\n                });\r\n            }\r\n        };\r\n\r\n\r\n        this.upload = function (data, done, onFail) {\r\n            if (!this.settings.url) {\r\n                return;\r\n            }\r\n            var pdata = new FormData();\r\n            $.each(data, function (key, val) {\r\n                pdata.append(key, val);\r\n            });\r\n            if(scope.settings.on.uploadStart) {\r\n                if (scope.settings.on.uploadStart(pdata) === false) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            var xhrOptions = {\r\n                url: this.getUrl(),\r\n                type: 'post',\r\n                processData: false,\r\n                contentType: false,\r\n                data: pdata,\r\n                success: function (data, statusText, xhrReq) {\r\n\r\n                    if(xhrReq.status === 200) {\r\n                        if (data && (data.form_data_required || data.form_data_module)) {\r\n                            mw.extradataForm(xhrOptions, data, mw.jqxhr);\r\n                        }\r\n                        else {\r\n                            scope.removeFile(data.file);\r\n                            if(done) {\r\n                                done.call(data, data);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                },\r\n                error:  function(  xhrReq, edata, statusText ) {\r\n                    scope.removeFile(data.file);\r\n                    if (onFail) {\r\n                        onFail.call(xhrReq, xhrReq);\r\n                    }\r\n                },\r\n                dataType: 'json',\r\n                xhr: function () {\r\n                    var xhr = new XMLHttpRequest();\r\n                    xhr.upload.addEventListener('progress', function (event) {\r\n                        if (event.lengthComputable) {\r\n                            var percent = (event.loaded / event.total) * 100;\r\n                            if(scope.settings.on.progressNative) {\r\n                                scope.settings.on.progressNative(percent, event);\r\n                            }\r\n                            $(scope).trigger('progressNative', [percent, event]);\r\n                        }\r\n                    });\r\n                    return xhr;\r\n                }\r\n            };\r\n\r\n            return mw.jqxhr(xhrOptions);\r\n        };\r\n    };\r\n\r\n    mw.upload = function (options) {\r\n        return new Uploader(options);\r\n    };\r\n\r\n\r\n\r\n","export const Check = {\r\n    isBold: node => parseFloat(getComputedStyle(node).fontWeight) > 500,\r\n\r\n}\r\n","import {Uploader} from \"../core/uploader\";\r\nimport {Tabs} from \"../classes/tabs\";\r\n\r\nconst lang = function (key) {\r\n    return key;\r\n}\r\n\r\nexport const FilePicker = function (options) {\r\n    options = options || {};\r\n    var scope = this;\r\n    var defaults = {\r\n        components: [\r\n            {type: 'desktop', label: lang('My computer')},\r\n            {type: 'url', label: lang('URL')},\r\n            {type: 'server', label: lang('Uploaded')},\r\n            {type: 'library', label: lang('Media library')}\r\n        ],\r\n        nav: 'tabs', // 'tabs | 'dropdown',\r\n        hideHeader: false,\r\n        dropDownTargetMode: 'self', // 'self', 'dialog'\r\n        element: null,\r\n        footer: true,\r\n        okLabel: lang('OK'),\r\n        cancelLabel: lang('Cancel'),\r\n        uploaderType: 'big', // 'big' | 'small'\r\n        confirm: function (data) {\r\n\r\n        },\r\n        cancel: function () {\r\n\r\n        },\r\n        label: lang('Media'),\r\n        autoSelect: true, // depending on the component\r\n        boxed: false,\r\n        multiple: false\r\n    };\r\n\r\n\r\n\r\n    this.settings = $.extend(true, {}, defaults, options);\r\n\r\n    this.$root = $('<div class=\"'+ (this.settings.boxed ? ('card mb-3') : '') +' mw-filepicker-root\"></div>');\r\n    this.root = this.$root[0];\r\n\r\n    $.each(this.settings.components, function (i) {\r\n        this['index'] = i;\r\n    });\r\n\r\n\r\n    this.components = {\r\n        _$inputWrapper: function (label) {\r\n            var html = '<div class=\"mw-ui-field-holder\">' +\r\n                /*'<label>' + label + '</label>' +*/\r\n                '</div>';\r\n            return mw.$(html);\r\n        },\r\n        url: function () {\r\n            var $input = $('<input class=\"mw-ui-field w100\" placeholder=\"http://example.com/image.jpg\">');\r\n            scope.$urlInput = $input;\r\n            var $wrap = this._$inputWrapper(scope._getComponentObject('url').label);\r\n            $wrap.append($input);\r\n            $input.before('<label class=\"mw-ui-label\">'+lang('Insert file url')+'</label>');\r\n            $input.on('input', function () {\r\n                var val = this.value.trim();\r\n                scope.setSectionValue(val || null);\r\n                if(scope.settings.autoSelect) {\r\n\r\n                    scope.result();\r\n                }\r\n            });\r\n            return $wrap[0];\r\n        },\r\n        _setdesktopType: function () {\r\n            var $zone;\r\n            if(scope.settings.uploaderType === 'big') {\r\n                $zone = $('<div class=\"mw-file-drop-zone\">' +\r\n                    '<div class=\"mw-file-drop-zone-holder\">' +\r\n                    '<div class=\"mw-file-drop-zone-img\"></div>' +\r\n                    '<div class=\"mw-ui-progress-small\"><div class=\"mw-ui-progress-bar\" style=\"width: 0%\"></div></div>' +\r\n                    '<span class=\"mw-ui-btn mw-ui-btn-rounded mw-ui-btn-info\">'+lang('Add file')+'</span> ' +\r\n                    '<p>'+lang('or drop files to upload')+'</p>' +\r\n                    '</div>' +\r\n                    '</div>');\r\n            } else if(scope.settings.uploaderType === 'small') {\r\n                $zone = $('<div class=\"mw-file-drop-zone mw-file-drop-zone-small mw-file-drop-square-zone\"> <div class=\"mw-file-drop-zone-holder\"> <span class=\"mw-ui-link\">'+lang('Add file')+'</span> ' +\r\n                    '<p>'+lang('or drop files to upload')+'</p>' +\r\n                    '</div>' +\r\n                    '</div>')\r\n            }\r\n            var $el = $(scope.settings.element).eq(0);\r\n            $el.removeClass('mw-filepicker-desktop-type-big mw-filepicker-desktop-type-small');\r\n            $el.addClass('mw-filepicker-desktop-type-' + scope.settings.uploaderType);\r\n            scope.uploaderHolder.empty().append($zone);\r\n        },\r\n        desktop: function () {\r\n            var $wrap = this._$inputWrapper(scope._getComponentObject('desktop').label);\r\n            scope.uploaderHolder = mw.$('<div class=\"mw-uploader-type-holder\"></div>');\r\n            this._setdesktopType();\r\n            $wrap.append(scope.uploaderHolder);\r\n            scope.uploader = new Uploader({\r\n                element: $wrap[0],\r\n                multiple: scope.settings.multiple,\r\n                accept: scope.settings.accept,\r\n                on: {\r\n                    progress: function (prg) {\r\n                        scope.uploaderHolder.find('.mw-ui-progress-bar').stop().animate({width: prg.percent + '%'}, 'fast');\r\n                    },\r\n                    fileUploadError: function (file) {\r\n                        $(scope).trigger('FileUploadError', [file]);\r\n                    },\r\n                    fileAdded: function (file) {\r\n                        $(scope).trigger('FileAdded', [file]);\r\n                        scope.uploaderHolder.find('.mw-ui-progress-bar').width('1%');\r\n                    },\r\n                    fileUploaded: function (file) {\r\n                        scope.setSectionValue(file);\r\n\r\n                        $(scope).trigger('FileUploaded', [file]);\r\n                        if (scope.settings.autoSelect) {\r\n                            scope.result();\r\n                        }\r\n                        if (scope.settings.fileUploaded) {\r\n                            scope.settings.fileUploaded(file);\r\n                        }\r\n                        if (!scope.settings.multiple) {\r\n                            mw.notification.success('File uploaded');\r\n                            scope.uploaderHolder.find('.mw-file-drop-zone-img').css('backgroundImage', 'url('+file.src+')');\r\n                        }\r\n                        // scope.uploaderHolder.find('.mw-file-drop-zone-img').css('backgroundImage', 'url('+file.src+')');\r\n                    }\r\n                }\r\n            });\r\n            return $wrap[0];\r\n        },\r\n        server: function () {\r\n            var $wrap = this._$inputWrapper(scope._getComponentObject('server').label);\r\n            /*mw.load_module('files/admin', $wrap, function () {\r\n\r\n            }, {'filetype':'images'});*/\r\n\r\n            $(scope).on('$firstOpen', function (e, el, type) {\r\n                var comp = scope._getComponentObject('server');\r\n                if (type === 'server') {\r\n                    mw.top().tools.loading(el, true);\r\n                    var fr = document.createElement('iframe');\r\n                    fr.src =  mw.external_tool('module_dialog') + '?module=files/admin';\r\n                    mw.tools.iframeAutoHeight(fr);\r\n                    fr.style.width = '100%';\r\n                    fr.scrolling = 'no';\r\n                    fr.frameBorder = '0';\r\n                    if(scope.settings._frameMaxHeight) {\r\n                        fr.style.maxHeight = '60vh';\r\n                        fr.scrolling = 'yes';\r\n                    }\r\n                    fr.scrolling = 'auto';\r\n\r\n                    $wrap.append(fr);\r\n                    fr.onload = function () {\r\n                        mw.tools.loading(el, false);\r\n                        this.contentWindow.document.body.classList.remove('mw-external-loading');\r\n                        this.contentWindow.$(this.contentWindow.document.body).on('click', '.mw-browser-list-file', function () {\r\n                            var url = this.href;\r\n                            scope.setSectionValue(url);\r\n                            if (scope.settings.autoSelect) {\r\n                                scope.result();\r\n                            }\r\n                        });\r\n                    };\r\n                }\r\n            });\r\n\r\n            return $wrap[0];\r\n        },\r\n        library: function () {\r\n            var $wrap = this._$inputWrapper(scope._getComponentObject('library').label);\r\n            $(scope).on('$firstOpen', function (e, el, type) {\r\n                var comp = scope._getComponentObject('library');\r\n                if (type === 'library') {\r\n                    mw.tools.loading(el, true);\r\n                    var fr = mw.top().tools.moduleFrame('pictures/media_library');\r\n                    $wrap.append(fr);\r\n                    if(scope.settings._frameMaxHeight) {\r\n                        fr.style.maxHeight = '60vh';\r\n                        fr.scrolling = 'yes';\r\n                    }\r\n                    fr.onload = function () {\r\n                        mw.tools.loading(el, false);\r\n                        this.contentWindow.mw.on.hashParam('select-file', function (pval) {\r\n                            var url = pval.toString();\r\n                            scope.setSectionValue(url);\r\n                            if (scope.settings.autoSelect) {\r\n                                scope.result();\r\n                            }\r\n                        });\r\n                    };\r\n                }\r\n            })\r\n\r\n            /*mw.load_module('pictures/media_library', $wrap);*/\r\n            return $wrap[0];\r\n        }\r\n    };\r\n\r\n    this.hideUploaders = function (type) {\r\n        mw.$('.mw-filepicker-component-section', this.$root).hide();\r\n    };\r\n\r\n    this.showUploaders = function (type) {\r\n        mw.$('.mw-filepicker-component-section', this.$root).show();\r\n    };\r\n\r\n    this.desktopUploaderType = function (type) {\r\n        if(!type) return this.settings.uploaderType;\r\n        this.settings.uploaderType = type;\r\n        this.components._setdesktopType();\r\n    };\r\n\r\n    this.settings.components = this.settings.components.filter(function (item) {\r\n        return !!scope.components[item.type];\r\n    });\r\n\r\n\r\n    this._navigation = null;\r\n    this.__navigation_first = [];\r\n\r\n    this.navigation = function () {\r\n        this._navigationHeader = document.createElement('div');\r\n        this._navigationHeader.className = 'mw-filepicker-component-navigation-header ' + (this.settings.boxed ? 'card-header no-border' : '');\r\n        if (this.settings.hideHeader) {\r\n            this._navigationHeader.style.display = 'none';\r\n        }\r\n        if (this.settings.label) {\r\n            this._navigationHeader.innerHTML = '<h6><strong>' + this.settings.label + '</strong></h6>';\r\n        }\r\n        this._navigationHolder = document.createElement('div');\r\n        if(this.settings.nav === false) {\r\n\r\n        }\r\n        else if(this.settings.nav === 'tabs') {\r\n            var ul = $('<nav class=\"mw-ac-editor-nav\" />');\r\n            this.settings.components.forEach(function (item) {\r\n                ul.append('<a href=\"javascript:;\" class=\"mw-ui-btn-tab\" data-type=\"'+item.type+'\">'+item.label+'</a>');\r\n            });\r\n            this._navigationHolder.appendChild(this._navigationHeader);\r\n            this._navigationHeader.appendChild(ul[0]);\r\n            setTimeout(function () {\r\n                scope._tabs = new Tabs({\r\n                    nav: ul[0].querySelectorAll('a'),\r\n                    tabs: scope.$root[0].querySelectorAll('.mw-filepicker-component-section'),\r\n                    activeClass: 'active',\r\n                    onclick: function (el, event, i) {\r\n                        if(scope.__navigation_first.indexOf(i) === -1) {\r\n                            scope.__navigation_first.push(i);\r\n                            $(scope).trigger('$firstOpen', [el, this.dataset.type]);\r\n                        }\r\n                        scope.manageActiveSectionState();\r\n                    }\r\n                });\r\n            }, 78);\r\n        } else if(this.settings.nav === 'dropdown') {\r\n            var select = $('<select class=\"selectpicker btn-as-link\" data-style=\"btn-sm\" data-width=\"auto\" data-title=\"' + lang('Add file') + '\"/>');\r\n            scope._select = select;\r\n            this.settings.components.forEach(function (item) {\r\n                select.append('<option class=\"nav-item\" value=\"'+item.type+'\">'+item.label+'</option>');\r\n            });\r\n\r\n            this._navigationHolder.appendChild(this._navigationHeader);\r\n            this._navigationHeader.appendChild(select[0]);\r\n            select.on('changed.bs.select', function (e, xval) {\r\n                var val = select.selectpicker('val');\r\n                var componentObject = scope._getComponentObject(val) ;\r\n                var index = scope.settings.components.indexOf(componentObject);\r\n                var items = $('.mw-filepicker-component-section', scope.$root);\r\n                if(scope.__navigation_first.indexOf(val) === -1) {\r\n                    scope.__navigation_first.push(val);\r\n                    $(scope).trigger('$firstOpen', [items.eq(index)[0], val]);\r\n                }\r\n                if(scope.settings.dropDownTargetMode === 'dialog') {\r\n                    var temp = document.createElement('div');\r\n                    var item = items.eq(index);\r\n                    item.before(temp);\r\n                    item.show();\r\n                    var footer = false;\r\n                    if (scope._getComponentObject('url').index === index ) {\r\n                        footer =  document.createElement('div');\r\n                        var footerok = $('<button type=\"button\" class=\"mw-ui-btn mw-ui-btn-info\">' + scope.settings.okLabel + '</button>');\r\n                        var footercancel = $('<button type=\"button\" class=\"mw-ui-btn\">' + scope.settings.cancelLabel + '</button>');\r\n                        footerok.disabled = true;\r\n                        footer.appendChild(footercancel[0]);\r\n                        footer.appendChild(footerok[0]);\r\n                        footer.appendChild(footercancel[0]);\r\n                        footercancel.on('click', function () {\r\n                            scope.__pickDialog.remove();\r\n                        });\r\n                        footerok.on('click', function () {\r\n                            scope.setSectionValue(scope.$urlInput.val().trim() || null);\r\n                            if (scope.settings.autoSelect) {\r\n                                scope.result();\r\n                            }\r\n                            // scope.__pickDialog.remove();\r\n                        });\r\n                    }\r\n\r\n                    scope.__pickDialog = mw.top().dialog({\r\n                        overlay: true,\r\n                        content: item,\r\n                        beforeRemove: function () {\r\n                            $(temp).replaceWith(item);\r\n                            item.hide();\r\n                            scope.__pickDialog = null;\r\n                        },\r\n                        footer: footer\r\n                    });\r\n                } else {\r\n                    items.hide().eq(index).show();\r\n                }\r\n            });\r\n        }\r\n        this.$root.prepend(this._navigationHolder);\r\n\r\n    };\r\n    this.__displayControllerByTypeTime = null;\r\n\r\n    this.displayControllerByType = function (type) {\r\n        type = (type || '').trim();\r\n        var item = this._getComponentObject(type) ;\r\n        clearTimeout(this.__displayControllerByTypeTime);\r\n        this.__displayControllerByTypeTime = setTimeout(function () {\r\n            if(scope.settings.nav === 'tabs') {\r\n                mw.$('[data-type=\"'+type+'\"]', scope.$root).click();\r\n            } else if(scope.settings.nav === 'dropdown') {\r\n                $(scope._select).selectpicker('val', type);\r\n            }\r\n        }, 10);\r\n    };\r\n\r\n\r\n\r\n    this.footer = function () {\r\n        if(!this.settings.footer || this.settings.autoSelect) return;\r\n        this._navigationFooter = document.createElement('div');\r\n        this._navigationFooter.className = 'mw-ui-form-controllers-footer mw-filepicker-footer ' + (this.settings.boxed ? 'card-footer' : '');\r\n        this.$ok = $('<button type=\"button\" class=\"mw-ui-btn mw-ui-btn-info\">' + this.settings.okLabel + '</button>');\r\n        this.$cancel = $('<button type=\"button\" class=\"mw-ui-btn \">' + this.settings.cancelLabel + '</button>');\r\n        this._navigationFooter.appendChild(this.$cancel[0]);\r\n        this._navigationFooter.appendChild(this.$ok[0]);\r\n        this.$root.append(this._navigationFooter);\r\n        this.$ok[0].disabled = true;\r\n        this.$ok.on('click', function () {\r\n            scope.result();\r\n        });\r\n        this.$cancel.on('click', function () {\r\n            scope.settings.cancel()\r\n        });\r\n    };\r\n\r\n    this.result = function () {\r\n        var activeSection = this.activeSection();\r\n        if(this.settings.onResult) {\r\n            this.settings.onResult.call(this, activeSection._filePickerValue);\r\n        }\r\n        $(scope).trigger('Result', [activeSection._filePickerValue]);\r\n    };\r\n\r\n    this.getValue = function () {\r\n        return this.activeSection()._filePickerValue;\r\n    };\r\n\r\n    this._getComponentObject = function (type) {\r\n        return this.settings.components.find(function (comp) {\r\n            return comp.type && comp.type === type;\r\n        });\r\n    };\r\n\r\n    this._sections = [];\r\n    this.buildComponentSection = function () {\r\n        var main = mw.$('<div class=\"'+(this.settings.boxed ? 'card-body' : '') +' mw-filepicker-component-section\"></div>');\r\n        this.$root.append(main);\r\n        this._sections.push(main[0]);\r\n        return main;\r\n    };\r\n\r\n    this.buildComponent = function (component) {\r\n        if(this.components[component.type]) {\r\n            return this.components[component.type]();\r\n        }\r\n    };\r\n\r\n    this.buildComponents = function () {\r\n        $.each(this.settings.components, function () {\r\n            var component = scope.buildComponent(this);\r\n            if(component){\r\n                var sec = scope.buildComponentSection();\r\n                sec.append(component);\r\n            }\r\n        });\r\n    };\r\n\r\n    this.build = function () {\r\n        this.navigation();\r\n        this.buildComponents();\r\n        if(this.settings.nav === 'dropdown') {\r\n            $('.mw-filepicker-component-section', scope.$root).hide().eq(0).show();\r\n        }\r\n        this.footer();\r\n    };\r\n\r\n    this.init = function () {\r\n        this.build();\r\n        if (this.settings.element) {\r\n            $(this.settings.element).eq(0).append(this.$root);\r\n        }\r\n        if($.fn.selectpicker) {\r\n            $('select', scope.$root).selectpicker();\r\n        }\r\n    };\r\n\r\n    this.hide = function () {\r\n        this.$root.hide();\r\n    };\r\n    this.show = function () {\r\n        this.$root.show();\r\n    };\r\n\r\n    this.activeSection = function () {\r\n        return $(this._sections).filter(function (){\r\n            return $(this).css('display') !== 'none';\r\n        })[0];\r\n    };\r\n\r\n    this.setSectionValue = function (val) {\r\n        var activeSection = this.activeSection();\r\n        if(activeSection) {\r\n            activeSection._filePickerValue = val;\r\n        }\r\n\r\n        if(scope.__pickDialog) {\r\n            scope.__pickDialog.remove();\r\n        }\r\n        this.manageActiveSectionState();\r\n    };\r\n    this.manageActiveSectionState = function () {\r\n        // if user provides value for more than one section, the active value will be the one in the current section\r\n        var activeSection = this.activeSection();\r\n        if (this.$ok && this.$ok[0]) {\r\n            this.$ok[0].disabled = !(activeSection && activeSection._filePickerValue);\r\n        }\r\n    };\r\n\r\n    this.init();\r\n}\r\n\r\n\r\nmw.filePicker = FilePicker;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\r\nimport {ElementManager} from \"../classes/element\";\r\nimport {State} from \"../classes/state\";\r\nimport {CSSParser} from \"../classes/css\";\r\nimport {DomService} from \"../classes/dom\";\r\nimport {Dialog} from \"../classes/dialog\";\r\n\r\n\r\n\r\nvar EditorPredefinedControls = {\r\n    'default': [\r\n        [ 'bold', 'italic', 'underline' ],\r\n    ],\r\n    smallEditorDefault: [\r\n        ['bold', 'italic', '|', 'link']\r\n    ]\r\n};\r\n\r\nclass EditorCore {\r\n    constructor() {\r\n        this.defaults = {\r\n            regions: null,\r\n            notEditableSelector: '.module',\r\n            document: document,\r\n            executionDocument: document,\r\n            mode: 'div', // iframe | div | document\r\n            controls: 'default',\r\n            smallEditor: false,\r\n            scripts: [],\r\n            cssFiles: [],\r\n            content: '',\r\n            url: null,\r\n            skin: 'default',\r\n            state: null,\r\n            iframeAreaSelector: null,\r\n            activeClass: 'active-control',\r\n            interactionControls: [\r\n                'image', 'linkTooltip', 'tableManager'\r\n            ],\r\n            language: 'en',\r\n            rootPath:  'http://localhost/mw2/userfiles/modules/microweber/api/editor',\r\n            editMode: 'normal', // normal | liveedit\r\n            bar: null,\r\n        };\r\n    }\r\n}\r\n\r\n\r\nclass Editor extends EditorCore  {\r\n\r\n    constructor(options) {\r\n        super();\r\n        options = options || {};\r\n\r\n\r\n\r\n        this.settings = Object.assign({}, this.defaults, options);\r\n\r\n        if (typeof this.settings.controls === 'string') {\r\n            this.settings.controls = EditorPredefinedControls[this.settings.controls] || EditorPredefinedControls.default;\r\n        }\r\n\r\n        if(!!this.settings.smallEditor) {\r\n            if(this.settings.smallEditor === true) {\r\n                this.settings.smallEditor = EditorPredefinedControls.smallEditorDefault;\r\n            } else if (typeof this.settings.smallEditor === 'string') {\r\n                this.settings.smallEditor = EditorPredefinedControls[this.settings.smallEditor] || EditorPredefinedControls.smallEditorDefault;\r\n            }\r\n        }\r\n\r\n        this.document = this.settings.document;\r\n        this.executionDocument = this.settings.executionDocument;\r\n\r\n        this.actionWindow = this.document.defaultView;\r\n        this.executionWindow = this.executionDocument.defaultView;\r\n\r\n        if(!this.settings.selector && this.settings.element){\r\n            this.settings.selector = this.settings.element;\r\n        }\r\n\r\n        if(!this.settings.selector && this.settings.mode === 'document'){\r\n            this.settings.selector = this.document.body;\r\n        }\r\n        if(!this.settings.selector){\r\n            console.warn('MWEditor - selector not specified');\r\n            return;\r\n        }\r\n\r\n        this.settings.selectorNode = $(this.settings.selector)[0];\r\n\r\n        if (this.settings.selectorNode) {\r\n            this.settings.selectorNode.__MWEditor = this;\r\n        }\r\n\r\n        this.settings.isTextArea = this.settings.selectorNode.nodeName && this.settings.selectorNode.nodeName === 'TEXTAREA';\r\n        this.dialog = function (options) {\r\n            options.document = this.document;\r\n\r\n            return new Dialog(options)\r\n        }\r\n\r\n        this.selection = this.getSelection();\r\n\r\n        this._interactionTime = new Date().getTime();\r\n\r\n        this.interactionControls = [];\r\n        this._registerChangeTimer = null;\r\n        this.controls = [];\r\n        this.api = MWEditor.api(this);\r\n\r\n        this._addControllerGroups = [];\r\n        this._initInputRecordTime = null;\r\n        this.interactionData = {};\r\n        this.init();\r\n\r\n    }\r\n\r\n\r\n\r\n    getSelection () {\r\n        return this.actionWindow.getSelection();\r\n    };\r\n\r\n\r\n    createInteractionControls () {\r\n        this.settings.interactionControls.forEach((ctrl) => {\r\n            if (MWEditor.interactionControls[ctrl]) {\r\n                var int = new MWEditor.interactionControls[ctrl](this, this);\r\n                if(!int.element){\r\n                    int.element = int.render();\r\n                }\r\n                this.actionWindow.document.body.appendChild(int.element.node);\r\n                this.interactionControls.push(int);\r\n            }\r\n        });\r\n    };\r\n\r\n    lang (key)  {\r\n        if (MWEditor.i18n[this.settings.language] && MWEditor.i18n[this.settings.language][key]) {\r\n            return  MWEditor.i18n[this.settings.language][key];\r\n        }\r\n        //console.warn(key + ' is not specified for ' + this.settings.language + ' language');\r\n        return key;\r\n    }\r\n\r\n\r\n\r\n    addDependencies (obj){\r\n        this.controls.forEach((ctrl) => {\r\n            if (ctrl.dependencies) {\r\n                ctrl.dependencies.forEach((dep) => {\r\n                    this.addDependency(dep);\r\n                });\r\n            }\r\n        });\r\n        this.interactionControls.forEach( (int) => {\r\n            if (int.dependencies) {\r\n                int.dependencies.forEach( (dep) => {\r\n                    this.addDependency(dep);\r\n                });\r\n            }\r\n        });\r\n        var node = this.actionWindow.document.createElement('link');\r\n        node.href = this.settings.rootPath + '/area-styles.css';\r\n        node.type = 'text/css';\r\n        node.rel = 'stylesheet';\r\n        this.actionWindow.document.body.appendChild(node);\r\n    };\r\n    addDependency (obj) {\r\n        var targetWindow = obj.targetWindow || this.actionWindow;\r\n        if (!type) {\r\n            type = url.split('.').pop();\r\n        }\r\n        if(!type || !url) return;\r\n        var node;\r\n        if(type === 'css') {\r\n            node = targetWindow.document.createElement('link');\r\n            node.rel = 'stylesheet';\r\n            node.href = url;\r\n            node.type = 'text/css';\r\n        } else if(type === 'js') {\r\n            node = targetWindow.document.createElement('script');\r\n            node.src = url;\r\n        }\r\n        targetWindow.document.body.appendChild(node);\r\n    };\r\n\r\n    interactionControlsRun (data) {\r\n        this.interactionControls.forEach(function (ctrl) {\r\n            ctrl.interact(data);\r\n        });\r\n    };\r\n\r\n    _observe (e) {\r\n        e = e || {type: 'action'};\r\n        var max = 78;\r\n        var eventIsActionLike = e.type === 'click' || e.type === 'execCommand' || e.type === 'keydown' || e.type === 'action';\r\n        var event = e.originaleEvent ? e.originaleEvent : e;\r\n        var localTarget = event.target;\r\n\r\n        if (!e.target) {\r\n            localTarget = this.getSelection().focusNode;\r\n         }\r\n        var wTarget = localTarget;\r\n        if(eventIsActionLike) {\r\n            var shouldCloseSelects = false;\r\n            while (wTarget) {\r\n                var cc = wTarget.classList;\r\n                if(cc) {\r\n                    if(cc.contains('mw-editor-controller-component-select')) {\r\n                        break;\r\n                    } else if(cc.contains('mw-bar-control-item-group')) {\r\n                        break;\r\n                    } else if(cc.contains('mw-editor-area')) {\r\n                        shouldCloseSelects = true;\r\n                        break;\r\n                    } else if(cc.contains('mw-editor-frame-area')) {\r\n                        shouldCloseSelects = true;\r\n                        break;\r\n                    } else if(cc.contains('mw-editor-wrapper')) {\r\n                        shouldCloseSelects = true;\r\n                        break;\r\n                    }\r\n                }\r\n                wTarget = wTarget.parentNode;\r\n            }\r\n            if(shouldCloseSelects) {\r\n                MWEditor.core._preSelect();\r\n            }\r\n        }\r\n        var time = new Date().getTime();\r\n        if(eventIsActionLike || (time - this._interactionTime) > max){\r\n            if (e.pageX) {\r\n                console.log(this.interactionData, this)\r\n                this.interactionData.pageX = e.pageX;\r\n                this.interactionData.pageY = e.pageY;\r\n            }\r\n            this._interactionTime = time;\r\n            this.selection = this.getSelection();\r\n            if (this.selection.rangeCount === 0) {\r\n                return;\r\n            }\r\n            var target = this.api.elementNode( this.selection.getRangeAt(0).commonAncestorContainer );\r\n            var css = CSSParser(target);\r\n            var api = this.api;\r\n\r\n\r\n            var iterData = {\r\n                selection: this.selection,\r\n                target: target,\r\n                localTarget: localTarget,\r\n                isImage: localTarget.nodeName === 'IMG' || target.nodeName === 'IMG',\r\n                css: css.get,\r\n                cssNative: css.css,\r\n                event: event,\r\n                api: api,\r\n                this: this,\r\n                isEditable: this.api.isSelectionEditable(),\r\n                eventIsActionLike: eventIsActionLike,\r\n            };\r\n\r\n            this.interactionControlsRun(iterData);\r\n            this.controls.forEach((ctrl) => {\r\n                if(ctrl.checkSelection) {\r\n                    ctrl.checkSelection({\r\n                        selection: this.selection,\r\n                        controller: ctrl,\r\n                        target: target,\r\n                        css: css.get,\r\n                        cssNative: css.css,\r\n                        api: api,\r\n                        eventIsActionLike: eventIsActionLike,\r\n                        this: this,\r\n                        isEditable: this.api.isSelectionEditable()\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    initInteraction () {\r\n        var ait = 100,\r\n            currt = new Date().getTime();\r\n\r\n        $(this.actionWindow.document).on('selectionchange', (e) => {\r\n             $(this).trigger('selectionchange', [{\r\n                event: e,\r\n                interactionData: this.interactionData\r\n            }]);\r\n        });\r\n\r\n        $(this).on('execCommand', (e) => {\r\n            this._observe(e);\r\n        });\r\n        this.state.on('undo', (e) => {\r\n            setTimeout(() => {\r\n                this._observe(e);\r\n            }, 123);\r\n        });\r\n        this.state.on('redo', (e) => {\r\n            var active = this.state.active();\r\n            var target = active ? active.target : this.getSelection().focusNode();\r\n            setTimeout(() => {\r\n                this._observe(e);\r\n            }, 123);\r\n        });\r\n\r\n        this.createInteractionControls();\r\n    };\r\n\r\n\r\n    preventEvents () {\r\n        if(!this._preventEvents) {\r\n            this._preventEvents = [];\r\n        }\r\n\r\n        var node;\r\n        if(this.area && this._preventEvents.indexOf(this.area.node) === -1) {\r\n            this._preventEvents.push(this.area.node);\r\n            node = this.area.node;\r\n        } else if(this.$iframeArea && this._preventEvents.indexOf(this.$iframeArea[0]) === -1) {\r\n            this._preventEvents.push(this.$iframeArea[0]);\r\n            node = this.$iframeArea[0];\r\n        }\r\n        var ctrlDown = false;\r\n        var ctrlKey = 17, vKey = 86, cKey = 67, zKey = 90;\r\n        node.onkeydown = (e) => {\r\n            if (e.keyCode === ctrlKey || e.keyCode === 91) {\r\n                ctrlDown = true;\r\n            }\r\n            if ((ctrlDown && e.keyCode === zKey) /*|| (ctrlDown && e.keyCode === vKey)*/ || (ctrlDown && e.keyCode === cKey)) {\r\n                e.preventDefault();\r\n                return false;\r\n            }\r\n        };\r\n        node.onkeyup = (e) => {\r\n            if (e.keyCode === 17 || e.keyCode === 91) {\r\n                ctrlDown = false;\r\n            }\r\n        };\r\n    };\r\n    initState () {\r\n        this.state = this.settings.state || (new State());\r\n    };\r\n\r\n    controllerActive (node, active) {\r\n        node.classList[active ? 'add' : 'remove'](this.settings.activeClass);\r\n    };\r\n\r\n    createFrame () {\r\n        this.frame = this.document.createElement('iframe');\r\n        this.frame.className = 'mw-editor-frame';\r\n        this.frame.allow = 'accelerometer; autoplay; encrypted-media; gyrothis; picture-in-picture';\r\n        this.frame.allowFullscreen = true;\r\n        this.frame.scrolling = \"yes\";\r\n        this.frame.width = \"100%\";\r\n        this.frame.frameBorder = \"0\";\r\n        if (this.settings.url) {\r\n            this.frame.src = this.settings.url;\r\n        } else {\r\n\r\n        }\r\n\r\n        $(this.frame).on('load', () => {\r\n            if (!this.settings.iframeAreaSelector) {\r\n                var area = document.createElement('div');\r\n                area.style.outline = 'none';\r\n                area.className = 'mw-editor-frame-area';\r\n                this.settings.iframeAreaSelector =  '.' + area.className;\r\n                this.contentWindow.document.body.append(area);\r\n                area.style.minHeight = '100px';\r\n            }\r\n            this.$iframeArea = ElementManager(this.settings.iframeAreaSelector, this.contentWindow.document);\r\n\r\n            this.$iframeArea.html(this.settings.content || '');\r\n            this.$iframeArea.on('input', () => {\r\n                this.registerChange();\r\n            });\r\n            this.actionWindow = this.contentWindow;\r\n            this.$editArea = this.$iframeArea;\r\n            mw.tools.iframeAutoHeight(this.frame);\r\n\r\n            this.preventEvents();\r\n            $(this).trigger('ready');\r\n        });\r\n        this.wrapper.appendChild(this.frame);\r\n    };\r\n\r\n    createWrapper () {\r\n        this.wrapper = this.document.createElement('div');\r\n        this.wrapper.className = 'mw-editor-wrapper mw-editor-' + this.settings.skin;\r\n    };\r\n\r\n    _syncTextArea (content) {\r\n\r\n        if(this.$editArea){\r\n            $('[contenteditable]', this.$editArea).removeAttr('contenteditable');\r\n        }\r\n\r\n        content = content || this.$editArea.html();\r\n        if (this.settings.isTextArea) {\r\n            $(this.settings.selectorNode).val(content);\r\n            $(this.settings.selectorNode).trigger('change');\r\n        }\r\n    };\r\n\r\n\r\n    registerChange (content) {\r\n        clearTimeout(this._registerChangeTimer);\r\n        this._registerChangeTimer = setTimeout(() => {\r\n            content = content || this.$editArea.html();\r\n            this._syncTextArea(content);\r\n            $(this).trigger('change', [content]);\r\n        }, 78);\r\n    };\r\n\r\n    createArea () {\r\n        var content = this.settings.content || '';\r\n        if(!content && this.settings.isTextArea) {\r\n            content = this.settings.selectorNode.value;\r\n        }\r\n        this.area = ElementManager({\r\n            props: { className: 'mw-editor-area', innerHTML: content }\r\n        });\r\n        this.area.node.contentEditable = true;\r\n\r\n        this.area.node.oninput = () => {\r\n            this.registerChange();\r\n        };\r\n        this.wrapper.appendChild(this.area.node);\r\n        this.$editArea = this.area;\r\n        this.preventEvents();\r\n        $(this).trigger('ready');\r\n    };\r\n\r\n    documentMode() {\r\n        if(!this.settings.regions) {\r\n            console.warn('Regions are not defined in Document mode.');\r\n            return;\r\n        }\r\n        this.wrapper.className += ' mw-editor-wrapper-document-mode';\r\n        ElementManager(this.document.body).append(this.wrapper)\r\n        this.document.body.mwEditor = this;\r\n        $(this).trigger('ready');\r\n    };\r\n\r\n    setContent (content, trigger) {\r\n        if(typeof trigger === 'undefined'){\r\n            trigger = true;\r\n        }\r\n        this.$editArea.html(content);\r\n        if(trigger){\r\n            this.registerChange(content);\r\n        }\r\n    };\r\n\r\n    nativeElement (node) {\r\n        return node.node ? node.node : node;\r\n    };\r\n\r\n\r\n    addControllerGroup (obj, row, bar) {\r\n        if(!bar) {\r\n            bar = 'bar';\r\n        }\r\n        var group = obj.group;\r\n        var id = mw.id('mw.editor-group-');\r\n        var el = ElementManager({\r\n            props: {\r\n                className: 'mw-bar-control-item mw-bar-control-item-group',\r\n                id:id\r\n            }\r\n        });\r\n\r\n        var groupel = ElementManager({\r\n                props:{\r\n                    className: 'mw-bar-control-item-group-contents'\r\n                }\r\n            });\r\n\r\n        var icon = MWEditor.core.button({\r\n            tag:'span',\r\n            props: {\r\n                className: ' mw-editor-group-button',\r\n                innerHTML: '<span class=\"mw-editor-group-button-caret\"></span>'\r\n            }\r\n        });\r\n        if(group.icon) {\r\n            icon.prepend('<span class=\"' + group.icon + ' mw-editor-group-button-icon\"></span>');\r\n            icon.on('click', () => {\r\n                MWEditor.core._preSelect(this.parentNode);\r\n                this.parentNode.classList.toggle('active');\r\n            });\r\n\r\n        } else if(group.controller) {\r\n            if(this.controllers[group.controller]){\r\n                var ctrl = new this.controllers[group.controller](this, this.api, this);\r\n                this.controls.push(ctrl);\r\n                icon.prepend(ctrl.element);\r\n                ElementManager(icon.get(0).querySelector('.mw-editor-group-button-caret')).on('click', () => {\r\n                    MWEditor.core._preSelect(this.parentNode.parentNode);\r\n                    this.parentNode.parentNode.classList.toggle('active');\r\n                });\r\n            } else if(this.controllersHelpers[group.controller]){\r\n                groupel.append(this.controllersHelpers[group.controller]());\r\n            }\r\n        }\r\n        el.append(icon);\r\n\r\n        groupel.on('click', () => {\r\n            MWEditor.core._preSelect();\r\n        });\r\n\r\n        var media;\r\n        obj.group.when = obj.group.when || 9999;\r\n        // at what point group buttons become like dropdown - by default it's always a dropdown\r\n        if (obj.group.when) {\r\n            if (typeof obj.group.when === 'number') {\r\n                media = '(max-width: ' + obj.group.when + 'px)';\r\n            } else {\r\n                media = obj.group.when;\r\n            }\r\n        }\r\n\r\n\r\n\r\n        el.append(groupel);\r\n        row = typeof row !== 'undefined' ? row :  this.settings.controls.length - 1;\r\n        group.controls.forEach((name) => {\r\n            if(this.controllers[name]){\r\n                var ctrl = new this.controllers[name](this, this.api, this);\r\n                this.controls.push(ctrl);\r\n                groupel.append(ctrl.element);\r\n            } else if(this.controllersHelpers[name]){\r\n                groupel.append(this.controllersHelpers[name]());\r\n            }\r\n        });\r\n\r\n        this[bar].add(el, row);\r\n\r\n        this._addControllerGroups.push({\r\n            el: el,\r\n            row: row,\r\n            obj: obj,\r\n            media: media\r\n        });\r\n        return el;\r\n    };\r\n\r\n    controlGroupManager () {\r\n        var check = () => {\r\n            var i = 0, l = this._addControllerGroups.length;\r\n            for ( ; i< l ; i++) {\r\n                var item = this._addControllerGroups[i];\r\n                var media = item.media;\r\n                if(media) {\r\n                    var match = this.document.defaultView.matchMedia(media);\r\n                    item.el.$node[match.matches ? 'addClass' : 'removeClass']('mw-editor-control-group-media-matches');\r\n                }\r\n            }\r\n        };\r\n        $(window).on('load resize orientationchange', () => {\r\n            check();\r\n        });\r\n        check();\r\n    };\r\n\r\n    addController (name, row, bar) {\r\n        row = typeof row !== 'undefined' ? row :  this.settings.controls.length - 1;\r\n        if (!bar) {\r\n            bar = 'bar';\r\n        }\r\n        if(this.controllers[name]){\r\n            var ctrl = new this.controllers[name](this, this.api, this);\r\n            if (!ctrl.element) {\r\n                ctrl.element = ctrl.render();\r\n            }\r\n\r\n            this.controls.push(ctrl);\r\n            this[bar].add(ctrl.element, row);\r\n        } else if(this.controllersHelpers[name]){\r\n            this[bar].add(this.controllersHelpers[name](), row);\r\n        }\r\n    };\r\n\r\n    createSmallEditor ()  {\r\n        if (!this.settings.smallEditor) {\r\n            return;\r\n        }\r\n        this.smallEditor = ElementManager({\r\n            props: {\r\n                className: 'mw-small-editor mw-small-editor-skin-' + this.settings.skin\r\n            }\r\n        });\r\n\r\n        this.smallEditorBar = mw.bar();\r\n\r\n        this.smallEditor.hide();\r\n        this.smallEditor.append(this.smallEditorBar.bar);\r\n        for (var i1 = 0; i1 < this.settings.smallEditor.length; i1++) {\r\n            var item = this.settings.smallEditor[i1];\r\n            this.smallEditorBar.createRow();\r\n            for (var i2 = 0; i2 < item.length; i2++) {\r\n                if( typeof item[i2] === 'string') {\r\n                    this.addController(item[i2], i1, 'smallEditorBar');\r\n                } else if( typeof item[i2] === 'object') {\r\n                    this.addControllerGroup(item[i2], i1, 'smallEditorBar');\r\n                }\r\n            }\r\n        }\r\n        this.$editArea.on('mouseup touchend',  (e, data) => {\r\n            if (this.selection && !this.selection.isCollapsed) {\r\n                if(!DomService.hasParentsWithClass(e.target, 'mw-bar')){\r\n                    this.smallEditor.css({\r\n                        top: this.interactionData.pageY - this.smallEditor.height() - 20,\r\n                        left: this.interactionData.pageX,\r\n                        display: 'block'\r\n                    });\r\n                }\r\n            } else {\r\n                this.smallEditor.hide();\r\n            }\r\n        });\r\n        this.actionWindow.document.body.appendChild(this.smallEditor.node);\r\n    };\r\n    createBar () {\r\n        this.bar = mw.settings.bar || mw.bar();\r\n        for (var i1 = 0; i1 < this.settings.controls.length; i1++) {\r\n            var item = this.settings.controls[i1];\r\n            this.bar.createRow();\r\n            for (var i2 = 0; i2 < item.length; i2++) {\r\n                if( typeof item[i2] === 'string') {\r\n                    this.addController(item[i2], i1);\r\n                } else if( typeof item[i2] === 'object') {\r\n                    this.addControllerGroup(item[i2], i1);\r\n                }\r\n            }\r\n        }\r\n        this.wrapper.appendChild(this.bar.bar);\r\n    };\r\n\r\n    _onReady  ()  {\r\n\r\n        $(this).on('ready', () => {\r\n            this.initInteraction();\r\n            this.api.execCommand('enableObjectResizing', false, 'false');\r\n            this.api.execCommand('2D-Position', false, false);\r\n            this.api.execCommand(\"enableInlineTableEditing\", null, false);\r\n\r\n            if(!this.state.hasRecords()){\r\n                this.state.record({\r\n                    $initial: true,\r\n                    target: this.$editArea.get(0),\r\n                    value: this.$editArea.get(0).innerHTML\r\n                });\r\n            }\r\n            this.settings.regions = this.settings.regions || this.$editArea;\r\n            this.$editArea.on('touchstart touchend click keydown execCommand mousemove touchmove', e => this._observe);\r\n\r\n            Array.from(this.actionWindow.document.querySelectorAll(this.settings.regions)).forEach((el) => {\r\n                el.contentEditable = false;\r\n                ElementManager(el).on('mousedown touchstart', (e) =>{\r\n\r\n                    e.stopPropagation();\r\n                    var curr = DomService.firstParentOrCurrent(e.target, this.settings.regions);\r\n                    Array.from(this.actionWindow.document.querySelectorAll(this.settings.regions)).forEach(function (el){\r\n                        el.contentEditable = el === curr;\r\n                    });\r\n                })\r\n            })\r\n\r\n            Array.from(this.actionWindow.document.querySelectorAll(this.settings.notEditableSelector)).forEach(function (el){\r\n                el.contentEditable = false;\r\n            })\r\n\r\n\r\n            if (this.settings.editMode === 'liveedit') {\r\n                this.liveEditMode();\r\n            }\r\n            var css = {};\r\n            if(this.settings.minHeight) {\r\n                css.minHeight = this.settings.minHeight;\r\n            }\r\n            if(this.settings.maxHeight) {\r\n                css.maxHeight = this.settings.maxHeight;\r\n            }\r\n            if(this.settings.height) {\r\n                css.height = this.settings.height;\r\n            }\r\n            if(this.settings.minWidth) {\r\n                css.minWidth = this.settings.minWidth;\r\n            }\r\n            if(this.settings.maxWidth) {\r\n                css.maxWidth = this.settings.maxWidth;\r\n            }\r\n            if(this.settings.width) {\r\n                css.width = this.settings.width;\r\n            }\r\n            this.$editArea.css(css);\r\n            this.addDependencies();\r\n            this.createSmallEditor();\r\n\r\n        });\r\n    };\r\n\r\n    liveEditMode () {\r\n        this.liveedit = MWEditor.liveeditMode(this.actionWindow.document.body, this);\r\n    };\r\n\r\n\r\n    _initInputRecord () {\r\n        $(this).on('change',   (e, html) => {\r\n            clearTimeout(this._initInputRecordTime);\r\n            this._initInputRecordTime = setTimeout(() => {\r\n                this.state.record({\r\n                    target: this.$editArea.get(0),\r\n                    value: html\r\n                });\r\n            }, 600);\r\n\r\n        });\r\n    };\r\n\r\n    __insertEditor (){\r\n        if (this.settings.isTextArea) {\r\n            var el = ElementManager(this.settings.selector);\r\n            el.get(0).mwEditor = this;\r\n            el.hide();\r\n            var areaWrapper = ElementManager();\r\n            areaWrapper.node.mwEditor = this;\r\n            el.after(areaWrapper.node);\r\n            areaWrapper.append(this.wrapper);\r\n        } else {\r\n            ElementManager(this.settings.selector).append(this.wrapper).get(0).mwEditor = this;\r\n        }\r\n    };\r\n\r\n    init () {\r\n        this.controllers = MWEditor.controllers;\r\n        this.controllersHelpers = MWEditor.controllersHelpers;\r\n        this.initState();\r\n\r\n        this.createWrapper();\r\n        this.createBar();\r\n\r\n        if (this.settings.mode === 'div') {\r\n            this.createArea();\r\n        } else if (this.settings.mode === 'iframe') {\r\n            this.createFrame();\r\n        } else if (this.settings.mode === 'document') {\r\n            this.documentMode();\r\n        }\r\n\r\n        this._onReady();\r\n\r\n        if(this.settings.iframe) {\r\n            this.actionWindow = this.settings.iframe.contentWindow;\r\n            this.executionDocument = this.settings.iframe.contentWindow.document;\r\n            this.$iframeArea = $(this.settings.iframeAreaSelector, this.executionDocument);\r\n             if(this.executionDocument.readyState === 'complete') {\r\n                this.$iframeArea = ElementManager(this.settings.iframeAreaSelector, this.executionDocument);\r\n                this.$editArea = this.$iframeArea;\r\n                $(this).trigger('ready');\r\n            } else {\r\n                this.actionWindow.addEventListener('load', () => {\r\n                    this.$iframeArea = ElementManager(this.settings.iframeAreaSelector, this.executionDocument);\r\n                    this.$editArea = this.$iframeArea;\r\n                     $(this).trigger('ready');\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        if (this.settings.mode !== 'document') {\r\n            this._initInputRecord();\r\n            this.__insertEditor();\r\n        }\r\n        this.controlGroupManager();\r\n\r\n    };\r\n\r\n\r\n }\r\n\r\nif (window.mw) {\r\n   mw.Editor = function (options){\r\n       options = options || {};\r\n       if(!options.selector && options.element){\r\n           options.selector = options.element;\r\n       }\r\n       if(options.selector){\r\n           if (typeof options.selector === 'string') {\r\n               options.selector = (options.document || document).querySelector(options.selector);\r\n           }\r\n           if (options.selector && options.selector.__MWEditor) {\r\n               return options.selector.__MWEditor;\r\n           }\r\n       }\r\n       return new Editor(options);\r\n   };\r\n}\r\n\r\nwindow.MWEditor = function (options) {\r\n    return new Editor(options)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\nimport {ElementManager} from \"../classes/element\";\r\n(function(){\r\n    var Bar = function(options) {\r\n\r\n        options = options || {};\r\n        var defaults = {\r\n            document: document,\r\n            register: null\r\n        };\r\n        this.settings = Object.assign({}, defaults, options);\r\n        this.document = this.settings.document || document;\r\n\r\n        this.register = [];\r\n\r\n        this.delimiter = function(){\r\n            var el = this.document.createElement('span');\r\n            el.className = 'mw-bar-delimiter';\r\n            return el;\r\n        };\r\n\r\n        this.create = function(){\r\n            this.bar = this.document.createElement('div');\r\n            this.bar.className = 'mw-bar';\r\n            this.element = ElementManager(this.bar);\r\n        };\r\n\r\n        this.rows = [];\r\n\r\n        this.createRow = function () {\r\n            var row = this.document.createElement('div');\r\n            row.className = 'mw-bar-row';\r\n            this.rows.push(row);\r\n            this.bar.appendChild(row);\r\n        };\r\n        this.nativeElement = function (node) {\r\n            if(!node) return;\r\n            return node.node ? node.node : node;\r\n        };\r\n\r\n        this.add = function (what, row) {\r\n            row = row || 0;\r\n            if(!this.rows[row]) {\r\n                return;\r\n            }\r\n            if(what === '|') {\r\n                this.rows[row].appendChild(this.delimiter());\r\n            } else if(typeof what === 'function') {\r\n                this.rows[row].appendChild(what().node);\r\n            } else {\r\n                var el = this.nativeElement(what);\r\n                if(el) {\r\n                    el.classList.add('mw-bar-control-item')\r\n                    this.rows[row].appendChild(el);\r\n                }\r\n\r\n            }\r\n        };\r\n\r\n        this.init = function(){\r\n            this.create();\r\n        };\r\n        this.init();\r\n    };\r\n    mw.bar = function(options){\r\n        return new Bar(options);\r\n    };\r\n})();\r\n","import {DomService} from \"../classes/dom\";\nimport {Check} from \"./check\";\n\nconst rangeWalker = (range, doc) => {\n    doc = doc || document;\n    let ranges = [];\n    let el = range.startContainer;\n    let elsToVisit = true;\n    while (elsToVisit) {\n        let startOffset = el === range.startContainer ? range.startOffset : 0;\n        let endOffset = el === range.endContainer ? range.endOffset : el.textContent.length;\n        let r = doc.createRange();\n        r.setStart(el, startOffset);\n        r.setEnd(el, endOffset);\n        ranges.push(r);\n        elsToVisit = false;\n        while (!elsToVisit && el !== range.endContainer) {\n            let nextEl = getFirstTextNode(el.nextSibling);\n            if (nextEl) {\n                el = nextEl;\n                elsToVisit = true;\n            }\n            else {\n                if (el.nextSibling) {\n                    el = el.nextSibling;\n                } else if (el.parentNode) {\n                    el = el.parentNode;\n                } else {\n                    break;\n                }\n            }\n        }\n    }\n\n    return ranges;\n}\nconst getFirstTextNode = el => {\n     if (!el)               return null;\n    if (el.nodeType === 3)  return el;\n\n    for (let child of el.childNodes) {\n        if (child.nodeType === 3) {\n            return child;\n        }\n        else {\n            let textNode = getFirstTextNode(child);\n            if (textNode !== null) {\n                return textNode;\n            }\n        }\n    }\n    return null;\n}\n\n\nMWEditor.api = function (scope) {\n    return {\n        getSelection: function () {\n            return scope.getSelection();\n        },\n        eachRange: function (c){\n            var sel = scope.getSelection();\n            if(sel.rangeCount && c) {\n                for(var i = 0; i < sel.rangeCount; i++) {\n                    var range = sel.getRangeAt(i);\n                    c.call(scope, range);\n                }\n            }\n        },\n        getSelectionHTML: function (){\n            var sel = scope.getSelection();\n            var html = scope.actionWindow.document.createElement('div');\n            if(sel.rangeCount) {\n                var frag = sel.getRangeAt(0).cloneContents();\n                while (frag.firstChild) {\n                    html.append(frag.firstChild);\n                }\n            }\n            return html.innerHTML;\n        },\n        cleanWord: function (content) {\n            var wrapListRoots = function () {\n                var all = scope.$editArea.querySelectorAll('li[data-level]'), i = 0, has = false;\n                for (; i < all.length; i++) {\n                    var parent = all[i].parentElement.nodeName;\n                    if (parent !== 'OL' && parent !== 'UL') {\n                        has = true;\n                        var group = mw.$([]), curr = all[i];\n                        while (!!curr && curr.nodeName === 'LI') {\n                            group.push(curr);\n                            curr = curr.nextElementSibling;\n                        }\n                        var el = scope.actionWindow.document.createElement(all[i].getAttribute('data-type') === 'ul' ? 'ul' : 'ol');\n                        el.className = 'element';\n                        group.wrapAll(el);\n                        break;\n                    }\n                }\n                if (has) return wrapListRoots();\n            };\n\n            var buildWordList = function (lists, count) {\n                var i, check = false, max = 0;\n                count = count || 0;\n                if (count === 0) {\n                    for (i in lists) {\n                        var curr = lists[i];\n                        if (!curr.nodeName || curr.nodeType !== 1) continue;\n\n                        var el = document.createElement('li');\n                        mw.tools.copyAttributes(node, el);\n                        while (curr.firstChild) {\n                            el.appendChild(curr.firstChild);\n                        }\n                        curr.replaceWith(el);\n                        lists[i] = el;\n                    }\n                }\n\n                lists.each(function () {\n                    var num = this.textContent.trim().split('.')[0], check = parseInt(num, 10);\n                    var curr = mw.$(this);\n                    if (!curr.attr('data-type')) {\n                        if (!isNaN(check) && num > 0) {\n                            this.innerHTML = this.innerHTML.replace(num + '.', '');\n                            curr.attr('data-type', 'ol');\n                        }\n                        else {\n                            curr.attr('data-type', 'ul');\n                        }\n                    }\n                    if (!this.__done) {\n                        this.__done = false;\n                        var level = parseInt($(this).attr('data-level'));\n                        if (!isNaN(level) && level > max) {\n                            max = level;\n                        }\n                        if (!isNaN(level) && level > 1) {\n                            var prev = this.previousElementSibling;\n                            if (!!prev && prev.nodeName === 'LI') {\n                                var type = this.getAttribute('data-type');\n                                var wrap = scope.actionWindow.document.createElement(type === 'ul' ? 'ul' : 'ol');\n                                wrap.setAttribute('data-level', level);\n                                mw.$(wrap).append(this);\n                                mw.$(wrap).appendTo(prev);\n                                check = true;\n                            }\n                            else if (!!prev && (prev.nodeName === 'UL' || prev.nodeName === 'OL')) {\n                                var where = mw.$('li[data-level=\"' + level + '\"]', prev);\n                                if (where.length > 0) {\n                                    where.after(this);\n                                    check = true;\n                                }\n                                else {\n                                    var type = this.getAttribute('data-type');\n                                    var wrap = scope.actionWindow.document.createElement(type === 'ul' ? 'ul' : 'ol');\n                                    wrap.setAttribute('data-level', level)\n                                    mw.$(wrap).append(this);\n                                    mw.$(wrap).appendTo($('li:last', prev))\n                                    check = true;\n                                }\n                            }\n                            else if (!prev && (this.parentNode.nodeName !== 'UL' && this.parentNode.nodeName !== 'OL')) {\n                                var $curr = mw.$([this]), curr = this;\n                                while ($(curr).next('li[data-level=\"' + level + '\"]').length > 0) {\n                                    $curr.push($(curr).next('li[data-level=\"' + level + '\"]')[0]);\n                                    curr = mw.$(curr).next('li[data-level=\"' + level + '\"]')[0];\n                                }\n                                $curr.wrapAll($curr.eq(0).attr('data-type') === 'ul' ? '<ul></ul>' : '<ol></ol>')\n                                check = true;\n                            }\n                        }\n                    }\n                });\n\n                mw.$(\"ul[data-level!='1'], ol[data-level!='1']\").each(function () {\n                    var level = parseInt($(this).attr('data-level'));\n                    if (!!this.previousElementSibling) {\n                        var plevel = parseInt($(this.previousElementSibling).attr('data-level'));\n                        if (level > plevel) {\n                            mw.$('li:last', this.previousElementSibling).append(this)\n                            check = true;\n                        }\n                    }\n                });\n                if (count === 0) {\n                    setTimeout(function () {\n                        buildWordList($('li[data-level]'), 1);\n                        wrapListRoots();\n                    }, 1);\n                }\n                return lists;\n            };\n\n            var word_listitem_get_level = function (item) {\n                var msspl = item.getAttribute('style').split('mso-list');\n                if (msspl.length > 1) {\n                    var mssplitems = msspl[1].split(' ');\n                    for (var i = 0; i < mssplitems.length; i++) {\n                        if (mssplitems[i].indexOf('level') !== -1) {\n                            return parseInt(mssplitems[i].split('level')[1], 10);\n                        }\n                    }\n                }\n            };\n\n            var isWordHtml = function (html) {\n                return html.indexOf('urn:schemas-microsoft-com:office:word') !== -1;\n            };\n\n            var _cleanWordList = function (html) {\n\n                if (!isWordHtml(html)) return html;\n                if (html.indexOf('</body>') !== -1) {\n                    html = html.split('</body>')[0];\n                }\n                var parser = DomService.parseHtml(html).body;\n\n                var lists = mw.$('[style*=\"mso-list:\"]', parser);\n                lists.each(function () {\n                    var level = word_listitem_get_level(this);\n                    if (!!level) {\n                        this.setAttribute('data-level', level)\n                        this.setAttribute('class', 'level-' + level)\n                    }\n\n                });\n\n                mw.$('[style]', parser).removeAttr('style');\n\n                if (lists.length > 0) {\n                    lists = buildWordList(lists);\n                    var start = mw.$([]);\n                    mw.$('li', parser).each(function () {\n                        this.innerHTML = this.innerHTML\n                            .replace(/�/g, '')/* Not a dot */\n                            .replace(new RegExp(String.fromCharCode(160), \"g\"), \"\")\n                            .replace(/&nbsp;/gi, '')\n                            .replace(/\\�/g, '')\n                            .replace(/<\\/?span[^>]*>/g, \"\")\n                            .replace('�', '');\n                    });\n                }\n                return parser.innerHTML;\n            };\n\n            var cleanWord = function (html) {\n                html = _cleanWordList(html);\n                html = html.replace(/<td([^>]*)>/gi, '<td>');\n                html = html.replace(/<table([^>]*)>/gi, '<table cellspacing=\"0\" cellpadding=\"0\" border=\"1\" style=\"width:100%;\" width=\"100%\" class=\"element\">');\n                html = html.replace(/<o:p>\\s*<\\/o:p>/g, '');\n                html = html.replace(/<o:p>[\\s\\S]*?<\\/o:p>/g, '&nbsp;');\n                html = html.replace(/\\s*mso-[^:]+:[^;\"]+;?/gi, '');\n                html = html.replace(/\\s*MARGIN: 0cm 0cm 0pt\\s*;/gi, '');\n                html = html.replace(/\\s*MARGIN: 0cm 0cm 0pt\\s*\"/gi, \"\\\"\");\n                html = html.replace(/\\s*TEXT-INDENT: 0cm\\s*;/gi, '');\n                html = html.replace(/\\s*TEXT-INDENT: 0cm\\s*\"/gi, \"\\\"\");\n                html = html.replace(/\\s*TEXT-ALIGN: [^\\s;]+;?\"/gi, \"\\\"\");\n                html = html.replace(/\\s*PAGE-BREAK-BEFORE: [^\\s;]+;?\"/gi, \"\\\"\");\n                html = html.replace(/\\s*FONT-VARIANT: [^\\s;]+;?\"/gi, \"\\\"\");\n                html = html.replace(/\\s*tab-stops:[^;\"]*;?/gi, '');\n                html = html.replace(/\\s*tab-stops:[^\"]*/gi, '');\n                html = html.replace(/\\s*face=\"[^\"]*\"/gi, '');\n                html = html.replace(/\\s*face=[^ >]*/gi, '');\n                html = html.replace(/\\s*FONT-FAMILY:[^;\"]*;?/gi, '');\n                html = html.replace(/<(\\w[^>]*) class=([^ |>]*)([^>]*)/gi, \"<$1$3\");\n                html = html.replace(/<STYLE[^>]*>[\\s\\S]*?<\\/STYLE[^>]*>/gi, '');\n                html = html.replace(/<(?:META|LINK)[^>]*>\\s*/gi, '');\n                html = html.replace(/\\s*style=\"\\s*\"/gi, '');\n                html = html.replace(/<SPAN\\s*[^>]*>\\s*&nbsp;\\s*<\\/SPAN>/gi, '&nbsp;');\n                html = html.replace(/<SPAN\\s*[^>]*><\\/SPAN>/gi, '');\n                html = html.replace(/<(\\w[^>]*) lang=([^ |>]*)([^>]*)/gi, \"<$1$3\");\n                html = html.replace(/<SPAN\\s*>([\\s\\S]*?)<\\/SPAN>/gi, '$1');\n                html = html.replace(/<FONT\\s*>([\\s\\S]*?)<\\/FONT>/gi, '$1');\n                html = html.replace(/<\\\\?\\?xml[^>]*>/gi, '');\n                html = html.replace(/<w:[^>]*>[\\s\\S]*?<\\/w:[^>]*>/gi, '');\n                html = html.replace(/<\\/?\\w+:[^>]*>/gi, '');\n                html = html.replace(/<\\!--[\\s\\S]*?-->/g, '');\n                html = html.replace(/<(U|I|STRIKE)>&nbsp;<\\/\\1>/g, '&nbsp;');\n                html = html.replace(/<H\\d>\\s*<\\/H\\d>/gi, '');\n                html = html.replace(/<(\\w+)[^>]*\\sstyle=\"[^\"]*DISPLAY\\s?:\\s?none[\\s\\S]*?<\\/\\1>/ig, '');\n                html = html.replace(/<(\\w[^>]*) language=([^ |>]*)([^>]*)/gi, \"<$1$3\");\n                html = html.replace(/<(\\w[^>]*) onmouseover=\"([^\\\"]*)\"([^>]*)/gi, \"<$1$3\");\n                html = html.replace(/<(\\w[^>]*) onmouseout=\"([^\\\"]*)\"([^>]*)/gi, \"<$1$3\");\n                html = html.replace(/<H(\\d)([^>]*)>/gi, '<h$1>');\n                html = html.replace(/<font size=2>(.*)<\\/font>/gi, '$1');\n                html = html.replace(/<font size=3>(.*)<\\/font>/gi, '$1');\n                html = html.replace(/<a name=.*>(.*)<\\/a>/gi, '$1');\n                html = html.replace(/<H1([^>]*)>/gi, '<H2$1>');\n                html = html.replace(/<\\/H1\\d>/gi, '<\\/H2>');\n                //html = html.replace(/<span>/gi, '$1');\n                html = html.replace(/<\\/span\\d>/gi, '');\n                html = html.replace(/<(H\\d)><FONT[^>]*>([\\s\\S]*?)<\\/FONT><\\/\\1>/gi, '<$1>$2<\\/$1>');\n                html = html.replace(/<(H\\d)><EM>([\\s\\S]*?)<\\/EM><\\/\\1>/gi, '<$1>$2<\\/$1>');\n                return html;\n            };\n\n            var cleanTables = function (root) {\n                var toRemove = \"tbody > *:not(tr), thead > *:not(tr), tr > *:not(td)\",\n                    all = root.querySelectorAll(toRemove),\n                    l = all.length,\n                    i = 0;\n                for (; i < l; i++) {\n                    mw.$(all[i]).remove();\n                }\n                var tables = root.querySelectorAll('table'),\n                    l = tables.length,\n                    i = 0;\n                for (; i < l; i++) {\n                    var item = tables[i],\n                        l = item.children.length,\n                        i = 0;\n                    for (; i < l; i++) {\n                        var item = item.children[i];\n                        if (typeof item !== 'undefined' && item.nodeType !== 3) {\n                            var name = item.nodeName.toLowerCase();\n                            var posibles = \"thead tfoot tr tbody col colgroup\";\n                            if (!posibles.contains(name)) {\n                                mw.$(item).remove();\n                            }\n                        }\n                    }\n                }\n            };\n            return cleanWord(content)\n\n        },\n        action: function(targetParent, func) {\n\n            scope.state.record({\n                target: targetParent,\n                value: targetParent.innerHTML\n            });\n             func.call();\n\n            setTimeout(function(){\n                scope.state.record({\n                    target: targetParent,\n                    value: targetParent.innerHTML\n                });\n            }, 78);\n        },\n        elementNode: function (c) {\n            if( !c || !c.parentNode || c.parentNode === document.body ){\n                return null;\n            }\n            try {   /* Firefox returns wrong target (div) when you click on a spin-button */\n                if (typeof c.querySelector === 'function') {\n                    return c;\n                }\n                else {\n                    return scope.api.elementNode(c.parentNode);\n                }\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        bold: function () {\n            var opt = {\n                css: {'font-weight': 'bold'},\n                className: 'format-bold',\n                fragmentModifier: function (frag) {\n                    var el = frag.querySelector('b,strong,.format-bold')\n                    while (el) {\n                        el.replaceWith(...el.childNodes);\n                        el = frag.querySelector('b,strong,.format-bold')\n                    }\n                },\n            }\n            scope.api.domCommand('cssApplier', opt);\n        },\n        unBold: function () {\n            var opt = {\n                css: {'font-weight': 'normal'},\n                className: 'format-unbold',\n                rangeModify: function (range) {\n                    if( range.startContainer === range.endContainer && Check.isBold(range.startContainer) ) {\n                        while(range.startContainer.firstChild) {\n                            range.startContainer.parentNode.insertBefore(range.startContainer.firstChild, range.startContainer)\n                        }\n                    }\n                    var el = frag.querySelector('b,strong,.format-bold')\n                    while (el) {\n                        el.replaceWith(...el.childNodes);\n                        el = frag.querySelector('b,strong,.format-bold')\n                    }\n                }\n            }\n             scope.api.domCommand('cssApplier', opt);\n\n        },\n        boldToggle: function (){\n            scope.api.execCommand('bold');\n        },\n        boldToggleNew: function (){\n            const range = scope.api.getSelection().getRangeAt(0);\n            const ranges = rangeWalker(range, scope.executionDocument);\n            let isBoldLike = false;\n\n            ranges.forEach(range => {\n                const el = scope.api.elementNode(range.commonAncestorContainer);\n                if(Check.isBold(el)) {\n                    isBoldLike = true;\n                }\n            })\n\n            if(isBoldLike) {\n                scope.api.unBold();\n            } else {\n                scope.api.bold();\n            }\n        },\n        fontFamily: function (font_name, sel) {\n            var range = (sel || scope.getSelection()).getRangeAt(0);\n            scope.api.execCommand(\"styleWithCSS\", null, true);\n            if (range.collapsed) {\n                var el = scope.api.elementNode(range.commonAncestorContainer);\n                scope.api.select_all(el);\n                scope.api.execCommand('fontName', null, font_name);\n                range.collapse();\n            }\n            else {\n                scope.api.execCommand('fontName', null, font_name);\n            }\n        },\n        selectAll: function (el) {\n            var range = scope.document.createRange();\n            range.selectNodeContents(el);\n            var selection = scope.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(range);\n        },\n        selectElement: function (el) {\n            var range = scope.document.createRange();\n            try {\n                range.selectNode(el);\n                var selection = scope.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            } catch (e) {\n\n            }\n        },\n        isSelectionEditable: function (sel) {\n            try {\n                var node = (sel || scope.getSelection()).focusNode;\n                if (node === null) {\n                    return false;\n                }\n                if (node.nodeType === 1) {\n                    return node.isContentEditable;\n                }\n                else {\n                    return node.parentNode.isContentEditable;\n                }\n            }\n            catch (e) {\n                return false;\n            }\n        },\n        getTextNodes: function (root, target){\n            if(!target) target = [];\n            var curr = root.firstChild;\n            while (curr) {\n                if(curr.nodeType === 3) {\n                    target.push(curr);\n                } else if(curr.nodeType === 1){\n                    scope.api.getTextNodes(curr, target)\n                }\n                curr = curr.nextSibling;\n            }\n            return target;\n        },\n        classApplier: function (className) {\n            var sel = scope.getSelection();\n            var range = sel.getRangeAt(0);\n            var frag = range.cloneContents();\n            var nodes = scope.api.getTextNodes(frag).filter(function (node){ return !!node });\n            nodes.forEach(function (node){\n                var el = scope.actionWindow.document.createElement('span');\n                el.className = 'mw-richtext-classApplier ' + className;\n                el.textContent = node.textContent;\n                node.parentNode.replaceChild(el, node);\n            });\n            range.deleteContents()\n            range.insertNode(frag)\n        },\n\n        cssApplier: function (options) {\n\n\n            const {css, className, fragmentModifier} = options;\n            let styles = '';\n            if (typeof css === 'object') {\n                for (let i in css) {\n                    styles += (i + ':' + css[i] + ';');\n                }\n            } else if(typeof css === 'string') {\n                styles = css;\n            }\n            let sel = scope.getSelection();\n            let el = scope.api.elementNode(sel.focusNode);\n            let range = sel.getRangeAt(0);\n            let ranges = rangeWalker(range, scope.executionDocument);\n\n            if(styles || className) {\n                ranges.forEach(range => {\n                    if(options.rangeModify) {\n                        options.rangeModify(range)\n                    }\n                    let el = document.createElement('span');\n                    el.className = 'mw-richtext-cssApplier' + (!!className ? (' ' + className) : '');\n                    el.setAttribute('style', styles);\n                    range.surroundContents(el);\n                })\n            }\n\n        },\n        _old_cssApplier: function (options) {\n            const {css, className, fragmentModifier} = options;\n            var styles = '';\n            if (typeof css === 'object') {\n                for (var i in css) {\n                    styles += (i + ':' + css[i] + ';');\n                }\n            } else if(typeof css === 'string') {\n                styles = css;\n            }\n            var sel = scope.getSelection();\n            var el = scope.api.elementNode(sel.focusNode);\n            var range = sel.getRangeAt(0);\n            var frag = range.cloneContents();\n            if(typeof fragmentModifier === 'function') {\n                fragmentModifier(frag)\n            }\n            var nodes = scope.api.getTextNodes(frag).filter(function (node){ return !!node });\n            if(styles || className) {\n                nodes.forEach(function (node){\n                    var el = scope.actionWindow.document.createElement('span');\n                    el.className = 'mw-richtext-cssApplier' + (!!className ? (' ' + className) : '');\n                    el.setAttribute('style', styles);\n                    el.textContent = node.textContent;\n                    node.parentNode.replaceChild(el, node);\n                });\n            }\n            range.deleteContents();\n            range.insertNode(frag);\n        },\n        isSafeMode: function(el) {\n            if (!el) {\n                var node = scope.getSelection().focusNode;\n                el = scope.api.elementNode(node);\n            }\n            var hasSafe = DomService.hasAnyOfClassesOnNodeOrParent(el, ['safe-mode']);\n            var regInsafe = DomService.parentsOrCurrentOrderMatchOrNone(el, ['regular-mode', 'safe-mode']);\n            return hasSafe && !regInsafe;\n        },\n        _execCommandCustom: {\n            removeFormat: function (cmd, def, val) {\n                scope.actionWindow.document.execCommand(cmd, def, val);\n                var sel = scope.getSelection();\n                var r = sel.getRangeAt(0);\n                var common = r.commonAncestorContainer;\n                var all = common.querySelectorAll('*'), l = all.length, i = 0;\n                for ( ; i < l; i++ ) {\n                    var el = all[i];\n                    if (typeof sel !== 'undefined' && sel.containsNode(el, true)) {\n                        all[i].removeAttribute('style');\n                    }\n                }\n            }\n        },\n        domCommand: function (method, options) {\n            var sel = scope.getSelection();\n\n            try {  // 0x80004005\n                if (  scope.api.isSelectionEditable()) {\n                    if (sel.rangeCount > 0) {\n                        var node = scope.api.elementNode(sel.focusNode);\n                        scope.api.action(DomService.firstBlockLevel(node), function () {\n                             scope.api[method].call(scope.api, options);\n                            mw.$(scope.settings.iframeAreaSelector, scope.actionWindow.document).trigger('execCommand');\n                            mw.$(scope).trigger('execCommand');\n                            scope.registerChange();\n                        });\n                    }\n                }\n            }\n            catch (e) {\n            }\n        },\n        execCommand: function (cmd, def, val) {\n             scope.actionWindow.document.execCommand('styleWithCss', 'false', false);\n            var sel = scope.getSelection();\n            try {  // 0x80004005\n                if (scope.actionWindow.document.queryCommandSupported(cmd) && scope.api.isSelectionEditable()) {\n                    def = def || false;\n                    val = val || false;\n                    if (sel.rangeCount > 0) {\n                        var node = scope.api.elementNode(sel.focusNode);\n                        scope.api.action(DomService.firstBlockLevel(node), function () {\n                            scope.actionWindow.document.execCommand(cmd, def, val);\n                            $(scope.settings.iframeAreaSelector, scope.actionWindow.document).trigger('execCommand');\n                            $(scope).trigger('execCommand');\n                        });\n                    }\n                }\n            }\n            catch (e) {\n            }\n        },\n        _fontSize: function (size, unit) {\n            unit = unit || 'px';\n\n            scope.api.domCommand('cssApplier', {\n                css: {\n                    'font-size': size + unit\n                }\n            });\n        },\n        lineHeight: function (size) {\n\n            if (scope.api.isSelectionEditable()) {\n                var sel = scope.getSelection();\n                var el = scope.api.elementNode(sel.focusNode)\n                scope.api.action(DomService.firstBlockLevel(el), function () {\n                     el.style.lineHeight = size\n                });\n            }\n\n        },\n        fontSize: function (size) {\n            var sel = scope.getSelection();\n            if (sel.isCollapsed) {\n                scope.api.selectAll(scope.api.elementNode(sel.focusNode));\n                sel = scope.getSelection();\n            }\n            var range = sel.getRangeAt(0),\n                common = scope.api.elementNode(range.commonAncestorContainer);\n            var nodrop_state = DomService.parentsOrCurrentOrderMatchOrOnlyFirstOrNone(common, ['allow-drop', 'nodrop']);\n            if (scope.api.isSelectionEditable() && nodrop_state) {\n                scope.api._fontSize(size, 'px');\n            }\n        },\n        saveSelection: function () {\n            var sel = scope.getSelection();\n            scope.api.savedSelection = {\n                selection: sel,\n                range: sel.getRangeAt(0),\n                element: scope.api.elementNode(sel.getRangeAt(0).commonAncestorContainer)\n            };\n        },\n        restoreSelection: function () {\n            if (scope.api.savedSelection) {\n                var sel = scope.getSelection();\n                DomService.firstParentOrCurrentWithAnyOfClasses(scope.api.savedSelection.element, ['edit', 'safe-element']).contentEditable = true;\n                scope.api.savedSelection.element.focus();\n                scope.api.savedSelection.selection.removeAllRanges();\n                scope.api.savedSelection.selection.addRange(scope.api.savedSelection.range);\n            }\n        },\n        _cleaner: document.createElement('div'),\n        cleanHTML: function(html) {\n             this._cleaner.innerHTML = html;\n            var elements = Array.prototype.slice.call(this._cleaner.querySelectorAll('iframe,script,noscript'));\n            while (elements.length) {\n                elements[0].remove();\n                elements.shift();\n            }\n            return this._cleaner.innerHTML;\n        },\n        insertHTML: function(html) {\n            return scope.api.execCommand('insertHTML', false, this.cleanHTML(html));\n        },\n        insertImage: function (url) {\n            var id =   ('image_' + new Date().getTime());\n            var img = '<img id=\"' + id + '\" contentEditable=\"false\" class=\"element\" src=\"' + url + '\" />';\n            scope.api.insertHTML(img);\n            img = mw.$(\"#\" + id);\n            img.removeAttr(\"_moz_dirty\");\n            return img[0];\n        },\n        link: function (result) {\n            var sel = scope.getSelection();\n            var el = scope.api.elementNode(sel.focusNode);\n            var elLink = el.nodeName === 'A' ? el : DomService.firstParentWithTag(el, 'a');\n            if (elLink) {\n                elLink.href = result.url;\n                if (result.text && result.text !== elLink.innerHTML) {\n                    elLink.innerHTML = result.text;\n                }\n            } else {\n                scope.api.insertHTML('<a href=\"'+ result.url +'\">'+ (result.text || (sel.toString().trim()) || result.url) +'</a>');\n            }\n        },\n        unlink: function () {\n            var sel = scope.getSelection();\n            if (!sel.isCollapsed) {\n                this.execCommand('unlink', null, null);\n            }\n            else {\n                var link = DomService.firstParentOrCurrentWithTag(this.elementNode(sel.focusNode), 'a');\n                if (!!link) {\n                    this.selectElement(link);\n                    this.execCommand('unlink', null, null);\n                }\n            }\n        }\n    };\n};\n","import {ElementManager} from  '../classes/element'\r\n\r\nMWEditor.controllersHelpers = {\r\n    '|' : function () {\r\n        return ElementManager({\r\n            tage: 'span',\r\n            props: {\r\n                className: 'mw-bar-delimiter'\r\n            }\r\n        });\r\n    }\r\n};\r\n","MWEditor.tools = { };\r\n\r\n\r\n","import {ObjectService} from \"../classes/object.service\";\nimport {ElementManager} from \"../classes/element\";\nimport {DomService} from \"../classes/dom\";\nMWEditor.core = {\n    button: function(config) {\n        config = config || {};\n        var defaults = {\n            tag: 'button',\n            props: {\n                className: 'mdi mw-editor-controller-component mw-editor-controller-button',\n                type: 'button'\n            }\n        };\n        if (config.props && config.props.className){\n            config.props.className = defaults.props.className + ' ' + config.props.className;\n        }\n        var settings = ObjectService.extend(true, {}, defaults, config);\n        return ElementManager(settings);\n    },\n    field: function(config) {\n        config = config || {};\n        var defaults = {\n            tag: 'input',\n            props: {\n                className: 'mdi mw-editor-controller-component mw-editor-controller-field',\n                type: config.type || 'text'\n            }\n        };\n        if (config.props && config.props.className){\n            config.props.className = defaults.props.className + ' ' + config.props.className;\n        }\n        var settings = ObjectService.extend(true, {}, defaults, config);\n        return ElementManager(settings);\n    },\n    colorPicker: function(config) {\n        config = config || {};\n        var defaults = {\n            props: {\n                className: 'mw-editor-controller-component'\n            }\n        };\n        var settings = ObjectService.extend(true, {}, defaults, config);\n\n        var el = MWEditor.core.button(settings);\n        el.addClass('mw-editor-color-picker')\n        var input = ElementManager({\n            tag: 'input',\n            props: {\n                type: 'color',\n                className: 'mw-editor-color-picker-node'\n            }\n        });\n        var time = null;\n        input.on('input', function (){\n            clearTimeout(time);\n            time = setTimeout(function (el, node){\n                console.log(node.value)\n                el.trigger('change', node.value);\n            }, 210, el, this);\n        });\n        el.append(input);\n        return el;\n    },\n    element: function(config) {\n        config = config || {};\n        var defaults = {\n            props: {\n                className: 'mw-editor-controller-component'\n            }\n        };\n        var settings = ObjectService.extend(true, {}, defaults, config);\n        var el = ElementManager(settings);\n        el.on('mousedown touchstart', function (e) {\n            var tg = e.target.nodeName;\n\n            var shouldPrevent = tg !== 'INPUT';\n            if( shouldPrevent ) {\n                e.preventDefault();\n            }\n        });\n        return el;\n    },\n\n    _dropdownOption: function (data) {\n        // data: { label: string, value: any },\n        var option = MWEditor.core.element({\n            props: {\n                className: 'mw-editor-dropdown-option',\n                innerHTML: data.label\n            }\n        });\n        option.on('mousedown touchstart', function (e) {\n            e.preventDefault();\n        });\n        option.value = data.value;\n        return option;\n    },\n    number: function (options) {\n        this.root = MWEditor.core.element({\n            props: {\n                className: 'mw-editor-controller-component mw-editor-controller-component-number',\n                tooltip: options.placeholder || null\n            }\n        });\n        var scope = this;\n\n\n        var _e = {};\n\n        this.on = function (e, f) { _e[e] ? _e[e].push(f) : (_e[e] = [f]) };\n        this.dispatch = function (e, f) { _e[e] ? _e[e].forEach(function (c){ c.call(this, f); }) : ''; };\n\n\n        var valueNode = MWEditor.core.element({\n            tag: 'input',\n            props: {\n                type: 'number',\n                className: 'mw-editor-controller-component-number-value',\n                min: options.min || 1,\n                max: options.max || 1000,\n\n            }\n        });\n        valueNode.on('input', function (){\n            scope.dispatch('change', scope.value())\n        })\n        this.value = function (val) {\n            if(typeof val === 'undefined' || val === null) {\n                return valueNode.get(0).value;\n            }\n            valueNode.get(0).value = val;\n        }\n        var minus = MWEditor.core.element({\n            props: {\n                className: 'mw-editor-controller-component-number-minus',\n\n            }\n        }).on('mousedown touchstart', function (){\n            valueNode.get(0).value = parseFloat(valueNode.get(0).value) - 1\n            scope.dispatch('change', scope.value())\n        });\n        var plus = MWEditor.core.element({\n            props: {\n                className: 'mw-editor-controller-component-number-plus',\n\n            }\n        }).on('mousedown touchstart', function (){\n\n            valueNode.get(0).value =  parseFloat(valueNode.get(0).value) + 1\n            scope.dispatch('change', scope.value())\n        });\n        this.root.append(minus)\n        this.root.append(valueNode)\n        this.root.append(plus)\n    },\n    dropdown: function (options) {\n        var lscope = this;\n        this.root = MWEditor.core.element();\n        this.select = MWEditor.core.element({\n            props: {\n                className: 'mw-editor-controller-component mw-editor-controller-component-select',\n                tooltip: options.placeholder || null\n            }\n        });\n        if(!options.displayMode) {\n            options.displayMode = 'button';\n        }\n        var displayValNode\n        if(options.displayMode === \"button\") {\n            displayValNode = MWEditor.core.button({\n                props: {\n                    className: (options.icon ? 'mdi-' + options.icon + ' ' : '') + 'mw-editor-select-display-value',\n                    innerHTML: options.placeholder || ''\n                }\n            });\n        } else if(options.displayMode === \"field\") {\n            displayValNode = MWEditor.core.field({\n                props: {\n                    className: (options.icon ? 'mdi-' + options.icon + ' ' : '') + 'mw-editor-select-display-value-field',\n                    placeholder: options.placeholder || ''\n                }\n            });\n            setTimeout(function (){\n                displayValNode.wrap({\n                    props: {\n                        className: 'mw-editor-select-display-value'\n                    }\n                })\n            }, 10)\n        }\n\n\n        var valueHolder = MWEditor.core.element({\n            props: {\n                className: 'mw-editor-controller-component-select-values-holder',\n\n            }\n        });\n        this.root.value = function (val){\n            this.displayValue(val.label);\n            this.value(val.value);\n        };\n\n        this.root.displayValue = function (val) {\n            var md;\n            if(options.displayMode === \"button\") {\n                md = 'html';\n\n            } else if(options.displayMode === \"field\") {\n                md = 'val';\n            }\n            displayValNode[md](val || options.placeholder || '');\n        };\n\n        this.select.append(displayValNode);\n        this.select.append(valueHolder);\n        this.select.valueHolder = valueHolder;\n        this.options = [];\n        for (var i = 0; i < options.data.length; i++) {\n            var dt = options.data[i];\n            (function (dt){\n                var opt = MWEditor.core._dropdownOption(dt);\n                opt.on('click', function (){\n                    lscope.select.trigger('change', dt);\n                });\n                lscope.options.push({\n                    element: opt,\n                    data: dt\n                })\n                valueHolder.append(opt);\n            })(dt);\n\n        }\n        var curr = lscope.select.get(0);\n        this.select.on('click', function (e) {\n            e.stopPropagation();\n            var wrapper = DomService.firstParentOrCurrentWithClass(this, 'mw-editor-wrapper');\n            if (wrapper) {\n                var edOff = wrapper.getBoundingClientRect();\n                var selOff = this.getBoundingClientRect();\n                lscope.select.valueHolder.css({\n                    maxHeight: edOff.height - (selOff.top - edOff.top)\n                });\n            }\n\n            ElementManager('.mw-editor-controller-component-select').each(function (){\n                if (this !== curr ) {\n                    this.classList.remove('active');\n                }\n            });\n            ElementManager(this).toggleClass('active');\n        });\n        this.root.append(this.select);\n    },\n    _preSelect: function (node) {\n        var all = document.querySelectorAll('.mw-editor-controller-component-select.active, .mw-bar-control-item-group.active');\n        var parent = DomService.firstParentOrCurrentWithAnyOfClasses(node ? node.parentNode : null, ['mw-editor-controller-component-select','mw-bar-control-item-group']);\n        var i = 0, l = all.length;\n        for ( ; i < l; i++) {\n            if(!node || (all[i] !== node && all[i] !== parent)) {\n                all[i].classList.remove('active');\n            }\n        }\n    }\n};\n","import {DomService} from \"../classes/dom\";\nimport {ElementManager} from \"../classes/element\";\nimport {FilePicker} from \"../system/filepicker\";\nimport {Dialog} from \"../classes/dialog\";\n\nMWEditor.controllers = {\n    align: function (scope, api, rootScope) {\n        this.root = MWEditor.core.element();\n        this.root.addClass('mw-editor-state-component mw-editor-state-component-align');\n        this.buttons = [];\n\n        var arr = [\n            {align: 'left', icon: 'left', action: 'justifyLeft'},\n            {align: 'center', icon: 'center', action: 'justifyCenter'},\n            {align: 'right', icon: 'right', action: 'justifyRight'},\n            {align: 'justify', icon: 'justify', action: 'justifyFull'}\n        ];\n        this.render = function () {\n            var scope = this;\n            arr.forEach(function (item) {\n                var el = MWEditor.core.button({\n                    props: {\n                        className: 'mdi-format-align-' + item.icon\n                    }\n                });\n                el.on('mousedown touchstart', function (e) {\n                    api.execCommand(item.action);\n                });\n                scope.root.append(el);\n                scope.buttons.push(el);\n            });\n            return scope.root;\n        };\n        this.checkSelection = function (opt) {\n            var align = opt.css.alignNormalize();\n            for (var i = 0; i< this.buttons.length; i++) {\n                var state = arr[i].align === align;\n                rootScope.controllerActive(this.buttons[i].node, state);\n            }\n        };\n        this.element = this.render();\n    },\n    bold: function (scope, api, rootScope) {\n        this.render = function () {\n            var scope = this;\n            var el = MWEditor.core.button({\n                props: {\n                    className: 'mdi-format-bold',\n                    tooltip: rootScope.lang('Bold')\n                }\n            });\n            el.on('mousedown touchstart', function (e) {\n                // api.execCommand('bold');\n\n                api.boldToggle()\n\n\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            if(opt.css.is().bold) {\n                rootScope.controllerActive(opt.controller.element.node, true);\n            } else {\n                rootScope.controllerActive(opt.controller.element.node, false);\n            }\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n        };\n        this.element = this.render();\n    },\n    strikeThrough: function (scope, api, rootScope) {\n        this.render = function () {\n            var scope = this;\n            var el = MWEditor.core.button({\n                props: {\n                    className: 'mdi-format-strikethrough',\n                    tooltip: rootScope.lang('Strike through')\n                }\n            });\n\n            el.on('mousedown touchstart', function (e) {\n                api.execCommand('strikeThrough');\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            if(opt.css.is().striked) {\n                rootScope.controllerActive(opt.controller.element.node, true);\n            } else {\n                rootScope.controllerActive(opt.controller.element.node, false);\n            }\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n        };\n        this.element = this.render();\n    },\n    italic: function(scope, api, rootScope){\n        this.render = function () {\n            var el = MWEditor.core.button({\n                props: {\n                    className: 'mdi-format-italic',\n                    tooltip: rootScope.lang('Italic')\n                }\n            });\n            el.on('mousedown touchstart', function (e) {\n                api.execCommand('italic');\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n            if(opt.css.is().italic) {\n                rootScope.controllerActive(opt.controller.element.node, true);\n            } else {\n                rootScope.controllerActive(opt.controller.element.node, false);\n            }\n        };\n        this.element = this.render();\n    },\n    'underline': function(scope, api, rootScope){\n        this.render = function () {\n            var el = MWEditor.core.button({\n                props: {\n                    className: 'mdi-format-underline',\n                    tooltip: rootScope.lang('Underline')\n                }\n            });\n            el.on('mousedown touchstart', function (e) {\n                api.execCommand('underline');\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n            if(opt.css.is().underlined) {\n                rootScope.controllerActive(opt.controller.element.node, true);\n            } else {\n                rootScope.controllerActive(opt.controller.element.node, false);\n            }\n        };\n        this.element = this.render();\n    },\n\n    image: function(scope, api, rootScope){\n\n        this.render = function () {\n            var el = MWEditor.core.button({\n                props: {\n                    className: 'mdi-folder-multiple-image',\n                    tooltip: rootScope.lang('Insert Image')\n                }\n            });\n            el.on('click', function (e) {\n                var dialog;\n                var picker = new FilePicker({\n                    type: 'images',\n                    label: false,\n                    autoSelect: false,\n                    footer: true,\n                    _frameMaxHeight: true,\n                    onResult: function (res) {\n                        var url = res.src ? res.src : res;\n                        if(!url) return;\n                        url = url.toString();\n                        api.insertImage(url);\n                        dialog.remove();\n                    }\n                });\n                dialog = rootScope.dialog({\n                    content: picker.root,\n                    title:  'Select image',\n                    footer: false,\n\n                });\n\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n        };\n        this.element = this.render();\n    },\n    link: function(scope, api, rootScope){\n\n        this.render = function () {\n            var el = MWEditor.core.button({\n                props: {\n                    className: 'mdi-link',\n                    tooltip: rootScope.lang('Insert link')\n                }\n            });\n\n            el.on('click', function (e) {\n                api.saveSelection();\n                var sel = scope.getSelection();\n\n                var target;\n                if(sel.focusNode.nodeName === 'A') {\n                    target = sel.focusNode;\n                } else {\n                    var curr = sel.focusNode;\n                    while(curr && curr.nodeName){\n                        if(curr.nodeName === 'A') {\n                            target = curr;\n                            break;\n                        } else {\n                            curr = curr.parentNode;\n                        }\n                    }\n                }\n\n                var val;\n                if(target) {\n                    val = {\n                        url: target.href,\n                        text: target.innerHTML,\n                        target: target.target === '_blank'\n                    };\n                } else if(!sel.isCollapsed) {\n                    val = {\n                        url: '',\n                        text: api.getSelectionHTML(),\n                        target: false\n                    };\n                }\n                var linkEditor = new mw.LinkEditor({\n                    mode: 'dialog',\n                });\n                if(val) {\n                    linkEditor.setValue(val);\n                }\n\n                linkEditor.promise().then(function (data){\n                    var modal = linkEditor.dialog;\n                    if(data) {\n                        api.restoreSelection();\n                        api.link(data);\n                        modal.remove();\n                    } else {\n                        modal.remove();\n                    }\n                });\n\n\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n        };\n        this.element = this.render();\n    },\n    fontSize: function (scope, api, rootScope) {\n        this.checkSelection2 = function (opt) {\n            var css = opt.css;\n            var font = css.font();\n            var size = font.size;\n            opt.controller.element.displayValue(size);\n            opt.controller.element.disabled = !opt.api.isSelectionEditable();\n        };\n        this.checkSelection = function (opt) {\n            var css = opt.css;\n            var font = css.font();\n            var size = font.size;\n            console.log(opt.controller)\n            opt.controller.element.displayValue(size);\n            opt.controller.element.disabled = !opt.api.isSelectionEditable();\n        };\n        this.render = function () {\n            var ctrl = new MWEditor.core.number({});\n            ctrl.on('change', function (val) {\n\n                api.fontSize(val);\n            })\n            return ctrl.root;\n        }\n        this.render2 = function () {\n            var dropdown = new MWEditor.core.dropdown({\n                data: [\n                    { label: '8px', value: 8 },\n                    { label: '10px', value: 10 },\n                    { label: '12px', value: 12 },\n                    { label: '14px', value: 14 },\n                    { label: '16px', value: 16 },\n                    { label: '18px', value: 18 },\n                    { label: '20px', value: 20 },\n                    { label: '22px', value: 22 },\n                    { label: '24px', value: 24 },\n                    { label: '28px', value: 28 },\n                    { label: '32px', value: 32 },\n                    { label: '36px', value: 36 },\n                    { label: '42px', value: 42 },\n                ],\n                placeholder: rootScope.lang('Font Size'),\n                displayMode: 'field'\n            });\n            dropdown.select.on('change', function (e, val) {\n                if(val) {\n                    api.fontSize(val.value);\n                }\n            });\n\n            return dropdown.root;\n        };\n        this.element = this.render();\n    },\n    lineHeight: function (scope, api, rootScope) {\n        this.checkSelection = function (opt) {\n            var css = opt.css;\n            var font = css.font();\n            var size = font.height;\n            opt.controller.element.displayValue(size);\n            opt.controller.element.disabled = !opt.api.isSelectionEditable();\n        };\n        this.render = function () {\n            var dropdown = new MWEditor.core.dropdown({\n                icon: 'format-line-spacing',\n                data: [\n                    { label: 'normal', value: 'normal' },\n                    { label: '14px', value:'14px' },\n                    { label: '16px', value:'16px' },\n                    { label: '19px', value:'19px' },\n                    { label: '21px', value:'21px' },\n                    { label: '24px', value:'24px' },\n                    { label: '25px', value:'25px' },\n                    { label: '27px', value:'27px' },\n                    { label: '30px', value:'30px' },\n                    { label: '35px', value:'35px' },\n                    { label: '40px', value:'40px' },\n                    { label: '45px', value:'45px' },\n                    { label: '50px', value:'50px' },\n                    { label: '55px', value:'55px' },\n                    { label: '60px', value:'60px' },\n                ],\n                placeholder: rootScope.lang('Line height')\n            });\n            dropdown.select.on('change', function (e, val) {\n                api.lineHeight(val.value);\n            });\n            return dropdown.root;\n        };\n        this.element = this.render();\n    },\n    format: function (scope, api, rootScope) {\n\n        this._availableTags = [\n            { label: '<h1>Title</h1>', value: 'h1' },\n            { label: '<h2>Title</h2>', value: 'h2' },\n            { label: '<h3>Title</h3>', value: 'h3' },\n            { label: '<h4>Title</h4>', value: 'h4' },\n            { label: '<h5>Title</h5>', value: 'h5' },\n            { label: '<h6>Title</h6>', value: 'h6' },\n            { label: 'Paragraph', value: 'p' },\n            { label: 'Block', value: 'div' },\n            { label: 'Pre formated', value: 'pre' }\n        ];\n\n        this.availableTags = function () {\n            if(this.__availableTags) {\n                return this.__availableTags;\n            }\n            this.__availableTags = this._availableTags.map(function (item) {\n                return item.value;\n            });\n            return this.availableTags();\n        };\n\n        this.getTagDisplayName = function (tag) {\n            tag = (tag || '').trim().toLowerCase();\n            if(!tag) return;\n            for (var i = 0; i < this._availableTags.length; i++) {\n                if(this._availableTags[i].value === tag) {\n                    return this._availableTags[i].label;\n                }\n            }\n        };\n\n        this.checkSelection = function (opt) {\n            var el = opt.api.elementNode(opt.selection.focusNode);\n            var parentEl = DomService.firstParentOrCurrentWithTag(el, this.availableTags());\n            opt.controller.element.displayValue(parentEl ? this.getTagDisplayName(parentEl.nodeName) : '');\n            opt.controller.element.disabled = !opt.api.isSelectionEditable();\n        };\n        this.render = function () {\n            var dropdown = new MWEditor.core.dropdown({\n                data: this._availableTags,\n                placeholder: rootScope.lang('Format')\n            });\n            dropdown.select.on('change', function (e, val) {\n                api.execCommand('formatBlock', false, e.detail.value);\n            });\n            return dropdown.root;\n        };\n        this.element = this.render();\n    },\n    fontSelector: function (scope, api, rootScope) {\n        this.checkSelection = function (opt) {\n            var css = opt.css;\n                var font = css.font();\n                var family_array = font.family.split(','), fam;\n                if (family_array.length === 1) {\n                    fam = font.family;\n                } else {\n                    fam = family_array.shift();\n                }\n                fam = fam.replace(/['\"]+/g, '');\n                opt.controller.element.displayValue(fam);\n                opt.controller.element.disabled = !opt.api.isSelectionEditable();\n\n        };\n\n        this.render = function () {\n            var fonts = rootScope.settings.fonts || [\n                { label: 'Arial', value: 'Arial, sans-serif' },\n                { label: 'Verdana', value: 'Verdana, sans-serif' },\n                { label: 'Helvetica', value: 'Helvetica, sans-serif' },\n                { label: 'Times New Roman', value: 'Times New Roman, serif' },\n                { label: 'Georgia', value: 'Georgia, serif' },\n                { label: 'Courier New', value: 'Courier New, monospace' },\n                { label: 'Brush Script MT', value: 'Brush Script MT, cursive' },\n            ];\n\n            if(rootScope.settings.addFonts && rootScope.settings.addFonts.length) {\n                fonts = [...fonts, ...rootScope.settings.addFonts]\n            }\n\n\n            var dropdown = new MWEditor.core.dropdown({\n                data: fonts,\n                placeholder: rootScope.lang('Font')\n            });\n            dropdown.options.forEach(function (item){\n                item.element.css('fontFamily', item.data.value);\n            });\n            dropdown.select.on('change', function (e, val, b) {\n                 api.fontFamily(val.value);\n            });\n            return dropdown.root;\n        };\n        this.element = this.render();\n    },\n    undoRedo: function(scope, api, rootScope) {\n        this.render = function () {\n            this.root = MWEditor.core.element();\n            this.root.addClass('mw-ui-btn-nav mw-editor-state-component')\n            var undo = MWEditor.core.button({\n                props: {\n                    className: 'mdi-undo',\n                    tooltip: rootScope.lang('Undo')\n                }\n            });\n            undo.on('mousedown touchstart', function (e) {\n                rootScope.state.undo();\n                rootScope._syncTextArea();\n            });\n\n            var redo = MWEditor.core.button({\n                props: {\n                    className: 'mdi-redo',\n                    tooltip: rootScope.lang('Redo')\n                }\n            });\n            redo.on('mousedown touchstart', function (e) {\n                rootScope.state.redo();\n                rootScope._syncTextArea();\n            });\n            this.root.node.appendChild(undo.node);\n            this.root.node.appendChild(redo.node);\n            rootScope.state.on('stateRecord', function(e, data){\n                console.log(e, data)\n                undo.node.disabled = !data.hasNext;\n                redo.node.disabled = !data.hasPrev;\n            })\n            .on('stateUndo stateRedo', function(e, data){\n                if(!data.active || !data.active.target) {\n                    undo.node.disabled = !data.hasNext;\n                    redo.node.disabled = !data.hasPrev;\n                    return;\n                }\n                if(scope.actionWindow.document.body.contains(data.active.target)) {\n                    mw.$(data.active.target).html(data.active.value);\n                } else{\n                    if(data.active.target.id) {\n                        mw.$(scope.actionWindow.document.getElementById(data.active.target.id)).html(data.active.value);\n                    }\n                }\n                if(data.active.prev) {\n                    mw.$(data.active.prev).html(data.active.prevValue);\n                }\n                // mw.drag.load_new_modules();\n                undo.node.disabled = !data.hasNext;\n                redo.node.disabled = !data.hasPrev;\n                $(scope).trigger(e.type, [data]);\n            });\n            setTimeout(function () {\n                var data = rootScope.state.eventData();\n                undo.node.disabled = !data.hasNext;\n                redo.node.disabled = !data.hasPrev;\n            }, 78);\n            return this.root;\n        };\n        this.element = this.render();\n    },\n    'ul': function(scope, api, rootScope){\n        this.render = function () {\n            var el = MWEditor.core.button({\n                props: {\n                    className: 'mdi-format-list-bulleted'\n                }\n            });\n            el.on('mousedown touchstart', function (e) {\n                var sel = api.getSelection();\n                var node = api.elementNode(sel.focusNode);\n                var paragraph = mw.tools.firstParentOrCurrentWithTag(node, 'p');\n                if(paragraph) {\n                    scope.api.action(paragraph.parentNode, function () {\n                        var ul = scope.actionWindow.document.createElement('ul');\n                        var li = scope.actionWindow.document.createElement('li');\n                        ul.appendChild(li);\n                        while (paragraph.firstChild) {\n                            li.appendChild(node.firstChild);\n                        }\n                        paragraph.parentNode.insertBefore(ul, paragraph.nextSibling);\n                        paragraph.remove();\n                    });\n                } else {\n                    api.execCommand('insertUnorderedList');\n                }\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n        };\n        this.element = this.render();\n    },\n    'ol': function(scope, api, rootScope){\n        this.render = function () {\n            var el = MWEditor.core.button({\n                props: {\n                    className: 'mdi-format-list-numbered tip',\n                    'data-tip': 'Ordered list'\n                }\n            });\n            el.on('mousedown touchstart', function (e) {\n                var sel = api.getSelection();\n                var node = api.elementNode(sel.focusNode);\n                var paragraph = mw.tools.firstParentOrCurrentWithTag(node, 'p');\n                if(paragraph) {\n                    scope.api.action(paragraph.parentNode, function () {\n                        var ul = scope.actionWindow.document.createElement('ol');\n                        var li = scope.actionWindow.document.createElement('li');\n                        ul.appendChild(li);\n                        while (paragraph.firstChild) {\n                            li.appendChild(paragraph.firstChild);\n                        }\n                        paragraph.parentNode.insertBefore(ul, paragraph.nextSibling);\n                        paragraph.remove();\n                    });\n                } else {\n                    api.execCommand('insertOrderedList');\n                }\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n        };\n        this.element = this.render();\n    },\n    'indent': function(scope, api, rootScope){\n        this.render = function () {\n            var el = MWEditor.core.button({\n                props: {\n                    className: 'mdi-format-indent-increase',\n                    'data-tip': 'Indent'\n                }\n            });\n            el.on('mousedown touchstart', function (e) {\n                api.execCommand('indent');\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n        };\n        this.element = this.render();\n    },\n    'outdent': function(scope, api, rootScope){\n        this.render = function () {\n            var el = MWEditor.core.button({\n                props: {\n                    className: 'mdi-format-indent-decrease',\n                    'data-tip': 'Indent'\n                }\n            });\n            el.on('mousedown touchstart', function (e) {\n                api.execCommand('outdent');\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n        };\n        this.element = this.render();\n    },\n    removeFormat: function (scope, api, rootScope) {\n        this.render = function () {\n            var el = MWEditor.core.button({\n                props: {\n                    className: 'mdi-format-clear',\n                    tooltip: 'Remove Format'\n                }\n            });\n            el.on('mousedown touchstart', function (e) {\n                api.execCommand('removeFormat');\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n        };\n        this.element = this.render();\n    },\n    unlink: function (scope, api, rootScope) {\n        this.render = function () {\n            var el = MWEditor.core.button({\n                props: {\n                    className: 'mdi-link-off', tooltip: 'Unlink'\n                }\n            });\n            el.on('mousedown touchstart', function (e) {\n                api.execCommand('unlink');\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n        };\n        this.element = this.render();\n    },\n    textColor: function (scope, api, rootScope) {\n        this.render = function () {\n            var el = MWEditor.core.colorPicker({\n                props: {\n                    className: 'mdi-format-color-text', tooltip: 'Text color'\n                }\n            });\n            el.on('change', function (e, val) {\n                api.execCommand('foreColor', false, val);\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n        };\n        this.element = this.render();\n    },\n    textBackgroundColor: function (scope, api, rootScope) {\n        this.render = function () {\n            var el = MWEditor.core.colorPicker({\n                props: {\n                    className: 'mdi-format-color-fill', tooltip: 'Text background color'\n                }\n            });\n            el.on('change', function (e, val) {\n                api.execCommand('backcolor', false, val);\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n        };\n        this.element = this.render();\n    },\n    table: function (scope, api, rootScope) {\n        this.render = function () {\n            var el = MWEditor.core.button({\n                props: {\n                    className: 'mdi-table-large', tooltip: 'Insert Table'\n                }\n            });\n            el.on('mousedown touchstart', function (e) {\n                api.insertHTML('<table class=\"mw-ui-table\" border=\"1\" width=\"100%\"><tr><td></td><td></td></tr><tr><td></td><td></td></tr></table>');\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n        };\n        this.element = this.render();\n    },\n    wordPaste: function (scope, api, rootScope) {\n        this.render = function () {\n            var el = MWEditor.core.button({\n                props: {\n                    className: 'mdi-file-word', tooltip: 'Paste from Word'\n                }\n            });\n            el.on('mousedown touchstart', function (e) {\n                api.saveSelection();\n                var dialog;\n                var ok = MWEditor.core.element({\n                    tag: 'span',\n                    props: {\n                        className: 'mw-ui-btn mw-ui-btn-info',\n                        innerHTML: rootScope.lang('OK')\n                    }\n                });\n                var cancel = MWEditor.core.element({\n                    tag: 'span',\n                    props: {\n                        className: 'mw-ui-btn',\n                        innerHTML: rootScope.lang('Cancel')\n                    }\n                });\n                var cleanEl = mw.element({\n                    props: {\n                        contentEditable: true,\n                        autofocus: true,\n                        style: {\n                            height: '250px'\n                        }\n                    }\n                });\n\n                var footer = mw.element();\n                cancel.on('click', function (){\n                    dialog.remove();\n                })\n                ok.on('click', function (){\n                    var content = cleanEl.html().trim();\n                    dialog.remove();\n                    api.restoreSelection();\n                    if(content){\n                        api.insertHTML(api.cleanWord(content));\n                    }\n\n                });\n                footer.append(cancel);\n                footer.append(ok);\n                dialog = mw.dialog({\n                    content: cleanEl.node,\n                    footer: footer.node\n                });\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n        };\n        this.element = this.render();\n    },\n\n    mobilePreview: function(scope, api, rootScope){\n         this.render = function () {\n            var el = MWEditor.core.element({\n                props: {\n                    className: 'mobilePreview-block',\n                 }\n            })\n             var phone = MWEditor.core.button({\n                 props: {\n                     className: 'mdi-cellphone',\n                     tooltip: rootScope.lang('Phone'),\n                 }\n             });\n             phone.on('mousedown touchstart', function (e) {\n                 scope.executionDocument.defaultView.frameElement.style.width = '400px';\n             });\n\n             var tablet = MWEditor.core.button({\n                 props: {\n                     className: 'mdi-tablet-android',\n                     tooltip: rootScope.lang('Tablet'),\n                 }\n             });\n             tablet.on('mousedown touchstart', function (e) {\n                 scope.executionDocument.defaultView.frameElement.style.width = '800px';\n             });\n\n             var pc = MWEditor.core.button({\n                 props: {\n                     className: 'mdi-laptop',\n                     tooltip: rootScope.lang('Desktop'),\n                 }\n             });\n             pc.on('mousedown touchstart', function (e) {\n                 scope.executionDocument.defaultView.frameElement.style.width = '100%';\n             });\n             el.append(phone)\n             el.append(tablet)\n             el.append(pc)\n            return el;\n        };\n\n        this.element = this.render();\n    },\n\n};\n","\r\n/*************************************************************\r\n *\r\n        MWEditor.addController(\r\n            'underline',\r\n            function () {\r\n\r\n            }, function () {\r\n\r\n            }\r\n        );\r\n\r\n        MWEditor.addController({\r\n            name: 'underline',\r\n            render: function () {\r\n\r\n            },\r\n            checkSelection: function () {\r\n\r\n            }\r\n        })\r\n\r\n **************************************************************/\r\n\r\n\r\n\r\nMWEditor.controllers.editSource = function (scope, api, rootScope) {\r\n    this.render = function () {\r\n\r\n        var scope = this;\r\n        var el = MWEditor.core.button({\r\n            props: {\r\n                className: 'mdi mdi-xml',\r\n                tooltip:  'Edit source'\r\n            }\r\n        });\r\n        el.on('mousedown touchstart', function (e) {\r\n\r\n            var ok = mw.element('<span class=\"mw-ui-btn mw-ui-btn-info\">'+mw.lang('OK')+'</span>');\r\n            var cancel = mw.element('<span class=\"mw-ui-btn\">'+mw.lang('Cancel')+'</span>');\r\n            var area = mw.element({ tag: 'textarea', props: {\r\n                    className: 'mw-ui-field',\r\n                }});\r\n            area.css({\r\n                height: 400\r\n            })\r\n            area.val(rootScope.$editArea.html());\r\n            var footer = mw.element();\r\n            footer.append(cancel).append(ok)\r\n            var dialog = mw.dialog({\r\n                overlay: true,\r\n                content: area.get(0),\r\n                footer: footer.get(0),\r\n                title: mw.lang('Edit source')\r\n            });\r\n\r\n            cancel.on('click', function (){\r\n                dialog.remove()\r\n            });\r\n            ok.on('click', function (){\r\n                rootScope.setContent(area.val(), true);\r\n                dialog.remove();\r\n            });\r\n\r\n        });\r\n        return el;\r\n    };\r\n    this.checkSelection = function () {\r\n        return true;\r\n    };\r\n};\r\n\r\n\r\nMWEditor.addController = function (name, render, checkSelection, dependencies) {\r\n    if (MWEditor.controllers[name]) {\r\n        console.warn(name + ' already defined');\r\n        return;\r\n    }\r\n    if (typeof name === 'object') {\r\n        var obj = name;\r\n        name = obj.name;\r\n        render = obj.render;\r\n        checkSelection = obj.checkSelection;\r\n        dependencies = obj.dependencies;\r\n    }\r\n    if(MWEditor.controllers[name]) {\r\n        console.warn(name + ' controller is already registered in the editor');\r\n        return;\r\n    }\r\n    MWEditor.controllers[name] = function () {\r\n        this.render = render;\r\n        if(checkSelection) {\r\n            this.checkSelection = checkSelection;\r\n        }\r\n        this.element = this.render();\r\n        this.dependencies = dependencies;\r\n    };\r\n};\r\n\r\n\r\nMWEditor.addInteractionController = function (name, render, interact, dependencies) {\r\n    if (MWEditor.controllers[name]) {\r\n        console.warn(name + ' already defined');\r\n        return;\r\n    }\r\n    if (typeof name === 'object') {\r\n        var obj = name;\r\n        name = obj.name;\r\n        render = obj.render;\r\n        interact = obj.interact;\r\n        dependencies = obj.dependencies;\r\n    }\r\n    if(MWEditor.interactionControls[name]) {\r\n        console.warn(name + ' controller is already registered in the editor')\r\n        return;\r\n    }\r\n    MWEditor.interactionControls[name] = function () {\r\n        this.render = render;\r\n        if(interact) {\r\n            this.interact = interact;\r\n        }\r\n        this.element = this.render();\r\n        this.dependencies = dependencies;\r\n    };\r\n};\r\n","\r\nimport {ElementManager} from  '../classes/element'\r\nimport {DomService} from  '../classes/dom'\r\nimport {FilePicker} from \"../system/filepicker\";\r\n\r\n\r\n/*\r\n*\r\n*  interface data {\r\n        target: Element,\r\n        component: Element,\r\n        isImage: boolean,\r\n        event: Event\r\n    };\r\n*\r\n*\r\n* */\r\n\r\nMWEditor.interactionControls = {\r\n    linkTooltip: function (rootScope) {\r\n        this.render = function () {\r\n            var scope = this;\r\n            var el = ElementManager({\r\n                props: {\r\n                    className: 'mw-editor-link-tooltip'\r\n                }\r\n            });\r\n            var urlElement = ElementManager({\r\n                tag: 'a',\r\n                props: {\r\n                    className: 'mw-editor-link-tooltip-url',\r\n                    target: 'blank'\r\n                }\r\n            });\r\n            var urlUnlink = MWEditor.core.button({\r\n                props: {\r\n                    className: 'mdi-link-off',\r\n                }\r\n            });\r\n\r\n            urlUnlink.on('click', function () {\r\n                rootScope.api.unlink();\r\n            });\r\n\r\n            el.urlElement = urlElement;\r\n            el.urlUnlink = urlUnlink;\r\n            el.append(urlElement);\r\n            el.append(urlUnlink);\r\n            el.target = null;\r\n            el.hide();\r\n            return el;\r\n        };\r\n        this.interact = function (data) {\r\n            var tg = DomService.firstParentOrCurrentWithTag(data.target,'a');\r\n            if(!tg) {\r\n                this.element.hide();\r\n                return;\r\n            }\r\n            var $target = $(data.target);\r\n            this.$target = $target;\r\n            var css = $target.offset();\r\n            css.top += $target.height();\r\n            this.element.urlElement.html(data.target.href);\r\n            this.element.urlElement.prop('href', data.target.href);\r\n            this.element.css(css).show();\r\n        };\r\n        this.element = this.render();\r\n    },\r\n    image: function (rootScope) {\r\n\r\n        this.nodes = [];\r\n        this.render = function () {\r\n            var scope = this;\r\n            var el = ElementManager({\r\n                props: {\r\n                    className: 'mw-editor-image-handle-wrap'\r\n                }\r\n            });\r\n            var changeButton = ElementManager({\r\n                props: {\r\n                    innerHTML: '<i class=\"mdi mdi-folder-multiple-image\"></i>',\r\n                    className: 'mw-ui-btn mw-ui-btn-medium tip',\r\n                    dataset: {\r\n                        tip: rootScope.lang('Change image')\r\n                    }\r\n                }\r\n            });\r\n            changeButton.on('click', function () {\r\n                var dialog;\r\n                var picker = new FilePicker({\r\n                    type: 'images',\r\n                    label: false,\r\n                    autoSelect: false,\r\n                    footer: true,\r\n                    _frameMaxHeight: true,\r\n                    onResult: function (res) {\r\n                        var url = res.src ? res.src : res;\r\n                        if(!url) return;\r\n                        url = url.toString();\r\n                        scope.$target.attr('src', url);\r\n                        dialog.remove();\r\n                    }\r\n                });\r\n                dialog = mw.top().dialog({\r\n                    content: picker.root,\r\n                    title: mw.lang('Select image'),\r\n                    footer: false\r\n                })\r\n\r\n            });\r\n            var editButton = ElementManager({\r\n                props: {\r\n                    innerHTML: '<i class=\"mdi mdi-image-edit\"></i>',\r\n                    className: 'mw-ui-btn mw-ui-btn-medium tip',\r\n                    dataset: {\r\n                        tip: rootScope.lang('Edit image')\r\n                    }\r\n                }\r\n            });\r\n            var nav = ElementManager({\r\n                props: {\r\n                    className: 'mw-ui-btn-nav'\r\n                }\r\n            });\r\n            nav.append(changeButton);\r\n            el.append(nav);\r\n            // nav.append(editButton);\r\n            this.nodes.push(el.node, changeButton.node, editButton.node);\r\n            el.hide();\r\n            return el;\r\n        };\r\n        this.interact = function (data) {\r\n\r\n            if(DomService.firstParentOrCurrentWithClass(data.localTarget, 'mw-editor-image-handle-wrap')) {\r\n                return;\r\n            }\r\n            if(this.nodes.indexOf(data.target) !== -1) {\r\n                this.element.hide();\r\n                return;\r\n            }\r\n            if (data.isImage) {\r\n                var $target = $(data.localTarget);\r\n                this.$target = $target;\r\n                var css = $target.offset();\r\n                css.width = $target.outerWidth();\r\n                css.height = $target.outerHeight();\r\n                this.element.css(css).show();\r\n                console.log( this.element)\r\n\r\n            } else {\r\n                this.element.hide();\r\n            }\r\n        };\r\n        this.element = this.render();\r\n    },\r\n    tableManager: function(rootScope){\r\n        var lscope = this;\r\n        this.interact = function (data) {\r\n            if (!data.eventIsActionLike) { return; }\r\n            var td = DomService.firstParentOrCurrentWithTag(data.localTarget, 'td');\r\n            if (td) {\r\n                var $target = $(td);\r\n                this.$target = $target;\r\n                var css = $target.offset();\r\n                css.top -= lscope.element.node.offsetHeight;\r\n                this.element.$node.css(css).show();\r\n            } else {\r\n                this.element.hide();\r\n            }\r\n        };\r\n\r\n        this._afterAction = function () {\r\n            this.element.hide();\r\n            rootScope.state.record({\r\n                target: rootScope.$editArea[0],\r\n                value: rootScope.$editArea[0].innerHTML\r\n            });\r\n        };\r\n\r\n        this.render = function () {\r\n            var root = ElementManager({\r\n                props: {\r\n                    className: 'mw-editor-table-manager'\r\n                }\r\n            });\r\n            var bar = mw.bar();\r\n            bar.createRow();\r\n            root.append(bar.bar);\r\n\r\n            var insertDD = new MWEditor.core.dropdown({\r\n                data: [\r\n                    { label: 'Row Above', value: {action: 'insertRow', type: 'above'} },\r\n                    { label: 'Row Under', value: {action: 'insertRow', type: 'under'} },\r\n                    { label: 'Column on the left', value: {action: 'insertColumn', type: 'left'} },\r\n                    { label: 'Column on the right', value: {action: 'insertColumn', type: 'right'} },\r\n                ],\r\n                placeholder: 'Insert'\r\n            });\r\n\r\n            insertDD.select.on('change', function (e, data, node) {\r\n                rootScope.state.record({\r\n                    target: rootScope.$editArea[0],\r\n                    value: rootScope.$editArea[0].innerHTML\r\n                });\r\n                lscope[data.value.action](data.value.type);\r\n                lscope._afterAction();\r\n            });\r\n            var deletetDD = new MWEditor.core.dropdown({\r\n                data: [\r\n                    { label: 'Row', value: {action: 'deleteRow'} },\r\n                    { label: 'Column', value: {action: 'deleteColumn'} },\r\n                ],\r\n                placeholder: 'Delete'\r\n            });\r\n\r\n            deletetDD.select.on('change', function (e, data, node) {\r\n                rootScope.state.record({\r\n                    target: rootScope.$editArea[0],\r\n                    value: rootScope.$editArea[0].innerHTML\r\n                });\r\n                lscope[data.value.action]();\r\n                lscope._afterAction()\r\n            });\r\n\r\n            bar.add(insertDD.root.node);\r\n            bar.add(deletetDD.root.node);\r\n            root.hide();\r\n\r\n            return root;\r\n        };\r\n\r\n        this.deleteRow = function (cell) {\r\n            cell = cell || this.getActiveCell();\r\n            cell.parentNode.remove();\r\n        };\r\n\r\n\r\n        this.deleteColumn = function (cell) {\r\n            cell = cell || this.getActiveCell();\r\n            var index = DomService.index(cell),\r\n                body = cell.parentNode.parentNode,\r\n                rows = mw.$(body).children('tr'),\r\n                l = rows.length,\r\n                i = 0;\r\n            for (; i < l; i++) {\r\n                var row = rows[i];\r\n                row.getElementsByTagName('td')[index].remove();\r\n            }\r\n        };\r\n\r\n        this.getActiveCell = function () {\r\n            var node = rootScope.api.elementNode( rootScope.getSelection().focusNode);\r\n            return DomService.firstParentOrCurrentWithTag(node,'td');\r\n        };\r\n\r\n        this.insertColumn = function (dir, cell) {\r\n            cell = cell || this.getActiveCell();\r\n            cell = mw.$(cell)[0];\r\n            if (cell === null) {\r\n                return false;\r\n            }\r\n            dir = dir || 'right';\r\n            var rows = mw.$(cell.parentNode.parentNode).children('tr');\r\n            var i = 0, l = rows.length, index = DomService.index(cell);\r\n            for (; i < l; i++) {\r\n                var row = rows[i];\r\n                cell = mw.$(row).children('td')[index];\r\n                if (dir === 'left' || dir === 'both') {\r\n                    mw.$(cell).before(\"<td>&nbsp;</td>\");\r\n                }\r\n                if (dir === 'right' || dir === 'both') {\r\n                    mw.$(cell).after(\"<td>&nbsp;</td>\");\r\n                }\r\n            }\r\n        };\r\n        this.insertRow = function (dir, cell) {\r\n            cell = cell || this.getActiveCell();\r\n            cell = mw.$(cell)[0];\r\n            if (cell === null) {\r\n                return false;\r\n            }\r\n            dir = dir || 'under';\r\n            var parent = cell.parentNode, cells = mw.$(parent).children('td'), i = 0, l = cells.length,\r\n                html = '';\r\n            for (; i < l; i++) {\r\n                html += '<td>&nbsp;</td>';\r\n            }\r\n            html = '<tr>' + html + '</tr>';\r\n            if (dir === 'under' || dir === 'both') {\r\n                mw.$(parent).after(html)\r\n            }\r\n            if (dir === 'above' || dir === 'both') {\r\n                mw.$(parent).before(html)\r\n            }\r\n        };\r\n        this.deleteRow = function (cell) {\r\n            cell = cell || this.getActiveCell();\r\n            mw.$(cell.parentNode).remove();\r\n        };\r\n        this.deleteColumn = function (cell) {\r\n            cell = cell || this.getActiveCell();\r\n            var index = DomService.index(cell), body = cell.parentNode.parentNode, rows = mw.$(body).children('tr'), l = rows.length, i = 0;\r\n            for (; i < l; i++) {\r\n                var row = rows[i];\r\n                mw.$(row.getElementsByTagName('td')[index]).remove();\r\n            }\r\n        };\r\n\r\n        this.setStyle = function (cls, cell) {\r\n            cell = cell || this.getActiveCell();\r\n            var table = DomService.firstParentWithTag(cell, 'table');\r\n            DomService.classNamespaceDelete(table, 'mw-wysiwyg-table');\r\n            mw.$(table).addClass(cls);\r\n        };\r\n        this.element = this.render();\r\n    }\r\n\r\n};\r\n","MWEditor.i18n = {\r\n    en: {\r\n        'Change': 'Change',\r\n        'Edit image': 'Edit',\r\n    }\r\n};\r\n","\r\nvar canDestroy = function (event) {\r\n    var target = event.target;\r\n    return !mw.tools.hasAnyOfClassesOnNodeOrParent(event, ['safe-element'])\r\n        && mw.tools.parentsOrCurrentOrderMatchOrOnlyFirstOrNone(target, ['allow-drop', 'nodrop']);\r\n};\r\n\r\n\r\n\r\n\r\nMWEditor.leSave = {\r\n   prepare: function(root){\r\n        if(!root) {\r\n            return null;\r\n        }\r\n       var doc = mw.tools.parseHtml();\r\n       var doc = document.implementation.createHTMLDocument(\"\");\r\n       doc.body.innerHTML = root.innerHTML;\r\n\r\n       mw.$('.element-current', doc).removeClass('element-current');\r\n       mw.$('.element-active', doc).removeClass('element-active');\r\n       mw.$('.disable-resize', doc).removeClass('disable-resize');\r\n       mw.$('.mw-webkit-drag-hover-binded', doc).removeClass('mw-webkit-drag-hover-binded');\r\n       mw.$('.module-cat-toggle-Modules', doc).removeClass('module-cat-toggle-Modules');\r\n       mw.$('.mw-module-drag-clone', doc).removeClass('mw-module-drag-clone');\r\n       mw.$('-module', doc).removeClass('-module');\r\n       mw.$('.empty-element', doc).remove();\r\n       mw.$('.empty-element', doc).remove();\r\n       mw.$('.edit .ui-resizable-handle', doc).remove();\r\n       mw.$('script', doc).remove();\r\n       mw.tools.classNamespaceDelete('all', 'ui-', doc, 'starts');\r\n       mw.$(\"[contenteditable]\", doc).removeAttr(\"contenteditable\");\r\n       var all = doc.querySelectorAll('[contenteditable]'),\r\n           l = all.length,\r\n           i = 0;\r\n       for (; i < l; i++) {\r\n           all[i].removeAttribute('contenteditable');\r\n       }\r\n       var all1 = doc.querySelectorAll('.module'),\r\n           l1 = all.length,\r\n           i1 = 0;\r\n       for (; i1 < l1; i1++) {\r\n           if (all[i1].querySelector('.edit') === null) {\r\n               all[i1].innerHTML = '';\r\n           }\r\n       }\r\n       return doc;\r\n   },\r\n   htmlAttrValidate:function(edits){\r\n        var final = [];\r\n        $.each(edits, function(){\r\n            var html = this.outerHTML;\r\n            html = html.replace(/url\\(&quot;/g, \"url('\");\r\n            html = html.replace(/jpg&quot;/g, \"jpg'\");\r\n            html = html.replace(/jpeg&quot;/g, \"jpeg'\");\r\n            html = html.replace(/png&quot;/g, \"png'\");\r\n            html = html.replace(/gif&quot;/g, \"gif'\");\r\n            final.push($(html)[0]);\r\n        })\r\n        return final;\r\n   },\r\n    pastedFromExcel: function (clipboard) {\r\n        var html = clipboard.getData('text/html');\r\n        return html.indexOf('ProgId content=Excel.Sheet') !== -1\r\n    },\r\n    areSameLike: function (el1, el2) {\r\n        if (!el1 || !el2) return false;\r\n        if (el1.nodeType !== el2.nodeType) return false;\r\n        if (!!el1.className.trim() || !!el2.className.trim()) {\r\n            return false;\r\n        }\r\n\r\n        var css1 = (el1.getAttribute('style') || '').replace(/\\s/g, '');\r\n        var css2 = (el2.getAttribute('style') || '').replace(/\\s/g, '');\r\n\r\n        if (css1 === css2 && el1.nodeName === el2.nodeName) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    },\r\n    cleanUnwantedTags: function (body) {\r\n        var scope = this;\r\n        mw.$('*', body).each(function () {\r\n            if (this.nodeName !== 'A' && mw.ea.helpers.isInlineLevel(this) && (this.className.trim && !this.className.trim())) {\r\n                if (scope.areSameLike(this, this.nextElementSibling) && this.nextElementSibling === this.nextSibling) {\r\n                    if (this.nextSibling !== this.nextElementSibling) {\r\n                        this.appendChild(this.nextSibling);\r\n                    }\r\n                    this.innerHTML = this.innerHTML + this.nextElementSibling.innerHTML;\r\n                    this.nextElementSibling.innerHTML = '';\r\n                    this.nextElementSibling.className = 'mw-skip-and-remove';\r\n                }\r\n            }\r\n        });\r\n        mw.$('.mw-skip-and-remove', body).remove();\r\n        return body;\r\n    },\r\n   getData: function(edits) {\r\n        mw.$(edits).each(function(){\r\n            mw.$('meta', this).remove();\r\n        });\r\n\r\n        edits = this.htmlAttrValidate(edits);\r\n        var l = edits.length,\r\n            i = 0,\r\n            helper = {},\r\n            master = {};\r\n        if (l > 0) {\r\n            for (; i < l; i++) {\r\n                helper.item = edits[i];\r\n                var rel = mw.tools.mwattr(helper.item, 'rel');\r\n                if (!rel) {\r\n                    mw.$(helper.item).removeClass('changed');\r\n                    mw.tools.foreachParents(helper.item, function(loop) {\r\n                        var cls = this.className;\r\n                        var rel = mw.tools.mwattr(this, 'rel');\r\n                        if (mw.tools.hasClass(cls, 'edit') && mw.tools.hasClass(cls, 'changed') && (!!rel)) {\r\n                            helper.item = this;\r\n                            mw.tools.stopLoop(loop);\r\n                        }\r\n                    });\r\n                }\r\n                var rel = mw.tools.mwattr(helper.item, 'rel');\r\n                if (!rel) {\r\n                    var field = !!helper.item.id ? '#'+helper.item.id : '';\r\n                    console.warn('Skipped save: .edit'+field+' element does not have rel attribute.');\r\n                    continue;\r\n                }\r\n                mw.$(helper.item).removeClass('changed orig_changed');\r\n                mw.$(helper.item).removeClass('module-over');\r\n\r\n                mw.$('.module-over', helper.item).each(function(){\r\n                    mw.$(this).removeClass('module-over');\r\n                });\r\n                mw.$('[class]', helper.item).each(function(){\r\n                    var cls = this.getAttribute(\"class\");\r\n                    if(typeof cls === 'string'){\r\n                        cls = cls.trim();\r\n                    }\r\n                    if(!cls){\r\n                        this.removeAttribute(\"class\");\r\n                    }\r\n                });\r\n                var content = this.cleanUnwantedTags(helper.item).innerHTML;\r\n                var attr_obj = {};\r\n                var attrs = helper.item.attributes;\r\n                if (attrs.length > 0) {\r\n                    var ai = 0,\r\n                        al = attrs.length;\r\n                    for (; ai < al; ai++) {\r\n                        attr_obj[attrs[ai].nodeName] = attrs[ai].nodeValue;\r\n                    }\r\n                }\r\n                var obj = {\r\n                    attributes: attr_obj,\r\n                    html: content\r\n                };\r\n                var objdata = \"field_data_\" + i;\r\n                master[objdata] = obj;\r\n            }\r\n        }\r\n        return master;\r\n    }\r\n};\r\n\r\nMWEditor.leCore = {};\r\n\r\n// methods accessible by scope.liveedit\r\n\r\nMWEditor.liveeditMode = function(scope){\r\n    return {\r\n\r\n        prepare: {\r\n            titles: function () {\r\n                var t = scope.querySelectorAll('[field=\"title\"]'),\r\n                    l = t.length,\r\n                    i = 0;\r\n\r\n                for (; i < l; i++) {\r\n                    mw.$(t[i]).addClass(\"nodrop\");\r\n                }\r\n            }\r\n        },\r\n\r\n        isSafeMode: function (el) {\r\n            if (!el) {\r\n                var sel = scope.selection;\r\n                if(!sel.rangeCount) return false;\r\n                var range = sel.getRangeAt(0);\r\n                el = scope.api.elementNode(range.commonAncestorContainer);\r\n            }\r\n            var hasSafe = mw.tools.hasAnyOfClassesOnNodeOrParent(el, ['safe-mode']);\r\n            var regInsafe = mw.tools.parentsOrCurrentOrderMatchOrNone(el, ['regular-mode', 'safe-mode']);\r\n            return hasSafe && !regInsafe;\r\n        },\r\n        init: function (body, scope) {\r\n            mw.$(body).on('keydown', function (event) {\r\n                if (event.type === 'keydown') {\r\n                    if (mw.tools.isField(event.target) || !event.target.isContentEditable) {\r\n                        return true;\r\n                    }\r\n                    var sel = scope.selection;\r\n                    if (mw.event.is.enter(event)) {\r\n                        if (MWEditor.liveeditMode.isSafeMode(event.target)) {\r\n                            var isList = mw.tools.firstMatchesOnNodeOrParent(event.target, ['li', 'ul', 'ol']);\r\n                            if (!isList) {\r\n                                event.preventDefault();\r\n                                scope.api.insertHTML('<br>\\u200C');\r\n                            }\r\n                        }\r\n                    }\r\n                    if (sel.rangeCount > 0) {\r\n                        var r = sel.getRangeAt(0);\r\n                        if (event.keyCode === 9 && !event.shiftKey && sel.focusNode.parentNode.isContentEditable && sel.isCollapsed) {   /* tab key */\r\n                            scope.api.insertHTML('&nbsp;&nbsp;&nbsp;&nbsp;');\r\n                            return false;\r\n                        }\r\n                        return manageDeleteAndBackspace(event, sel);\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        manageDeleteAndBackspaceInSafeMode : function (event, sel) {\r\n            var node = scope.api.elementNode(sel.focusNode);\r\n            var range = sel.getRangeAt(0);\r\n            if(!node.textContent.replace(/\\s/gi, '')){\r\n                MWEditor.liveeditMode._manageDeleteAndBackspaceInSafeMode.emptyNode(event, node, sel, range);\r\n                return false;\r\n            }\r\n            MWEditor.liveeditMode._manageDeleteAndBackspaceInSafeMode.nodeBoundaries(event, node, sel, range);\r\n            return true;\r\n        },\r\n        merge: {\r\n            /* Executes on backspace or delete */\r\n            isMergeable: function (el) {\r\n                if (!el) return false;\r\n                if (el.nodeType === 3) return true;\r\n                var is = false;\r\n                var css =  getComputedStyle(el);\r\n                var display = css.getPropertyValue('display');\r\n                var position = css.getPropertyValue('position');\r\n                var isInline = display === 'inline';\r\n                if (isInline) return true;\r\n                var mergeables = ['p', '.element', 'div:not([class])', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'];\r\n                mergeables.forEach(function (item) {\r\n                    if (el.matches(item)) {\r\n                        is = true;\r\n                    }\r\n                });\r\n\r\n                if (is) {\r\n                    if (el.querySelector('.module') !== null || mw.tools.hasClass(el, 'module')) {\r\n                        is = false;\r\n                    }\r\n                }\r\n                return is;\r\n            },\r\n            manageBreakables: function (curr, next, dir, event) {\r\n                var isnonbreakable = scope.liveedit.merge.isInNonbreakable(curr, dir);\r\n                if (isnonbreakable) {\r\n                    var conts = scope.selection.getRangeAt(0);\r\n                    event.preventDefault();\r\n                    if (next !== null) {\r\n                        if (next.nodeType === 3 && /\\r|\\n/.exec(next.nodeValue) !== null) {\r\n                            event.preventDefault();\r\n                            return false;\r\n                        }\r\n                        if (dir === 'next') {\r\n                            scope.liveedit.cursorToElement(next);\r\n                        }\r\n                        else {\r\n                            scope.liveedit.cursorToElement(next, 'end');\r\n                        }\r\n                    }\r\n                    else {\r\n                        return false;\r\n                    }\r\n                }\r\n            },\r\n            isInNonbreakable: function (el, dir) {\r\n                var absNext = scope.liveedit.merge.findNextNearest(el, dir);\r\n\r\n                if (absNext.nodeType === 3 && /\\r|\\n/.exec(absNext.nodeValue) !== null) {\r\n                    absNext = scope.liveedit.merge.findNextNearest(el, dir, true)\r\n                }\r\n\r\n                if (absNext.nodeType === 1) {\r\n                    if (mw.tools.hasAnyOfClasses(absNext, ['nodrop', 'allow-drop'])) {\r\n                        return false;\r\n                    }\r\n                    if (absNext.querySelector('.nodrop', '.allow-drop') !== null) {\r\n                        return false;\r\n                    }\r\n                }\r\n                if (scope.liveedit.merge.alwaysMergeable(absNext) && (scope.liveedit.merge.alwaysMergeable(absNext.firstElementChild) || !absNext.firstElementChild)) {\r\n                    return false;\r\n                }\r\n                if (el.textContent === '') {\r\n\r\n                    var absNextNext = scope.liveedit.merge.findNextNearest(absNext, dir);\r\n                    if (absNext.nodeType === 3 && /\\r|\\n/.exec(absNext.nodeValue) !== null) {\r\n                        return scope.liveedit.merge.isInNonbreakableClass(absNextNext)\r\n                    }\r\n                }\r\n\r\n                if (el.nodeType === 1 && !!el.textContent.trim()) {\r\n                    return false;\r\n                }\r\n                if (el.nextSibling === null && el.nodeType === 3 && dir == 'next') {\r\n                    var absNext = scope.liveedit.merge.findNextNearest(el, dir);\r\n                    var absNextNext = scope.liveedit.merge.findNextNearest(absNext, dir);\r\n                    if (/\\r|\\n/.exec(absNext.nodeValue) !== null) {\r\n                        return scope.liveedit.merge.isInNonbreakableClass(absNextNext)\r\n                    }\r\n\r\n                    if (absNextNext.nodeType === 1) {\r\n                        return scope.liveedit.merge.isInNonbreakableClass(absNextNext) || scope.liveedit.merge.isInNonbreakableClass(absNextNext.firstChild);\r\n                    }\r\n                    else if (absNextNext.nodeType === 3) {\r\n                        return true;\r\n                    }\r\n                    else {\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                if (el.previousSibling === null && el.nodeType === 3 && dir === 'prev') {\r\n                    var absNext = scope.liveedit.merge.findNextNearest(el, 'prev');\r\n                    var absNextNext = scope.liveedit.merge.findNextNearest(absNext, 'prev');\r\n                    if (absNextNext.nodeType === 1) {\r\n                        return scope.liveedit.merge.isInNonbreakableClass(absNextNext);\r\n                    }\r\n                    else if (absNextNext.nodeType === 3) {\r\n                        return true;\r\n                    }\r\n                    else {\r\n                        return false;\r\n                    }\r\n                }\r\n                el = scope.api.elementNode(el);\r\n\r\n                var is = scope.liveedit.merge.isInNonbreakableClass(el);\r\n                return is;\r\n            },\r\n            isInNonbreakableClass: function (el, dir) {\r\n                var absNext = scope.liveedit.merge.findNextNearest(el, dir);\r\n\r\n                if (el.nodeType === 3 && /\\r|\\n/.exec(absNext.nodeValue) === null) return false;\r\n                el = scope.api.elementNode(el);\r\n                var classes = ['unbreakable', '*col', '*row', '*btn', '*icon', 'module', 'edit'];\r\n                var is = false;\r\n                classes.forEach(function (item) {\r\n                    if (item.indexOf('*') === 0) {\r\n                        var item = item.split('*')[1];\r\n                        if (el.className.indexOf(item) !== -1) {\r\n                            is = true;\r\n                        }\r\n                        else {\r\n                            mw.tools.foreachParents(el, function (loop) {\r\n                                if (this.className.indexOf(item) !== -1 && !this.contains(el)) {\r\n                                    is = true;\r\n                                    mw.tools.stopLoop(loop);\r\n                                }\r\n                                else {\r\n                                    is = false;\r\n                                    mw.tools.stopLoop(loop);\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (mw.tools.hasClass(el, item) || mw.tools.hasParentsWithClass(el, item)) {\r\n                            is = true;\r\n                        }\r\n                    }\r\n                });\r\n                return is;\r\n            },\r\n            getNext: function (curr) {\r\n                var next = curr.nextSibling;\r\n                while (curr !== null && curr.nextSibling === null) {\r\n                    curr = curr.parentNode;\r\n                    next = curr.nextSibling;\r\n                }\r\n                return next;\r\n            },\r\n            getPrev: function (curr) {\r\n                var next = curr.previousSibling;\r\n                while (curr !== null && curr.previousSibling === null) {\r\n                    curr = curr.parentNode;\r\n                    next = curr.previousSibling;\r\n                }\r\n                return next;\r\n            },\r\n            findNextNearest: function (el, dir, searchElement) {\r\n                searchElement = typeof searchElement === 'undefined' ? false : true;\r\n                if (dir === 'next') {\r\n                    var dosearch = searchElement ? 'nextElementSibling' : 'nextSibling';\r\n                    var next = el[dosearch];\r\n                    if (next === null) {\r\n                        while (el[dosearch] === null) {\r\n                            el = el.parentNode;\r\n                            next = el[dosearch];\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    var dosearch = searchElement ? 'previousElementSibling' : 'previousSibling';\r\n                    var next = el[dosearch];\r\n                    if (next === null) {\r\n                        while (el[dosearch] === null) {\r\n                            el = el.parentNode;\r\n                            next = el[dosearch];\r\n                        }\r\n                    }\r\n                }\r\n                return next;\r\n            },\r\n            alwaysMergeable: function (el) {\r\n                if (!el) {\r\n                    return false;\r\n                }\r\n                if (el.nodeType === 3) {\r\n                    return scope.liveedit.merge.alwaysMergeable(scope.api.elementNode(el))\r\n                }\r\n                if (el.nodeType === 1) {\r\n                    if (/^(?:area|br|col|embed|hr|img|input|link|meta|param)$/i.test(el.tagName)) {\r\n                        return true;\r\n                    }\r\n                    if (/^(?:strong|em|i|b|li)$/i.test(el.tagName)) {\r\n                        return true;\r\n                    }\r\n                    if (/^(?:span)$/i.test(el.tagName) && !el.className) {\r\n                        return true;\r\n                    }\r\n                }\r\n                if (mw.tools.hasClass(el, 'module')) return false;\r\n                if (mw.tools.hasParentsWithClass(el, 'module')) {\r\n                    var ord = mw.tools.parentsOrder(el, ['edit', 'module']);\r\n                }\r\n                var selectors = [\r\n                        'p.element', 'div.element', 'div:not([class])',\r\n                        'h1.element', 'h2.element', 'h3.element', 'h4.element', 'h5.element', 'h6.element',\r\n                        '.edit  h1', '.edit  h2', '.edit  h3', '.edit  h4', '.edit  h5', '.edit  h6',\r\n                        '.edit p'\r\n                    ],\r\n                    final = false,\r\n                    i = 0;\r\n                for (; i < selectors.length; i++) {\r\n                    var item = selectors[i];\r\n                    if (el.matches(item)) {\r\n                        final = true;\r\n                        break;\r\n                    }\r\n                }\r\n                return final;\r\n            }\r\n        },\r\n        _manageDeleteAndBackspaceInSafeMode : {\r\n            emptyNode: function (event, node, sel, range) {\r\n                if(!canDestroy(node)) {\r\n                    return;\r\n                }\r\n                var todelete = node;\r\n                if(mw.tools.hasAnyOfClasses(node.parentNode, ['text', 'title'])){\r\n                    todelete = node.parentNode;\r\n                }\r\n                var transfer, transferPosition;\r\n                if (mw.event.is.delete(event)) {\r\n                    transfer = todelete.nextElementSibling;\r\n                    transferPosition = 'start';\r\n                } else {\r\n                    transfer = todelete.previousElementSibling;\r\n                    transferPosition = 'end';\r\n                }\r\n                var parent = todelete.parentNode;\r\n                scope.record({\r\n                    target: parent,\r\n                    value: parent.innerHTML\r\n                });\r\n                $(todelete).remove();\r\n                if(transfer && mw.tools.isEditable(transfer)) {\r\n                    setTimeout(function () {\r\n                        scope.liveedit.cursorToElement(transfer, transferPosition);\r\n                    });\r\n                }\r\n                scope.record({\r\n                    target: parent,\r\n                    value: parent.innerHTML\r\n                });\r\n            },\r\n            nodeBoundaries: function (event, node, sel, range) {\r\n                var isStart = range.startOffset === 0 || !((sel.anchorNode.data || '').substring(0, range.startOffset).replace(/\\s/g, ''));\r\n                var curr, content;\r\n                if(mw.event.is.backSpace(event) && isStart && range.collapsed){ // is at the beginning\r\n                    curr = node;\r\n                    if(mw.tools.hasAnyOfClasses(node.parentNode, ['text', 'title'])){\r\n                        curr = node.parentNode;\r\n                    }\r\n                    var prev = curr.previousElementSibling;\r\n                    if(prev && prev.nodeName === node.nodeName && canDestroy(node)) {\r\n                        content = node.innerHTML;\r\n                        scope.liveedit.cursorToElement(prev, 'end');\r\n                        prev.appendChild(range.createContextualFragment(content));\r\n                        $(curr).remove();\r\n                    }\r\n                } else if(mw.event.is.delete(event)\r\n                    && range.collapsed\r\n                    && range.startOffset === sel.anchorNode.data.replace(/\\s*$/,'').length // is at the end\r\n                    && canDestroy(node)){\r\n                    curr = node;\r\n                    if(mw.tools.hasAnyOfClasses(node.parentNode, ['text', 'title'])){\r\n                        curr = node.parentNode;\r\n                    }\r\n                    var next = curr.nextElementSibling, deleteParent;\r\n                    if(mw.tools.hasAnyOfClasses(next, ['text', 'title'])){\r\n                        next = next.firstElementChild;\r\n                        deleteParent = true;\r\n                    }\r\n                    if(next && next.nodeName === curr.nodeName) {\r\n                        content = next.innerHTML;\r\n                        setTimeout(function(){\r\n                            var parent = deleteParent ? next.parentNode.parentNode : next.parentNode;\r\n                            scope.actionRecord(function() {\r\n                                    return {\r\n                                        target: parent,\r\n                                        value: parent.innerHTML\r\n                                    };\r\n                                }, function () {\r\n                                    curr.append(range.createContextualFragment(content));\r\n                                }\r\n                            );\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        manageDeleteAndBackspace: function (event, sel) {\r\n            if (mw.event.is.delete(event) || mw.event.is.backSpace(event)) {\r\n                if(!sel.rangeCount) return;\r\n                var r = sel.getRangeAt(0);\r\n                var isSafe = scope.liveedit.isSafeMode();\r\n\r\n                if(isSafe) {\r\n                    return scope.liveedit.manageDeleteAndBackspaceInSafeMode(event, sel);\r\n                }\r\n                var nextNode = null, nextchar, nextnextchar, nextel;\r\n\r\n                if (mw.event.is.delete(event)) {\r\n                    nextchar = sel.focusNode.textContent.charAt(sel.focusOffset);\r\n                    nextnextchar = sel.focusNode.textContent.charAt(sel.focusOffset + 1);\r\n                    nextel = sel.focusNode.nextSibling || sel.focusNode.nextElementSibling;\r\n\r\n                } else {\r\n                    nextchar = sel.focusNode.textContent.charAt(sel.focusOffset - 1);\r\n                    nextnextchar = sel.focusNode.textContent.charAt(sel.focusOffset - 2);\r\n                    nextel = sel.focusNode.previouSibling || sel.focusNode.previousElementSibling;\r\n                }\r\n\r\n                if ((nextchar === ' ' || /\\r|\\n/.exec(nextchar) !== null) && sel.focusNode.nodeType === 3 && !nextnextchar) {\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                if (nextnextchar === '') {\r\n\r\n                    if (nextchar.replace(/\\s/g, '') === '' && r.collapsed) {\r\n\r\n                        if (nextel && !mw.tools.isBlockLevel(nextel) && ( typeof nextel.className === 'undefined' || !nextel.className.trim())) {\r\n                            return true;\r\n                        }\r\n                        else if (nextel && nextel.nodeName !== 'BR') {\r\n                            if (sel.focusNode.nodeName === 'P') {\r\n                                if (event.keyCode === 46) {\r\n                                    if (sel.focusNode.nextElementSibling.nodeName === 'P') {\r\n                                        return true;\r\n                                    }\r\n                                }\r\n                                if (event.keyCode === 8) {\r\n\r\n                                    if (sel.focusNode.previousElementSibling.nodeName === 'P') {\r\n                                        return true;\r\n                                    }\r\n                                }\r\n                            }\r\n                            event.preventDefault();\r\n                            return false;\r\n                        }\r\n\r\n                    }\r\n                    else if (\r\n                        (focus.previousElementSibling === null && rootfocus.previousElementSibling === null)\r\n                        && mw.tools.hasAnyOfClassesOnNodeOrParent(rootfocus, ['nodrop', 'allow-drop'])) {\r\n                        return false;\r\n                    }\r\n                }\r\n                if (nextchar === '') {\r\n\r\n                    if (mw.event.is.delete(event)) {\r\n                        nextNode = scope.liveedit.merge.getNext(sel.focusNode);\r\n                    }\r\n                    if (mw.event.is.backSpace(event)) {\r\n                        nextNode = scope.liveedit.merge.getPrev(sel.focusNode);\r\n                    }\r\n                    if (scope.liveedit.merge.alwaysMergeable(nextNode)) {\r\n                        return true;\r\n                    }\r\n\r\n                    var nonbr = scope.liveedit.merge.isInNonbreakable(nextNode)\r\n                    if (nonbr) {\r\n                        event.preventDefault();\r\n                        return false;\r\n                    }\r\n                    if (nextNode !== null && scope.liveedit.merge.isMergeable(nextNode)) {\r\n                        if (mw.event.is.delete(event)) {\r\n                            scope.liveedit.merge.manageBreakables(sel.focusNode, nextNode, 'next', event)\r\n                        }\r\n                        else {\r\n                            scope.liveedit.merge.manageBreakables(sel.focusNode, nextNode, 'prev', event)\r\n                        }\r\n                    }\r\n                    else {\r\n                        event.preventDefault();\r\n                    }\r\n                    if (nextNode === null) {\r\n                        nextNode = sel.focusNode.parentNode.nextSibling;\r\n                        if (!scope.liveedit.merge.isMergeable(nextNode)) {\r\n                            event.preventDefault();\r\n                        }\r\n                        if (mw.event.is.delete(event)) {\r\n                            scope.liveedit.merge.manageBreakables(sel.focusNode, nextNode, 'next', event)\r\n                        }\r\n                        else {\r\n                            scope.liveedit.merge.manageBreakables(sel.focusNode, nextNode, 'prev', event)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n\r\n    };\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappingsjpjgrcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5yBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACntsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACXA;AACA;AACA;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACxxsourceRoot":""}