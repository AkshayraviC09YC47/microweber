{"version":3,"file":"editor.js","sources":["webpack://microweber-webpack/./userfiles/modules/microweber/api/classes/element.js","webpack://microweber-webpack/./userfiles/modules/microweber/api/classes/object.service.js","webpack://microweber-webpack/./userfiles/modules/microweber/api/classes/state.js","webpack://microweber-webpack/webpack/bootstrap","webpack://microweber-webpack/webpack/runtime/define property getters","webpack://microweber-webpack/webpack/runtime/hasOwnProperty shorthand","webpack://microweber-webpack/webpack/runtime/make namespace object","webpack://microweber-webpack/./userfiles/modules/microweber/api/editor/editor.js","webpack://microweber-webpack/./userfiles/modules/microweber/api/editor/bar.js","webpack://microweber-webpack/./userfiles/modules/microweber/api/editor/api.js","webpack://microweber-webpack/./userfiles/modules/microweber/api/editor/helpers.js","webpack://microweber-webpack/./userfiles/modules/microweber/api/editor/tools.js","webpack://microweber-webpack/./userfiles/modules/microweber/api/editor/core.js","webpack://microweber-webpack/./userfiles/modules/microweber/api/editor/controllers.js","webpack://microweber-webpack/./userfiles/modules/microweber/api/editor/add.controller.js","webpack://microweber-webpack/./userfiles/modules/microweber/api/editor/interaction-controls.js","webpack://microweber-webpack/./userfiles/modules/microweber/api/editor/i18n.js","webpack://microweber-webpack/./userfiles/modules/microweber/api/editor/liveeditmode.js"],"sourcesContent":["import {ObjectService} from \"./object.service\";\n\n\n\n    var MWElement = function(options, root){\n        var scope = this;\n\n        this.isMWElement = true;\n\n        this.toggle = function () {\n            this.css('display', this.css('display') === 'none' ? 'block' : 'none');\n        };\n\n        this._active = function () {\n            return this.nodes[this.nodes.length - 1];\n        };\n\n        this.getDocument = function () {\n            return this._active().ownerDocument;\n        }\n\n        this.getWindow = function () {\n            return this.getDocument().defaultView;;\n        }\n\n        this.get = function(selector, scope){\n            this.nodes = (scope || document).querySelectorAll(selector);\n        };\n\n        this.each = function(cb){\n            if(this.nodes) {\n                for (var i = 0; i < this.nodes.length; i++) {\n                    cb.call(this.nodes[i], i);\n                }\n            } else if(this.node) {\n                cb.call(this.node, 0);\n            }\n            return this;\n        };\n\n        this.encapsulate = function () {\n\n        };\n\n        var contentManage = function (content, scope) {\n            if (content) {\n                if (Array.isArray(content)) {\n                    content.forEach(function (el){\n                        contentManage(el, scope);\n                    });\n                } else if (content instanceof MWElement) {\n                    scope.append(content);\n                } else if (typeof content === 'object') {\n                    scope.append(new MWElement(content));\n                }\n            }\n        }\n\n        this.create = function() {\n            var el = this.document.createElement(this.settings.tag);\n            this.node = el;\n\n            if (this.settings.encapsulate === true) {\n                var mode = this.settings.encapsulate === true ? 'open' : this.settings.encapsulate;\n                el.attachShadow({\n                    mode: mode\n                });\n            }\n            this.nodes = [el];\n\n            if (this.settings.content) {\n                contentManage(this.settings.content, this)\n            }\n        };\n\n        this._specialProps = function(dt, val){\n            if(dt === 'tooltip') {\n                this.node.dataset[dt] = val;\n                return true;\n            }\n        };\n\n        this.setProps = function(){\n            for(var i in this.settings.props) {\n                if (i === 'dataset') {\n                    for(var dt in this.settings.props[i]) {\n                        this.node.dataset[dt] = this.settings.props[i][dt];\n                    }\n                } else if (i === 'style') {\n                    for(var st in this.settings.props[i]) {\n                        this.node.style[st] = this.settings.props[i][st];\n                    }\n                } else {\n                    var val = this.settings.props[i];\n                    if(!this._specialProps(i, val)) {\n                        this.node[i] = val;\n                    }\n                }\n            }\n        };\n\n        this.__ = {\n            cssNumber: [\n                'animationIterationCount',\n                'columnCount',\n                'fillOpacity',\n                'flexGrow',\n                'flexShrink',\n                'fontWeight',\n                'gridArea',\n                'gridColumn',\n                'gridColumnEnd',\n                'gridColumnStart',\n                'gridRow',\n                'gridRowEnd',\n                'gridRowStart',\n                'lineHeight',\n                'opacity',\n                'order',\n                'orphans',\n                'widows',\n                'zIndex',\n                'zoom'\n            ]\n        };\n\n        this._normalizeCSSValue = function (prop, val) {\n            if(typeof val === 'number') {\n                if(this.__.cssNumber.indexOf(prop) === -1) {\n                    val = val + 'px';\n                }\n            }\n            return val;\n        };\n\n        this.css = function(css, val){\n            if(typeof css === 'string') {\n                if(typeof val !== 'undefined'){\n                    var nval =  this._normalizeCSSValue(css, val);\n                    this.each(function (){\n                        this.style[css] = nval;\n                    });\n                } else {\n                    return this.document.defaultView.getComputedStyle(this.node)[css];\n                }\n            }\n            if(typeof css === 'object') {\n                for (var i in css) {\n\n                    this.each(function (){\n                        this.style[i] = scope._normalizeCSSValue(i, css[i]);\n                    });\n                }\n            }\n            return this;\n        };\n\n        this.dataset = function(prop, val){\n            if(typeof val === 'undefined') {\n                return this._active()[prop];\n            }\n            this.each(function (){\n                this.dataset[prop] = val;\n            });\n            return this;\n        };\n\n        this.attr = function(prop, val){\n            if(typeof val === 'undefined') {\n                return this._active()[prop];\n            }\n            this.each(function (){\n                this.setAttribute(prop, val);\n            });\n            return this;\n        };\n\n        this.val = function(val){\n            if(typeof val === 'undefined') {\n                return this._active().value;\n            }\n            this.each(function (){\n                this.value = val;\n            });\n            return this;\n        };\n\n        this.prop = function(prop, val){\n            var active = this._active();\n            if(typeof val === 'undefined') {\n                return active[prop];\n            }\n            if(active[prop] !== val){\n                active[prop] = val;\n                this.trigger('propChange', [prop, val]);\n            }\n            return this;\n        };\n\n        this.hide = function () {\n            return this.each(function (){\n                this.style.display = 'none';\n            });\n        };\n        this.show = function () {\n            return this.each(function (){\n                this.style.display = '';\n            });\n        };\n\n        this.find = function (sel) {\n            var el = mw.element('#r' + new Date().getTime());\n            this.each(function (){\n                var all = this.querySelectorAll(sel);\n                for(var i = 0; i < all.length; i++) {\n                    if(el.nodes.indexOf(all[i]) === -1) {\n                        el.nodes.push(all[i]);\n                    }\n                }\n            });\n            return el;\n        };\n\n        this.addClass = function (cls) {\n            cls = cls.trim().split(' ');\n            return this.each(function (){\n                var node = this;\n                cls.forEach(function (singleClass){\n                    node.classList.add(singleClass);\n                });\n\n            });\n        };\n\n        this.toggleClass = function (cls) {\n            return this.each(function (){\n                this.classList.toggle(cls.trim());\n            });\n        };\n\n        this.removeClass = function (cls) {\n            var isArray = Array.isArray(cls);\n            if(!isArray) {\n                cls = cls.trim();\n                var isMultiple = cls.split(' ');\n                if(isMultiple.length > 1) {\n                    return this.removeClass(isMultiple)\n                }\n                return this.each(function (){\n                    this.classList.remove(cls);\n                });\n            } else {\n                return this.each(function (){\n                    var i = 0, l = cls.length;\n                    for ( ; i < l; i++) {\n                        this.classList.remove(cls[i]);\n                    }\n                });\n            }\n        };\n\n        this.remove = function () {\n            return this.each(function (){\n                this.remove();\n            });\n        };\n\n        this.empty = function () {\n            return this.html('');\n        };\n\n        this.html = function (val) {\n            if (typeof val === 'undefined') {\n                return this._active().innerHTML;\n            }\n            return this.each(function (){\n                this.innerHTML = val;\n            });\n        };\n        this.text = function (val, clean) {\n            if(typeof val === 'undefined') {\n                return this.node.textContent;\n            }\n            if(typeof clean === 'undefined') {\n                clean = true;\n            }\n            if (clean) {\n                val = this.document.createRange().createContextualFragment(val).textContent;\n            }\n            this.node.innerHTML = val;\n        };\n\n        this._asdom = function (obj) {\n            if (typeof obj === 'string') {\n                return this.document.createRange().createContextualFragment(obj);\n            } else if (obj.node){\n                return obj.node;\n            }\n            else if (obj.nodes){\n                return obj.nodes[obj.nodes.length - 1];\n            } else {\n                return obj;\n            }\n        };\n\n        this.offset = function () {\n            var curr = this._active();\n            var win = this.getWindow();\n            var rect = curr.getBoundingClientRect();\n            rect.offsetTop = rect.top + win.pageYOffset;\n            rect.offsetBottom = rect.bottom + win.pageYOffset;\n            rect.offsetLeft = rect.left + win.pageXOffset;\n            return rect;\n        };\n\n\n        this.width = function (val) {\n            if(val) {\n                return this.css('width', val);\n            }\n            return this._active().offsetWidth;\n        };\n\n        this.height = function (val) {\n            if(val) {\n                return this.css('height', val);\n            }\n            return this._active().offsetHeight;\n        };\n\n        this.parent = function () {\n            return mw.element(this._active().parentNode);\n        };\n        this.parents = function (selector) {\n            selector = selector || '*';\n            var el = this._active();\n            var curr = el.parentElement;\n            var res = mw.element();\n            res.nodes = []\n            while (curr) {\n                if(curr.matches(selector)) {\n                    res.nodes.push(curr);\n                }\n                curr = curr.parentElement;\n            }\n            return res;\n        };\n        this.append = function (el) {\n\n            if (el) {\n                this.each(function (){\n                    this.append(scope._asdom(el));\n                });\n            }\n            return this;\n        };\n\n        this.before = function (el) {\n            if (el) {\n                this.each(function (){\n                    if(this.parentNode){\n                        this.parentNode.insertBefore(scope._asdom(el), this);\n                    }\n                });\n            }\n            return this;\n        };\n\n        this.after = function (el) {\n            if (el) {\n                this.each(function (){\n                    if(this.parentNode) {\n                        this.parentNode.insertBefore(scope._asdom(el), this.nextSibling);\n                    }\n                });\n            }\n        };\n\n        this.prepend = function (el) {\n            if (el) {\n                this.each(function (){\n                    this.prepend(scope._asdom(el));\n                });\n            }\n            return this;\n        };\n        this._disabled = false;\n\n        Object.defineProperty(this, \"disabled\", {\n            get : function () { return this._disabled; },\n            set : function (value) {\n                this._disabled = value;\n                this.node.disabled = this._disabled;\n                this.node.dataset.disabled = this._disabled;\n            }\n        });\n\n        this.trigger = function(event, data){\n            data = data || {};\n            this.each(function (){\n                this.dispatchEvent(new CustomEvent(event, {\n                    detail: data,\n                    cancelable: true,\n                    bubbles: true\n                }));\n                if(scope._on[event]) {\n                    scope._on[event].forEach(function(cb){\n                        cb.call(this, event, data);\n                    });\n                }\n            });\n            return this;\n        };\n\n        this.get = function (i) {\n            return this.nodes[i];\n        };\n\n        this._on = {};\n        this.on = function(events, cb){\n            events = events.trim().split(' ');\n            events.forEach(function (ev) {\n                if(!scope._on[ev]) {  scope._on[ev] = []; }\n                scope._on[ev].push(cb);\n                scope.each(function (){\n                    /*this.addEventListener(ev, function(e) {\n                        cb.call(scope, e, e.detail, this);\n                    }, false);*/\n                    this.addEventListener(ev, cb, false);\n                });\n            });\n            return this;\n        };\n        this.init = function(){\n            this.nodes = [];\n            this.root = root || document;\n            if(this.root instanceof MWElement) {\n                this.root = this.root.get(0)\n            }\n            this._asElement = false;\n            this.document =  (this.root.body ? this.root : this.root.ownerDocument);\n\n            options = options || {};\n\n            if(options.nodeName && options.nodeType) {\n                this.nodes.push(options);\n                this.node = (options);\n                options = {};\n                this._asElement = true;\n            } else if(typeof options === 'string') {\n                if(options.indexOf('<') === -1) {\n\n                    this.nodes = Array.prototype.slice.call(this.root.querySelectorAll(options));\n                    options = {};\n                    this._asElement = true;\n                } else if(this.settings.content instanceof MWElement) {\n                    this.append(this.settings.content);\n                }  else if(typeof this.settings.content === 'object') {\n                    this.append(new MWElement(this.settings.content));\n                }else {\n                    var el = this._asdom(options);\n\n                    this.nodes = [].slice.call(el.children);\n                    this._asElement = true;\n                }\n            }\n\n            options = options || {};\n\n            var defaults = {\n                tag: 'div',\n                props: {}\n            };\n\n            this.settings = ObjectService.extend({}, defaults, options);\n\n            if(this._asElement) return;\n            this.create();\n            this.setProps();\n        };\n        this.init();\n    };\nconst DomQuery = function(options, root){\n    return new MWElement(options, root);\n};\nDomQuery.module = function (name, func) {\n    MWElement.prototype[name] = func;\n};\n\n\n\n\nconst nodeName = 'mw-le-element';\nif (window.customElements && !customElements.get(nodeName)) {\n    customElements.define( nodeName,\n        class extends HTMLElement {\n            constructor() {\n                super();\n            }\n        }\n    );\n}\nexport const ElementManager = (config, root) => {\n    if (config instanceof Object && !config.nodeType) {\n        config = ObjectService.extend({}, config || {}, { tag: config.tag || nodeName });\n    }\n    return DomQuery(config, root)\n}\n","export class ObjectService {\r\n    static extend () {\r\n        const extended = {};\r\n        let deep = false;\r\n        let i = 0;\r\n        const l = arguments.length;\r\n\r\n        if ( Object.prototype.toString.call( arguments[0] ) === '[object Boolean]' ) {\r\n            deep = arguments[0];\r\n            i++;\r\n        }\r\n        const merge = function (obj) {\r\n            for ( const prop in obj ) {\r\n                if ( Object.prototype.hasOwnProperty.call( obj, prop ) ) {\r\n                    if ( deep && Object.prototype.toString.call(obj[prop]) === '[object Object]' ) {\r\n                        extended[prop] = ObjectService.extend( true, extended[prop], obj[prop] );\r\n                    } else {\r\n                        extended[prop] = obj[prop];\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        for ( ; i < l; i++ ) {\r\n            const obj = arguments[i];\r\n            merge(obj);\r\n        }\r\n        return extended;\r\n\r\n    }\r\n}\r\n","export const State = function(options){\n\n    var scope = this;\n    var defaults = {\n        maxItems: 1000\n    };\n    this.options = $.extend({}, defaults, (options || {}));\n    this._state = this.options.state || [];\n    this._active = null;\n    this._activeIndex = -1;\n\n    this.hasNext = false;\n    this.hasPrev = false;\n\n    this.state = function(state){\n        if(!state){\n            return this._state;\n        }\n        this._state = state;\n        return this;\n    };\n    var _e = {};\n    this.on = function (e, f) { _e[e] ? _e[e].push(f) : (_e[e] = [f]) };\n    this.dispatch = function (e, f) { _e[e] ? _e[e].forEach(function (c){ c.call(this, f); }) : ''; };\n\n\n    this.active = function(active){\n        if(!active){\n            return this._active;\n        }\n    };\n\n    this.activeIndex = function(activeIndex){\n        if(!activeIndex){\n            return this._activeIndex;\n        }\n    };\n\n    this._timeout = null;\n    this.timeoutRecord = function(item){\n        clearTimeout(this._timeout);\n        this._timeout = setTimeout(function(scope, item){\n            scope.record(item);\n        }, 333, this, item);\n    };\n\n    var recentRecordIsEqual = function (item) {\n        const curr = scope._state[0];\n        if(!curr) return false;\n        for (var n in item) {\n            if(curr[n] !== item[n]) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    this.record = function(item){\n        if(this._activeIndex>-1) {\n            var i = 0;\n            while ( i <  this._activeIndex) {\n                this._state.shift();\n                i++;\n            }\n        }\n        if (recentRecordIsEqual(item)) {\n            return;\n        }\n        this._state.unshift(item);\n        if(this._state.length >= this.options.maxItems) {\n            this._state.splice(-1,1);\n        }\n        this._active = null;\n        this._activeIndex = -1;\n        this.afterChange(false);\n        $(this).trigger('stateRecord', [this.eventData()]);\n        this.dispatch('record', [this.eventData()]);\n        return this;\n    };\n\n    this.actionRecord = function(recordGenFunc, action){\n        this.record(recordGenFunc());\n        action.call();\n        this.record(recordGenFunc());\n    };\n\n    this.redo = function(){\n        this._activeIndex--;\n        this._active = this._state[this._activeIndex];\n        this.afterChange('stateRedo');\n        this.dispatch('redo');\n        return this;\n    };\n\n    this.undo = function(){\n        if(this._activeIndex === -1) {\n            this._activeIndex = 1;\n        }\n        else{\n            this._activeIndex++;\n        }\n        this._active = this._state[this._activeIndex];\n        this.afterChange('stateUndo');\n        this.dispatch('undo');\n        return this;\n    };\n\n    this.hasRecords = function(){\n        return !!this._state.length;\n    };\n\n    this.eventData = function(){\n        return {\n            hasPrev: this.hasPrev,\n            hasNext: this.hasNext,\n            active: this.active(),\n            activeIndex: this.activeIndex()\n        };\n    };\n    this.afterChange = function(action){\n        this.hasNext = true;\n        this.hasPrev = true;\n\n        if(action) {\n            if(this._activeIndex >= this._state.length) {\n                this._activeIndex = this._state.length - 1;\n                this._active = this._state[this._activeIndex];\n            }\n        }\n\n        if(this._activeIndex <= 0) {\n            this.hasPrev = false;\n        }\n        if(this._activeIndex === this._state.length-1 || (this._state.length === 1 && this._state[0].$initial)) {\n            this.hasNext = false;\n        }\n\n        if(action){\n\n            mw.$(this).trigger(action, [this.eventData()]);\n        }\n        if(action !== false){\n            mw.$(this).trigger('change', [this.eventData()]);\n        }\n        return this;\n    };\n\n    this.reset = function(){\n        this._state = this.options.state || [];\n        this.afterChange('reset');\n        return this;\n    };\n\n    this.clear = function(){\n        this._state = [];\n        this.afterChange('clear');\n        return this;\n    };\n\n\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\nimport {ElementManager} from \"../classes/element\";\nimport {State} from \"../classes/state\";\n\n\n\nvar EditorPredefinedControls = {\n    'default': [\n        [ 'bold', 'italic', 'underline' ],\n    ],\n    smallEditorDefault: [\n        ['bold', 'italic', '|', 'link']\n    ]\n};\n\nwindow.MWEditor = function (options) {\n    var defaults = {\n        regions: null,\n        document: document,\n        executionDocument: document,\n        mode: 'div', // iframe | div | document\n        controls: 'default',\n        smallEditor: false,\n        scripts: [],\n        cssFiles: [],\n        content: '',\n        url: null,\n        skin: 'default',\n        state: null,\n        iframeAreaSelector: null,\n        activeClass: 'active-control',\n        interactionControls: [\n            'image', 'linkTooltip', 'tableManager'\n        ],\n        language: 'en',\n        rootPath: mw.settings.modules_url + 'microweber/api/editor',\n        editMode: 'normal', // normal | liveedit\n        bar: null,\n    };\n\n    this.actionWindow = window;\n\n    options = options || {};\n\n    this.settings = Object.assign({}, defaults, options);\n\n\n    if (typeof this.settings.controls === 'string') {\n        this.settings.controls = EditorPredefinedControls[this.settings.controls] || EditorPredefinedControls.default;\n    }\n\n    if(!!this.settings.smallEditor) {\n        if(this.settings.smallEditor === true) {\n            this.settings.smallEditor = EditorPredefinedControls.smallEditorDefault;\n        } else if (typeof this.settings.smallEditor === 'string') {\n            this.settings.smallEditor = EditorPredefinedControls[this.settings.smallEditor] || EditorPredefinedControls.smallEditorDefault;\n        }\n    }\n\n    this.document = this.settings.document;\n\n    var scope = this;\n\n    if(!this.settings.selector && this.settings.element){\n        this.settings.selector = this.settings.element;\n    }\n\n    if(!this.settings.selector && this.settings.mode === 'document'){\n        this.settings.selector = this.document.body;\n    }\n    if(!this.settings.selector){\n        console.warn('MWEditor - selector not specified');\n        return;\n    }\n\n    this.settings.selectorNode = $(this.settings.selector)[0];\n\n    if (this.settings.selectorNode) {\n        this.settings.selectorNode.__MWEditor = this;\n    }\n\n    this.settings.isTextArea = this.settings.selectorNode.nodeName && this.settings.selectorNode.nodeName === 'TEXTAREA';\n\n\n    this.getSelection = function () {\n        return scope.actionWindow.getSelection();\n    };\n\n    this.selection = this.getSelection();\n\n    this._interactionTime = new Date().getTime();\n\n    this.interactionControls = [];\n    this.createInteractionControls = function () {\n        this.settings.interactionControls.forEach(function(ctrl){\n            if (MWEditor.interactionControls[ctrl]) {\n                var int = new MWEditor.interactionControls[ctrl](scope, scope);\n                if(!int.element){\n                    int.element = int.render();\n                }\n                scope.actionWindow.document.body.appendChild(int.element.node);\n                scope.interactionControls.push(int);\n            }\n        });\n    };\n\n    this.lang = function (key) {\n        if (MWEditor.i18n[this.settings.language] && MWEditor.i18n[this.settings.language][key]) {\n            return  MWEditor.i18n[this.settings.language][key];\n        }\n        //console.warn(key + ' is not specified for ' + this.settings.language + ' language');\n        return key;\n    };\n\n    this.require = function () {\n\n    };\n\n    this.addDependencies = function (obj){\n        this.controls.forEach(function (ctrl) {\n            if (ctrl.dependencies) {\n                ctrl.dependencies.forEach(function (dep) {\n                    scope.addDependency(dep);\n                });\n            }\n        });\n        this.interactionControls.forEach(function (int) {\n            if (int.dependencies) {\n                int.dependencies.forEach(function (dep) {\n                    scope.addDependency(dep);\n                });\n            }\n        });\n        var node = scope.actionWindow.document.createElement('link');\n        node.href = this.settings.rootPath + '/area-styles.css';\n        node.type = 'text/css';\n        node.rel = 'stylesheet';\n        scope.actionWindow.document.body.appendChild(node);\n    };\n    this.addDependency = function (obj) {\n        var targetWindow = obj.targetWindow || scope.actionWindow;\n        if (!type) {\n            type = url.split('.').pop();\n        }\n        if(!type || !url) return;\n        var node;\n        if(type === 'css') {\n            node = targetWindow.document.createElement('link');\n            node.rel = 'stylesheet';\n            node.href = url;\n            node.type = 'text/css';\n        } else if(type === 'js') {\n            node = targetWindow.document.createElement('script');\n            node.src = url;\n        }\n        targetWindow.document.body.appendChild(node);\n    };\n\n    this.interactionControlsRun = function (data) {\n        scope.interactionControls.forEach(function (ctrl) {\n            ctrl.interact(data);\n        });\n    };\n\n    var _observe = function(e){\n        e = e || {type: 'action'};\n        var max = 78;\n        var eventIsActionLike = e.type === 'click' || e.type === 'execCommand' || e.type === 'keydown' || e.type === 'action';\n        var event = e.originaleEvent ? e.originaleEvent : e;\n        var localTarget = event.target;\n\n        if (!e.target) {\n            localTarget = scope.getSelection().focusNode;\n         }\n        var wTarget = localTarget;\n        if(eventIsActionLike) {\n            var shouldCloseSelects = false;\n            while (wTarget) {\n                var cc = wTarget.classList;\n                if(cc) {\n                    if(cc.contains('mw-editor-controller-component-select')) {\n                        break;\n                    } else if(cc.contains('mw-bar-control-item-group')) {\n                        break;\n                    } else if(cc.contains('mw-editor-area')) {\n                        shouldCloseSelects = true;\n                        break;\n                    } else if(cc.contains('mw-editor-frame-area')) {\n                        shouldCloseSelects = true;\n                        break;\n                    } else if(cc.contains('mw-editor-wrapper')) {\n                        shouldCloseSelects = true;\n                        break;\n                    }\n                }\n                wTarget = wTarget.parentNode;\n            }\n            if(shouldCloseSelects) {\n                MWEditor.core._preSelect();\n            }\n        }\n        var time = new Date().getTime();\n        if(eventIsActionLike || (time - scope._interactionTime) > max){\n            if (e.pageX) {\n                scope.interactionData.pageX = e.pageX;\n                scope.interactionData.pageY = e.pageY;\n            }\n            scope._interactionTime = time;\n            scope.selection = scope.getSelection();\n            if (scope.selection.rangeCount === 0) {\n                return;\n            }\n            var target = scope.api.elementNode( scope.selection.getRangeAt(0).commonAncestorContainer );\n            var css = getComputedStyle(target);\n            var api = scope.api;\n\n\n            var iterData = {\n                selection: scope.selection,\n                target: target,\n                localTarget: localTarget,\n                isImage: localTarget.nodeName === 'IMG' || target.nodeName === 'IMG',\n                css: css,\n                event: event,\n                api: api,\n                scope: scope,\n                isEditable: scope.api.isSelectionEditable(),\n                eventIsActionLike: eventIsActionLike,\n            };\n\n            scope.interactionControlsRun(iterData);\n            scope.controls.forEach(function (ctrl) {\n                if(ctrl.checkSelection) {\n                    ctrl.checkSelection({\n                        selection: scope.selection,\n                        controller: ctrl,\n                        target: target,\n                        css: css.get,\n                        cssNative: css.css,\n                        api: api,\n                        eventIsActionLike: eventIsActionLike,\n                        scope: scope,\n                        isEditable: scope.api.isSelectionEditable()\n                    });\n                }\n            });\n        }\n    };\n\n    this.initInteraction = function () {\n        var ait = 100,\n            currt = new Date().getTime();\n        this.interactionData = {};\n        $(scope.actionWindow.document).on('selectionchange', function(e){\n            $(scope).trigger('selectionchange', [{\n                event: e,\n                interactionData: scope.interactionData\n            }]);\n        });\n\n        $(scope).on('execCommand', function (){\n            _observe();\n        });\n        scope.state.on('undo', function (){\n            setTimeout(function (){\n                _observe();\n            }, 123);\n        });\n        scope.state.on('redo', function (){\n            var active = scope.state.active();\n            var target = active ? active.target : scope.getSelection().focusNode();\n            setTimeout(function (){\n                _observe();\n            }, 123);\n        });\n        scope.$editArea.on('touchstart touchend click keydown execCommand mousemove touchmove', _observe);\n        this.createInteractionControls();\n    };\n\n    this._preventEvents = [];\n    this.preventEvents = function () {\n        var node;\n        if(this.area && this._preventEvents.indexOf(this.area.node) === -1) {\n            this._preventEvents.push(this.area.node);\n            node = this.area.node;\n        } else if(scope.$iframeArea && this._preventEvents.indexOf(scope.$iframeArea[0]) === -1) {\n            this._preventEvents.push(scope.$iframeArea[0]);\n            node = scope.$iframeArea[0];\n        }\n        var ctrlDown = false;\n        var ctrlKey = 17, vKey = 86, cKey = 67, zKey = 90;\n        node.onkeydown = function (e) {\n            if (e.keyCode === ctrlKey || e.keyCode === 91) {\n                ctrlDown = true;\n            }\n            if ((ctrlDown && e.keyCode === zKey) /*|| (ctrlDown && e.keyCode === vKey)*/ || (ctrlDown && e.keyCode === cKey)) {\n                e.preventDefault();\n                return false;\n            }\n        };\n        node.onkeyup = function(e) {\n            if (e.keyCode === 17 || e.keyCode === 91) {\n                ctrlDown = false;\n            }\n        };\n    };\n    this.initState = function () {\n        this.state = this.settings.state || (new State());\n    };\n\n    this.controllerActive = function (node, active) {\n        node.classList[active ? 'add' : 'remove'](this.settings.activeClass);\n    };\n\n    this.createFrame = function () {\n        this.frame = this.document.createElement('iframe');\n        this.frame.className = 'mw-editor-frame';\n        this.frame.allow = 'accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture';\n        this.frame.allowFullscreen = true;\n        this.frame.scrolling = \"yes\";\n        this.frame.width = \"100%\";\n        this.frame.frameBorder = \"0\";\n        if (this.settings.url) {\n            this.frame.src = this.settings.url;\n        } else {\n\n        }\n\n        $(this.frame).on('load', function () {\n            if (!scope.settings.iframeAreaSelector) {\n                var area = document.createElement('div');\n                area.style.outline = 'none';\n                area.className = 'mw-editor-frame-area';\n                scope.settings.iframeAreaSelector =  '.' + area.className;\n                this.contentWindow.document.body.append(area);\n                area.style.minHeight = '100px';\n            }\n            scope.$iframeArea = $(scope.settings.iframeAreaSelector, this.contentWindow.document);\n\n            scope.$iframeArea.html(scope.settings.content || '');\n            scope.$iframeArea.on('input', function () {\n                scope.registerChange();\n            });\n            scope.actionWindow = this.contentWindow;\n            scope.$editArea = scope.$iframeArea;\n            mw.tools.iframeAutoHeight(scope.frame);\n\n            scope.preventEvents();\n            $(scope).trigger('ready');\n        });\n        this.wrapper.appendChild(this.frame);\n    };\n\n    this.createWrapper = function () {\n        this.wrapper = this.document.createElement('div');\n        this.wrapper.className = 'mw-editor-wrapper mw-editor-' + this.settings.skin;\n    };\n\n    this._syncTextArea = function (content) {\n\n        if(scope.$editArea){\n            $('[contenteditable]', scope.$editArea).removeAttr('contenteditable');\n        }\n\n        content = content || scope.$editArea.html();\n        if (scope.settings.isTextArea) {\n            $(scope.settings.selectorNode).val(content);\n            $(scope.settings.selectorNode).trigger('change');\n        }\n    };\n\n    this._registerChangeTimer = null;\n    this.registerChange = function (content) {\n        clearTimeout(this._registerChangeTimer);\n        this._registerChangeTimer = setTimeout(function () {\n            content = content || scope.$editArea.html();\n            scope._syncTextArea(content);\n            $(scope).trigger('change', [content]);\n        }, 78);\n    };\n\n    this.createArea = function () {\n        var content = this.settings.content || '';\n        if(!content && this.settings.isTextArea) {\n            content = this.settings.selectorNode.value;\n        }\n        this.area = ElementManager({\n            props: { className: 'mw-editor-area', innerHTML: content }\n        });\n        this.area.node.contentEditable = true;\n        this.area.node.oninput = function() {\n            scope.registerChange();\n        };\n        this.wrapper.appendChild(this.area.node);\n        scope.$editArea = this.area;\n        scope.preventEvents();\n        $(scope).trigger('ready');\n    };\n\n    this.documentMode = function () {\n        if(!this.settings.regions) {\n            console.warn('Regions are not defined in Document mode.');\n            return;\n        }\n        this.$editArea = ElementManager(this.document.body);\n        this.wrapper.className += ' mw-editor-wrapper-document-mode';\n        this.$editArea.append(this.wrapper)[0].mwEditor = this;\n        $(scope).trigger('ready');\n    };\n\n    this.setContent = function (content, trigger) {\n        if(typeof trigger === 'undefined'){\n            trigger = true;\n        }\n        this.$editArea.html(content);\n        if(trigger){\n            scope.registerChange(content);\n        }\n    };\n\n    this.nativeElement = function (node) {\n        return node.node ? node.node : node;\n    };\n\n    this.controls = [];\n    this.api = MWEditor.api(this);\n\n    this._addControllerGroups = [];\n    this.addControllerGroup = function (obj, row, bar) {\n        if(!bar) {\n            bar = 'bar';\n        }\n        var group = obj.group;\n        var id = mw.id('mw.editor-group-');\n        var el = ElementManager({\n            props: {\n                className: 'mw-bar-control-item mw-bar-control-item-group',\n                id:id\n            }\n        });\n\n        var groupel = ElementManager({\n                props:{\n                    className: 'mw-bar-control-item-group-contents'\n                }\n            });\n\n        var icon = MWEditor.core.button({\n            tag:'span',\n            props: {\n                className: ' mw-editor-group-button',\n                innerHTML: '<span class=\"mw-editor-group-button-caret\"></span>'\n            }\n        });\n        if(group.icon) {\n            icon.prepend('<span class=\"' + group.icon + ' mw-editor-group-button-icon\"></span>');\n            icon.on('click', function () {\n                MWEditor.core._preSelect(this.parentNode);\n                this.parentNode.classList.toggle('active');\n            });\n\n        } else if(group.controller) {\n            if(scope.controllers[group.controller]){\n                var ctrl = new scope.controllers[group.controller](scope, scope.api, scope);\n                scope.controls.push(ctrl);\n                icon.prepend(ctrl.element);\n                ElementManager(icon.get(0).querySelector('.mw-editor-group-button-caret')).on('click', function () {\n                    MWEditor.core._preSelect(this.parentNode.parentNode);\n                    this.parentNode.parentNode.classList.toggle('active');\n                });\n            } else if(scope.controllersHelpers[group.controller]){\n                groupel.append(this.controllersHelpers[group.controller]());\n            }\n        }\n        el.append(icon);\n\n        groupel.on('click', function (){\n            MWEditor.core._preSelect();\n        });\n\n        var media;\n        obj.group.when = obj.group.when || 9999;\n        // at what point group buttons become like dropdown - by default it's always a dropdown\n        if (obj.group.when) {\n            if (typeof obj.group.when === 'number') {\n                media = '(max-width: ' + obj.group.when + 'px)';\n            } else {\n                media = obj.group.when;\n            }\n        }\n\n\n\n        el.append(groupel);\n        row = typeof row !== 'undefined' ? row :  this.settings.controls.length - 1;\n        group.controls.forEach(function (name) {\n            if(scope.controllers[name]){\n                var ctrl = new scope.controllers[name](scope, scope.api, scope);\n                scope.controls.push(ctrl);\n                groupel.append(ctrl.element);\n            } else if(scope.controllersHelpers[name]){\n                groupel.append(this.controllersHelpers[name]());\n            }\n        });\n\n        scope[bar].add(el, row);\n\n        this._addControllerGroups.push({\n            el: el,\n            row: row,\n            obj: obj,\n            media: media\n        });\n        return el;\n    };\n\n    this.controlGroupManager = function () {\n        var check = function() {\n            var i = 0, l = scope._addControllerGroups.length;\n            for ( ; i< l ; i++) {\n                var item = scope._addControllerGroups[i];\n                var media = item.media;\n                if(media) {\n                    var match = scope.document.defaultView.matchMedia(media);\n                    item.el.$node[match.matches ? 'addClass' : 'removeClass']('mw-editor-control-group-media-matches');\n                }\n            }\n        };\n        $(window).on('load resize orientationchange', function () {\n            check();\n        });\n        check();\n    };\n\n    this.addController = function (name, row, bar) {\n        row = typeof row !== 'undefined' ? row :  this.settings.controls.length - 1;\n        if (!bar) {\n            bar = 'bar';\n        }\n        if(this.controllers[name]){\n            var ctrl = new this.controllers[name](scope, scope.api, scope);\n            if (!ctrl.element) {\n                ctrl.element = ctrl.render();\n            }\n\n            this.controls.push(ctrl);\n            this[bar].add(ctrl.element, row);\n        } else if(this.controllersHelpers[name]){\n            this[bar].add(this.controllersHelpers[name](), row);\n        }\n    };\n\n    this.createSmallEditor = function () {\n        if (!this.settings.smallEditor) {\n            return;\n        }\n        this.smallEditor = ElementManager({\n            props: {\n                className: 'mw-small-editor mw-small-editor-skin-' + this.settings.skin\n            }\n        });\n\n        this.smallEditorBar = mw.bar();\n\n        this.smallEditor.hide();\n        this.smallEditor.append(this.smallEditorBar.bar);\n        for (var i1 = 0; i1 < this.settings.smallEditor.length; i1++) {\n            var item = this.settings.smallEditor[i1];\n            this.smallEditorBar.createRow();\n            for (var i2 = 0; i2 < item.length; i2++) {\n                if( typeof item[i2] === 'string') {\n                    scope.addController(item[i2], i1, 'smallEditorBar');\n                } else if( typeof item[i2] === 'object') {\n                    scope.addControllerGroup(item[i2], i1, 'smallEditorBar');\n                }\n            }\n        }\n        scope.$editArea.on('mouseup touchend', function (e, data) {\n            if (scope.selection && !scope.selection.isCollapsed) {\n                if(!mw.tools.hasParentsWithClass(e.target, 'mw-bar')){\n                    scope.smallEditor.css({\n                        top: scope.interactionData.pageY - scope.smallEditor.$node.height() - 20,\n                        left: scope.interactionData.pageX,\n                        display: 'block'\n                    });\n                }\n            } else {\n                scope.smallEditor.hide();\n            }\n        });\n        this.actionWindow.document.body.appendChild(this.smallEditor.node);\n    };\n    this.createBar = function () {\n        this.bar = mw.settings.bar || mw.bar();\n        for (var i1 = 0; i1 < this.settings.controls.length; i1++) {\n            var item = this.settings.controls[i1];\n            this.bar.createRow();\n            for (var i2 = 0; i2 < item.length; i2++) {\n                if( typeof item[i2] === 'string') {\n                    scope.addController(item[i2], i1);\n                } else if( typeof item[i2] === 'object') {\n                    scope.addControllerGroup(item[i2], i1);\n                }\n            }\n        }\n        this.wrapper.appendChild(this.bar.bar);\n    };\n\n    this._onReady = function () {\n        $(this).on('ready', function () {\n            scope.initInteraction();\n            scope.api.execCommand('enableObjectResizing', false, 'false');\n            scope.api.execCommand('2D-Position', false, false);\n            scope.api.execCommand(\"enableInlineTableEditing\", null, false);\n            if(!scope.state.hasRecords()){\n                scope.state.record({\n                    $initial: true,\n                    target: scope.$editArea.get(0),\n                    value: scope.$editArea.get(0).innerHTML\n                });\n            }\n            scope.settings.regions = scope.settings.regions || scope.$editArea;\n            $(scope.settings.regions, scope.actionWindow.document).attr('contenteditable', true);\n            if (scope.settings.editMode === 'liveedit') {\n                scope.liveEditMode();\n            }\n            var css = {};\n            if(scope.settings.minHeight) {\n                css.minHeight = scope.settings.minHeight;\n            }\n            if(scope.settings.maxHeight) {\n                css.maxHeight = scope.settings.maxHeight;\n            }\n            if(scope.settings.height) {\n                css.height = scope.settings.height;\n            }\n            if(scope.settings.minWidth) {\n                css.minWidth = scope.settings.minWidth;\n            }\n            if(scope.settings.maxWidth) {\n                css.maxWidth = scope.settings.maxWidth;\n            }\n            if(scope.settings.width) {\n                css.width = scope.settings.width;\n            }\n            scope.$editArea.css(css);\n            scope.addDependencies();\n            scope.createSmallEditor();\n\n        });\n    };\n\n    this.liveEditMode = function () {\n        this.liveedit = MWEditor.liveeditMode(this.actionWindow.document.body, scope);\n    };\n\n    this._initInputRecordTime = null;\n    this._initInputRecord = function () {\n        $(this).on('change', function (e, html) {\n            clearTimeout(scope._initInputRecordTime);\n            scope._initInputRecordTime = setTimeout(function () {\n                scope.state.record({\n                    target: scope.$editArea.get(0),\n                    value: html\n                });\n            }, 600);\n\n        });\n    };\n\n    this.__insertEditor = function () {\n        if (this.settings.isTextArea) {\n            var el = ElementManager(this.settings.selector);\n            el.get(0).mwEditor = this;\n            el.hide();\n            var areaWrapper = ElementManager();\n            areaWrapper.node.mwEditor = this;\n            el.after(areaWrapper.node);\n            areaWrapper.append(this.wrapper);\n        } else {\n            ElementManager(this.settings.selector).append(this.wrapper).get(0).mwEditor = this;\n        }\n    };\n\n    this.init = function () {\n        this.controllers = MWEditor.controllers;\n        this.controllersHelpers = MWEditor.controllersHelpers;\n        this.initState();\n        this._onReady();\n        this.createWrapper();\n        this.createBar();\n\n        if (this.settings.mode === 'div') {\n            this.createArea();\n        } else if (this.settings.mode === 'iframe') {\n            this.createFrame();\n        } else if (this.settings.mode === 'document') {\n            this.documentMode();\n        }\n        if (this.settings.mode !== 'document') {\n            this._initInputRecord();\n            this.__insertEditor();\n        }\n        this.controlGroupManager();\n\n    };\n    this.init();\n};\n\nif (window.mw) {\n   mw.Editor = function (options){\n       options = options || {};\n       if(!options.selector && options.element){\n           options.selector = options.element;\n       }\n       if(options.selector){\n           if (typeof options.selector === 'string') {\n               options.selector = (options.document || document).querySelector(options.selector);\n           }\n           if (options.selector && options.selector.__MWEditor) {\n               return options.selector.__MWEditor;\n           }\n       }\n       return new MWEditor(options);\n   };\n}\n\nwindow.MWEditor = MWEditor\n\n\n/*mw.require('filemanager.js');\n\nmw.require('form-controls.js');\nmw.require('link-editor.js');\n\n\n\nmw.require('state.js');\n\nmw.require('editor/bar.js');\nmw.require('editor/api.js');\nmw.require('editor/helpers.js');\nmw.require('editor/tools.js');\nmw.require('editor/core.js');\nmw.require('editor/controllers.js');\nmw.require('editor/add.controller.js');\nmw.require('editor/interaction-controls.js');\nmw.require('editor/i18n.js');\nmw.require('editor/liveeditmode.js');\nmw.require('control_box.js');*/\n\n\n\n","\nimport {ElementManager} from \"../classes/element\";\n(function(){\n    var Bar = function(options) {\n\n        options = options || {};\n        var defaults = {\n            document: document,\n            register: null\n        };\n        this.settings = Object.assign({}, defaults, options);\n        this.document = this.settings.document || document;\n\n        this.register = [];\n\n        this.delimiter = function(){\n            var el = this.document.createElement('span');\n            el.className = 'mw-bar-delimiter';\n            return el;\n        };\n\n        this.create = function(){\n            this.bar = this.document.createElement('div');\n            this.bar.className = 'mw-bar';\n            this.element = ElementManager(this.bar);\n        };\n\n        this.rows = [];\n\n        this.createRow = function () {\n            var row = this.document.createElement('div');\n            row.className = 'mw-bar-row';\n            this.rows.push(row);\n            this.bar.appendChild(row);\n        };\n        this.nativeElement = function (node) {\n            if(!node) return;\n            return node.node ? node.node : node;\n        };\n\n        this.add = function (what, row) {\n            row = row || 0;\n            if(!this.rows[row]) {\n                return;\n            }\n            if(what === '|') {\n                this.rows[row].appendChild(this.delimiter());\n            } else if(typeof what === 'function') {\n                this.rows[row].appendChild(what().node);\n            } else {\n                var el = this.nativeElement(what);\n                if(el) {\n                    el.classList.add('mw-bar-control-item')\n                    this.rows[row].appendChild(el);\n                }\n\n            }\n        };\n\n        this.init = function(){\n            this.create();\n        };\n        this.init();\n    };\n    mw.bar = function(options){\n        return new Bar(options);\n    };\n})();\n","\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nMWEditor.api = function (scope) {\r\n    return {\r\n        getSelection: function () {\r\n            return scope.getSelection();\r\n        },\r\n        eachRange: function (c){\r\n            var sel = scope.getSelection();\r\n            if(sel.rangeCount && c) {\r\n                for(var i = 0; i < sel.rangeCount; i++) {\r\n                    var range = sel.getRangeAt(i);\r\n                    c.call(scope, range);\r\n                }\r\n            }\r\n        },\r\n        getSelectionHTML: function (){\r\n            var sel = scope.getSelection();\r\n            var html = scope.actionWindow.document.createElement('div');\r\n            if(sel.rangeCount) {\r\n                var frag = sel.getRangeAt(0).cloneContents();\r\n                while (frag.firstChild) {\r\n                    html.append(frag.firstChild);\r\n                }\r\n            }\r\n            return html.innerHTML;\r\n        },\r\n        cleanWord: function (content) {\r\n            var wrapListRoots = function () {\r\n                var all = scope.$editArea.querySelectorAll('li[data-level]'), i = 0, has = false;\r\n                for (; i < all.length; i++) {\r\n                    var parent = all[i].parentElement.nodeName;\r\n                    if (parent !== 'OL' && parent !== 'UL') {\r\n                        has = true;\r\n                        var group = mw.$([]), curr = all[i];\r\n                        while (!!curr && curr.nodeName === 'LI') {\r\n                            group.push(curr);\r\n                            curr = curr.nextElementSibling;\r\n                        }\r\n                        var el = scope.actionWindow.document.createElement(all[i].getAttribute('data-type') === 'ul' ? 'ul' : 'ol');\r\n                        el.className = 'element';\r\n                        group.wrapAll(el);\r\n                        break;\r\n                    }\r\n                }\r\n                if (has) return wrapListRoots();\r\n            };\r\n\r\n            var buildWordList = function (lists, count) {\r\n                var i, check = false, max = 0;\r\n                count = count || 0;\r\n                if (count === 0) {\r\n                    for (i in lists) {\r\n                        var curr = lists[i];\r\n                        if (!curr.nodeName || curr.nodeType !== 1) continue;\r\n                        var $curr = mw.$(curr);\r\n                        lists[i] = mw.tools.setTag(curr, 'li');\r\n                    }\r\n                }\r\n\r\n                lists.each(function () {\r\n                    var num = this.textContent.trim().split('.')[0], check = parseInt(num, 10);\r\n                    var curr = mw.$(this);\r\n                    if (!curr.attr('data-type')) {\r\n                        if (!isNaN(check) && num > 0) {\r\n                            this.innerHTML = this.innerHTML.replace(num + '.', '');\r\n                            curr.attr('data-type', 'ol');\r\n                        }\r\n                        else {\r\n                            curr.attr('data-type', 'ul');\r\n                        }\r\n                    }\r\n                    if (!this.__done) {\r\n                        this.__done = false;\r\n                        var level = parseInt($(this).attr('data-level'));\r\n                        if (!isNaN(level) && level > max) {\r\n                            max = level;\r\n                        }\r\n                        if (!isNaN(level) && level > 1) {\r\n                            var prev = this.previousElementSibling;\r\n                            if (!!prev && prev.nodeName === 'LI') {\r\n                                var type = this.getAttribute('data-type');\r\n                                var wrap = scope.actionWindow.document.createElement(type === 'ul' ? 'ul' : 'ol');\r\n                                wrap.setAttribute('data-level', level);\r\n                                mw.$(wrap).append(this);\r\n                                mw.$(wrap).appendTo(prev);\r\n                                check = true;\r\n                            }\r\n                            else if (!!prev && (prev.nodeName === 'UL' || prev.nodeName === 'OL')) {\r\n                                var where = mw.$('li[data-level=\"' + level + '\"]', prev);\r\n                                if (where.length > 0) {\r\n                                    where.after(this);\r\n                                    check = true;\r\n                                }\r\n                                else {\r\n                                    var type = this.getAttribute('data-type');\r\n                                    var wrap = scope.actionWindow.document.createElement(type === 'ul' ? 'ul' : 'ol');\r\n                                    wrap.setAttribute('data-level', level)\r\n                                    mw.$(wrap).append(this);\r\n                                    mw.$(wrap).appendTo($('li:last', prev))\r\n                                    check = true;\r\n                                }\r\n                            }\r\n                            else if (!prev && (this.parentNode.nodeName !== 'UL' && this.parentNode.nodeName !== 'OL')) {\r\n                                var $curr = mw.$([this]), curr = this;\r\n                                while ($(curr).next('li[data-level=\"' + level + '\"]').length > 0) {\r\n                                    $curr.push($(curr).next('li[data-level=\"' + level + '\"]')[0]);\r\n                                    curr = mw.$(curr).next('li[data-level=\"' + level + '\"]')[0];\r\n                                }\r\n                                $curr.wrapAll($curr.eq(0).attr('data-type') === 'ul' ? '<ul></ul>' : '<ol></ol>')\r\n                                check = true;\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n\r\n                mw.$(\"ul[data-level!='1'], ol[data-level!='1']\").each(function () {\r\n                    var level = parseInt($(this).attr('data-level'));\r\n                    if (!!this.previousElementSibling) {\r\n                        var plevel = parseInt($(this.previousElementSibling).attr('data-level'));\r\n                        if (level > plevel) {\r\n                            mw.$('li:last', this.previousElementSibling).append(this)\r\n                            check = true;\r\n                        }\r\n                    }\r\n                });\r\n                if (count === 0) {\r\n                    setTimeout(function () {\r\n                        buildWordList($('li[data-level]'), 1);\r\n                        wrapListRoots();\r\n                    }, 1);\r\n                }\r\n                return lists;\r\n            };\r\n\r\n            var word_listitem_get_level = function (item) {\r\n                var msspl = item.getAttribute('style').split('mso-list');\r\n                if (msspl.length > 1) {\r\n                    var mssplitems = msspl[1].split(' ');\r\n                    for (var i = 0; i < mssplitems.length; i++) {\r\n                        if (mssplitems[i].indexOf('level') !== -1) {\r\n                            return parseInt(mssplitems[i].split('level')[1], 10);\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n\r\n            var isWordHtml = function (html) {\r\n                return html.indexOf('urn:schemas-microsoft-com:office:word') !== -1;\r\n            };\r\n\r\n            var _cleanWordList = function (html) {\r\n\r\n                if (!isWordHtml(html)) return html;\r\n                if (html.indexOf('</body>') !== -1) {\r\n                    html = html.split('</body>')[0];\r\n                }\r\n                var parser = mw.tools.parseHtml(html).body;\r\n\r\n                var lists = mw.$('[style*=\"mso-list:\"]', parser);\r\n                lists.each(function () {\r\n                    var level = word_listitem_get_level(this);\r\n                    if (!!level) {\r\n                        this.setAttribute('data-level', level)\r\n                        this.setAttribute('class', 'level-' + level)\r\n                    }\r\n\r\n                });\r\n\r\n                mw.$('[style]', parser).removeAttr('style');\r\n\r\n                if (lists.length > 0) {\r\n                    lists = buildWordList(lists);\r\n                    var start = mw.$([]);\r\n                    mw.$('li', parser).each(function () {\r\n                        this.innerHTML = this.innerHTML\r\n                            .replace(/�/g, '')/* Not a dot */\r\n                            .replace(new RegExp(String.fromCharCode(160), \"g\"), \"\")\r\n                            .replace(/&nbsp;/gi, '')\r\n                            .replace(/\\�/g, '')\r\n                            .replace(/<\\/?span[^>]*>/g, \"\")\r\n                            .replace('�', '');\r\n                    });\r\n                }\r\n                return parser.innerHTML;\r\n            };\r\n\r\n            var cleanWord = function (html) {\r\n                html = _cleanWordList(html);\r\n                html = html.replace(/<td([^>]*)>/gi, '<td>');\r\n                html = html.replace(/<table([^>]*)>/gi, '<table cellspacing=\"0\" cellpadding=\"0\" border=\"1\" style=\"width:100%;\" width=\"100%\" class=\"element\">');\r\n                html = html.replace(/<o:p>\\s*<\\/o:p>/g, '');\r\n                html = html.replace(/<o:p>[\\s\\S]*?<\\/o:p>/g, '&nbsp;');\r\n                html = html.replace(/\\s*mso-[^:]+:[^;\"]+;?/gi, '');\r\n                html = html.replace(/\\s*MARGIN: 0cm 0cm 0pt\\s*;/gi, '');\r\n                html = html.replace(/\\s*MARGIN: 0cm 0cm 0pt\\s*\"/gi, \"\\\"\");\r\n                html = html.replace(/\\s*TEXT-INDENT: 0cm\\s*;/gi, '');\r\n                html = html.replace(/\\s*TEXT-INDENT: 0cm\\s*\"/gi, \"\\\"\");\r\n                html = html.replace(/\\s*TEXT-ALIGN: [^\\s;]+;?\"/gi, \"\\\"\");\r\n                html = html.replace(/\\s*PAGE-BREAK-BEFORE: [^\\s;]+;?\"/gi, \"\\\"\");\r\n                html = html.replace(/\\s*FONT-VARIANT: [^\\s;]+;?\"/gi, \"\\\"\");\r\n                html = html.replace(/\\s*tab-stops:[^;\"]*;?/gi, '');\r\n                html = html.replace(/\\s*tab-stops:[^\"]*/gi, '');\r\n                html = html.replace(/\\s*face=\"[^\"]*\"/gi, '');\r\n                html = html.replace(/\\s*face=[^ >]*/gi, '');\r\n                html = html.replace(/\\s*FONT-FAMILY:[^;\"]*;?/gi, '');\r\n                html = html.replace(/<(\\w[^>]*) class=([^ |>]*)([^>]*)/gi, \"<$1$3\");\r\n                html = html.replace(/<STYLE[^>]*>[\\s\\S]*?<\\/STYLE[^>]*>/gi, '');\r\n                html = html.replace(/<(?:META|LINK)[^>]*>\\s*/gi, '');\r\n                html = html.replace(/\\s*style=\"\\s*\"/gi, '');\r\n                html = html.replace(/<SPAN\\s*[^>]*>\\s*&nbsp;\\s*<\\/SPAN>/gi, '&nbsp;');\r\n                html = html.replace(/<SPAN\\s*[^>]*><\\/SPAN>/gi, '');\r\n                html = html.replace(/<(\\w[^>]*) lang=([^ |>]*)([^>]*)/gi, \"<$1$3\");\r\n                html = html.replace(/<SPAN\\s*>([\\s\\S]*?)<\\/SPAN>/gi, '$1');\r\n                html = html.replace(/<FONT\\s*>([\\s\\S]*?)<\\/FONT>/gi, '$1');\r\n                html = html.replace(/<\\\\?\\?xml[^>]*>/gi, '');\r\n                html = html.replace(/<w:[^>]*>[\\s\\S]*?<\\/w:[^>]*>/gi, '');\r\n                html = html.replace(/<\\/?\\w+:[^>]*>/gi, '');\r\n                html = html.replace(/<\\!--[\\s\\S]*?-->/g, '');\r\n                html = html.replace(/<(U|I|STRIKE)>&nbsp;<\\/\\1>/g, '&nbsp;');\r\n                html = html.replace(/<H\\d>\\s*<\\/H\\d>/gi, '');\r\n                html = html.replace(/<(\\w+)[^>]*\\sstyle=\"[^\"]*DISPLAY\\s?:\\s?none[\\s\\S]*?<\\/\\1>/ig, '');\r\n                html = html.replace(/<(\\w[^>]*) language=([^ |>]*)([^>]*)/gi, \"<$1$3\");\r\n                html = html.replace(/<(\\w[^>]*) onmouseover=\"([^\\\"]*)\"([^>]*)/gi, \"<$1$3\");\r\n                html = html.replace(/<(\\w[^>]*) onmouseout=\"([^\\\"]*)\"([^>]*)/gi, \"<$1$3\");\r\n                html = html.replace(/<H(\\d)([^>]*)>/gi, '<h$1>');\r\n                html = html.replace(/<font size=2>(.*)<\\/font>/gi, '$1');\r\n                html = html.replace(/<font size=3>(.*)<\\/font>/gi, '$1');\r\n                html = html.replace(/<a name=.*>(.*)<\\/a>/gi, '$1');\r\n                html = html.replace(/<H1([^>]*)>/gi, '<H2$1>');\r\n                html = html.replace(/<\\/H1\\d>/gi, '<\\/H2>');\r\n                //html = html.replace(/<span>/gi, '$1');\r\n                html = html.replace(/<\\/span\\d>/gi, '');\r\n                html = html.replace(/<(H\\d)><FONT[^>]*>([\\s\\S]*?)<\\/FONT><\\/\\1>/gi, '<$1>$2<\\/$1>');\r\n                html = html.replace(/<(H\\d)><EM>([\\s\\S]*?)<\\/EM><\\/\\1>/gi, '<$1>$2<\\/$1>');\r\n                return html;\r\n            };\r\n\r\n            var cleanTables = function (root) {\r\n                var toRemove = \"tbody > *:not(tr), thead > *:not(tr), tr > *:not(td)\",\r\n                    all = root.querySelectorAll(toRemove),\r\n                    l = all.length,\r\n                    i = 0;\r\n                for (; i < l; i++) {\r\n                    mw.$(all[i]).remove();\r\n                }\r\n                var tables = root.querySelectorAll('table'),\r\n                    l = tables.length,\r\n                    i = 0;\r\n                for (; i < l; i++) {\r\n                    var item = tables[i],\r\n                        l = item.children.length,\r\n                        i = 0;\r\n                    for (; i < l; i++) {\r\n                        var item = item.children[i];\r\n                        if (typeof item !== 'undefined' && item.nodeType !== 3) {\r\n                            var name = item.nodeName.toLowerCase();\r\n                            var posibles = \"thead tfoot tr tbody col colgroup\";\r\n                            if (!posibles.contains(name)) {\r\n                                mw.$(item).remove();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            return cleanWord(content)\r\n\r\n        },\r\n        action: function(targetParent, func) {\r\n            scope.state.record({\r\n                target: targetParent,\r\n                value: targetParent.innerHTML\r\n            });\r\n            func.call();\r\n            setTimeout(function(){\r\n                scope.state.record({\r\n                    target: targetParent,\r\n                    value: targetParent.innerHTML\r\n                });\r\n            }, 78);\r\n        },\r\n        elementNode: function (c) {\r\n            if( !c || !c.parentNode || c.parentNode === document.body ){\r\n                return null;\r\n            }\r\n            try {   /* Firefox returns wrong target (div) when you click on a spin-button */\r\n                if (typeof c.querySelector === 'function') {\r\n                    return c;\r\n                }\r\n                else {\r\n                    return scope.api.elementNode(c.parentNode);\r\n                }\r\n            }\r\n            catch (e) {\r\n                return null;\r\n            }\r\n        },\r\n        fontFamily: function (font_name, sel) {\r\n            var range = (sel || scope.getSelection()).getRangeAt(0);\r\n            scope.api.execCommand(\"styleWithCSS\", null, true);\r\n            if (range.collapsed) {\r\n                var el = scope.api.elementNode(range.commonAncestorContainer);\r\n                scope.api.select_all(el);\r\n                scope.api.execCommand('fontName', null, font_name);\r\n                range.collapse();\r\n            }\r\n            else {\r\n                scope.api.execCommand('fontName', null, font_name);\r\n            }\r\n        },\r\n        selectAll: function (el) {\r\n            var range = scope.document.createRange();\r\n            range.selectNodeContents(el);\r\n            var selection = scope.getSelection();\r\n            selection.removeAllRanges();\r\n            selection.addRange(range);\r\n        },\r\n        selectElement: function (el) {\r\n            var range = scope.document.createRange();\r\n            try {\r\n                range.selectNode(el);\r\n                var selection = scope.getSelection();\r\n                selection.removeAllRanges();\r\n                selection.addRange(range);\r\n            } catch (e) {\r\n\r\n            }\r\n        },\r\n        isSelectionEditable: function (sel) {\r\n            try {\r\n                var node = (sel || scope.getSelection()).focusNode;\r\n                if (node === null) {\r\n                    return false;\r\n                }\r\n                if (node.nodeType === 1) {\r\n                    return node.isContentEditable;\r\n                }\r\n                else {\r\n                    return node.parentNode.isContentEditable;\r\n                }\r\n            }\r\n            catch (e) {\r\n                return false;\r\n            }\r\n        },\r\n        getTextNodes: function (root, target){\r\n            if(!target) target = [];\r\n            var curr = root.firstChild;\r\n            while (curr) {\r\n                if(curr.nodeType === 3) {\r\n                    target.push(curr);\r\n                } else if(curr.nodeType === 1){\r\n                    scope.api.getTextNodes(curr, target)\r\n                }\r\n                curr = curr.nextSibling;\r\n            }\r\n            return target;\r\n        },\r\n        classApplier: function (className) {\r\n            var sel = scope.getSelection();\r\n            var range = sel.getRangeAt(0);\r\n            var frag = range.cloneContents();\r\n            var nodes = scope.api.getTextNodes(frag).filter(function (node){ return !!node });\r\n            nodes.forEach(function (node){\r\n                var el = scope.actionWindow.document.createElement('span');\r\n                el.className = 'mw-richtext-classApplier ' + className;\r\n                el.textContent = node.textContent;\r\n                node.parentNode.replaceChild(el, node);\r\n            });\r\n            range.deleteContents()\r\n            range.insertNode(frag)\r\n        },\r\n        cleanHTML: function (target){\r\n\r\n        },\r\n        cssApplier: function (css) {\r\n            var styles = '';\r\n            if (typeof css === 'object') {\r\n                for (var i in css) {\r\n                    styles += (i + ':' + css[i] + ';');\r\n                }\r\n            } else if(typeof css === 'string') {\r\n                styles = css;\r\n            }\r\n            var sel = scope.getSelection();\r\n            var el = scope.api.elementNode(sel.focusNode);\r\n            var range = sel.getRangeAt(0);\r\n            var frag = range.cloneContents();\r\n            var nodes = scope.api.getTextNodes(frag).filter(function (node){ return !!node });\r\n            nodes.forEach(function (node){\r\n                var el = scope.actionWindow.document.createElement('span');\r\n                el.className = 'mw-richtext-cssApplier';\r\n                el.setAttribute('style', styles);\r\n                el.textContent = node.textContent;\r\n                node.parentNode.replaceChild(el, node);\r\n            });\r\n            range.deleteContents();\r\n            range.insertNode(frag);\r\n        },\r\n        isSafeMode: function(el) {\r\n            if (!el) {\r\n                var node = scope.getSelection().focusNode;\r\n                el = scope.api.elementNode(node);\r\n            }\r\n            var hasSafe = mw.tools.hasAnyOfClassesOnNodeOrParent(el, ['safe-mode']);\r\n            var regInsafe = mw.tools.parentsOrCurrentOrderMatchOrNone(el, ['regular-mode', 'safe-mode']);\r\n            return hasSafe && !regInsafe;\r\n        },\r\n        _execCommandCustom: {\r\n            removeFormat: function (cmd, def, val) {\r\n                scope.actionWindow.document.execCommand(cmd, def, val);\r\n                var sel = scope.getSelection();\r\n                var r = sel.getRangeAt(0);\r\n                var common = r.commonAncestorContainer;\r\n                var all = common.querySelectorAll('*'), l = all.length, i = 0;\r\n                for ( ; i < l; i++ ) {\r\n                    var el = all[i];\r\n                    if (typeof sel !== 'undefined' && sel.containsNode(el, true)) {\r\n                        all[i].removeAttribute('style');\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        domCommand: function (method, options) {\r\n            var sel = scope.getSelection();\r\n            try {  // 0x80004005\r\n                if (  scope.api.isSelectionEditable()) {\r\n\r\n                    if (sel.rangeCount > 0) {\r\n                        var node = scope.api.elementNode(sel.focusNode);\r\n                        scope.api.action(mw.tools.firstBlockLevel(node), function () {\r\n                            scope.api[method].call(scope.api, options);\r\n                            mw.$(scope.settings.iframeAreaSelector, scope.actionWindow.document).trigger('execCommand');\r\n                            mw.$(scope).trigger('execCommand');\r\n                            scope.registerChange();\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n            }\r\n        },\r\n        execCommand: function (cmd, def, val) {\r\n             scope.actionWindow.document.execCommand('styleWithCss', 'false', false);\r\n            var sel = scope.getSelection();\r\n            try {  // 0x80004005\r\n                 if (scope.actionWindow.document.queryCommandSupported(cmd) && scope.api.isSelectionEditable()) {\r\n                     def = def || false;\r\n                    val = val || false;\r\n                    if (sel.rangeCount > 0) {\r\n                         var node = scope.api.elementNode(sel.focusNode);\r\n                        scope.api.action(mw.tools.firstBlockLevel(node), function () {\r\n                            scope.actionWindow.document.execCommand(cmd, def, val);\r\n                            mw.$(scope.settings.iframeAreaSelector, scope.actionWindow.document).trigger('execCommand');\r\n                            mw.$(scope).trigger('execCommand');\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n            }\r\n        },\r\n        _fontSize: function (size, unit) {\r\n            unit = unit || 'px';\r\n            scope.api.domCommand('cssApplier', 'font-size:' +  size + unit + ';');\r\n        },\r\n        lineHeight: function (size) {\r\n\r\n            if (scope.api.isSelectionEditable()) {\r\n                var sel = scope.getSelection();\r\n                var el = scope.api.elementNode(sel.focusNode)\r\n                scope.api.action(mw.tools.firstBlockLevel(el), function () {\r\n                     el.style.lineHeight = size\r\n                });\r\n            }\r\n\r\n        },\r\n        fontSize: function (size) {\r\n            var sel = scope.getSelection();\r\n            if (sel.isCollapsed) {\r\n                scope.api.selectAll(scope.api.elementNode(sel.focusNode));\r\n                sel = scope.getSelection();\r\n            }\r\n            var range = sel.getRangeAt(0),\r\n                common = scope.api.elementNode(range.commonAncestorContainer);\r\n            var nodrop_state = mw.tools.parentsOrCurrentOrderMatchOrOnlyFirstOrNone(common, ['allow-drop', 'nodrop']);\r\n            if (scope.api.isSelectionEditable() && nodrop_state) {\r\n                scope.api._fontSize(size, 'px');\r\n            }\r\n        },\r\n        saveSelection: function () {\r\n            var sel = scope.getSelection();\r\n            scope.api.savedSelection = {\r\n                selection: sel,\r\n                range: sel.getRangeAt(0),\r\n                element: mw.$(scope.api.elementNode(sel.getRangeAt(0).commonAncestorContainer))\r\n            };\r\n        },\r\n        restoreSelection: function () {\r\n            if (scope.api.savedSelection) {\r\n                var sel = scope.getSelection();\r\n                scope.api.savedSelection.element.attr(\"contenteditable\", \"true\");\r\n                scope.api.savedSelection.element.focus();\r\n                scope.api.savedSelection.selection.removeAllRanges();\r\n                scope.api.savedSelection.selection.addRange(scope.api.savedSelection.range);\r\n            }\r\n        },\r\n        _cleaner: document.createElement('div'),\r\n        cleanHTML: function(html) {\r\n             this._cleaner.innerHTML = html;\r\n            var elements = Array.prototype.slice.call(this._cleaner.querySelectorAll('iframe,script,noscript'));\r\n            while (elements.length) {\r\n                elements[0].remove();\r\n                elements.shift();\r\n            }\r\n            return this._cleaner.innerHTML;\r\n        },\r\n        insertHTML: function(html) {\r\n            return scope.api.execCommand('insertHTML', false, this.cleanHTML(html));\r\n        },\r\n        insertImage: function (url) {\r\n            var id =  mw.id('image_');\r\n            var img = '<img id=\"' + id + '\" contentEditable=\"false\" class=\"element\" src=\"' + url + '\" />';\r\n            scope.api.insertHTML(img);\r\n            img = mw.$(\"#\" + id);\r\n            img.removeAttr(\"_moz_dirty\");\r\n            return img[0];\r\n        },\r\n        link: function (result) {\r\n            var sel = scope.getSelection();\r\n            var el = scope.api.elementNode(sel.focusNode);\r\n            var elLink = el.nodeName === 'A' ? el : mw.tools.firstParentWithTag(el, 'a');\r\n            if (elLink) {\r\n                elLink.href = result.url;\r\n                if (result.text && result.text !== elLink.innerHTML) {\r\n                    elLink.innerHTML = result.text;\r\n                }\r\n            } else {\r\n                scope.api.insertHTML('<a href=\"'+ result.url +'\">'+ (result.text || (sel.toString().trim()) || result.url) +'</a>');\r\n            }\r\n        },\r\n        unlink: function () {\r\n            var sel = scope.getSelection();\r\n            if (!sel.isCollapsed) {\r\n                this.execCommand('unlink', null, null);\r\n            }\r\n            else {\r\n                var link = mw.tools.firstParentOrCurrentWithTag(this.elementNode(sel.focusNode), 'a');\r\n                if (!!link) {\r\n                    this.selectElement(link);\r\n                    this.execCommand('unlink', null, null);\r\n                }\r\n            }\r\n        }\r\n    };\r\n};\r\n","import {ElementManager} from  '../classes/element'\n\nMWEditor.controllersHelpers = {\n    '|' : function () {\n        return ElementManager({\n            tage: 'span',\n            props: {\n                className: 'mw-bar-delimiter'\n            }\n        });\n    }\n};\n","MWEditor.tools = { };\n\n\n","import {ObjectService} from \"../classes/object.service\";\nimport {ElementManager} from \"../classes/element\";\nMWEditor.core = {\n    button: function(config) {\n        config = config || {};\n        var defaults = {\n            tag: 'button',\n            props: {\n                className: 'mdi mw-editor-controller-component mw-editor-controller-button',\n                type: 'button'\n            }\n        };\n        if (config.props && config.props.className){\n            config.props.className = defaults.props.className + ' ' + config.props.className;\n        }\n        var settings = ObjectService.extend(true, {}, defaults, config);\n        return ElementManager(settings);\n    },\n    colorPicker: function(config) {\n        config = config || {};\n        var defaults = {\n            props: {\n                className: 'mw-editor-controller-component'\n            }\n        };\n        var settings = ObjectService.extend(true, {}, defaults, config);\n\n        var el = MWEditor.core.button(settings);\n        el.addClass('mw-editor-color-picker')\n        var input = ElementManager({\n            tag: 'input',\n            props: {\n                type: 'color',\n                className: 'mw-editor-color-picker-node'\n            }\n        });\n        var time = null;\n        input.on('input', function (){\n            clearTimeout(time);\n            time = setTimeout(function (el, node){\n                console.log(node.value)\n                el.trigger('change', node.value);\n            }, 210, el, this);\n        });\n        el.append(input);\n        return el;\n    },\n    element: function(config) {\n        config = config || {};\n        var defaults = {\n            props: {\n                className: 'mw-editor-controller-component'\n            }\n        };\n        var settings = ObjectService.extend(true, {}, defaults, config);\n        var el = ElementManager(settings);\n        el.on('mousedown touchstart', function (e) {\n            e.preventDefault();\n        });\n        return el;\n    },\n\n    _dropdownOption: function (data) {\n        // data: { label: string, value: any },\n        var option = MWEditor.core.element({\n            props: {\n                className: 'mw-editor-dropdown-option',\n                innerHTML: data.label\n            }\n        });\n        option.on('mousedown touchstart', function (e) {\n            e.preventDefault();\n        });\n        option.value = data.value;\n        return option;\n    },\n    dropdown: function (options) {\n        var lscope = this;\n        this.root = MWEditor.core.element();\n        this.select = MWEditor.core.element({\n            props: {\n                className: 'mw-editor-controller-component mw-editor-controller-component-select',\n                tooltip: options.placeholder || null\n            }\n        });\n        var displayValNode = MWEditor.core.button({\n            props: {\n                className: (options.icon ? 'mdi-' + options.icon + ' ' : '') + 'mw-editor-select-display-value',\n                innerHTML: options.placeholder || ''\n            }\n        });\n\n        var valueHolder = MWEditor.core.element({\n            props: {\n                className: 'mw-editor-controller-component-select-values-holder',\n\n            }\n        });\n        this.root.value = function (val){\n            this.displayValue(val.label);\n            this.value(val.value);\n        };\n\n        this.root.displayValue = function (val) {\n            displayValNode.text(val || options.placeholder || '');\n        };\n\n        this.select.append(displayValNode);\n        this.select.append(valueHolder);\n        this.select.valueHolder = valueHolder;\n        for (var i = 0; i < options.data.length; i++) {\n            var dt = options.data[i];\n            (function (dt){\n                var opt = MWEditor.core._dropdownOption(dt);\n                opt.on('click', function (){\n                    lscope.select.trigger('change', dt);\n                });\n                valueHolder.append(opt);\n            })(dt);\n\n        }\n        var curr = lscope.select.get(0);\n        this.select.on('click', function (e) {\n            e.stopPropagation();\n            var wrapper = mw.tools.firstParentWithClass(this, 'mw-editor-wrapper');\n            if (wrapper) {\n                var edOff = wrapper.getBoundingClientRect();\n                var selOff = this.getBoundingClientRect();\n                lscope.select.valueHolder.css({\n                    maxHeight: edOff.height - (selOff.top - edOff.top)\n                });\n            }\n\n            ElementManager('.mw-editor-controller-component-select').each(function (){\n                if (this !== curr ) {\n                    this.classList.remove('active');\n                }\n            });\n            ElementManager(this).toggleClass('active');\n        });\n        this.root.append(this.select);\n    },\n    _preSelect: function (node) {\n        var all = document.querySelectorAll('.mw-editor-controller-component-select.active, .mw-bar-control-item-group.active');\n        var parent = mw.tools.firstParentOrCurrentWithAnyOfClasses(node ? node.parentNode : null, ['mw-editor-controller-component-select','mw-bar-control-item-group']);\n        var i = 0, l = all.length;\n        for ( ; i < l; i++) {\n            if(!node || (all[i] !== node && all[i] !== parent)) {\n                all[i].classList.remove('active');\n            }\n        }\n    }\n};\n","MWEditor.controllers = {\n    align: function (scope, api, rootScope) {\n        this.root = MWEditor.core.element();\n        this.root.addClass('mw-editor-state-component mw-editor-state-component-align');\n        this.buttons = [];\n\n        var arr = [\n            {align: 'left', icon: 'left', action: 'justifyLeft'},\n            {align: 'center', icon: 'center', action: 'justifyCenter'},\n            {align: 'right', icon: 'right', action: 'justifyRight'},\n            {align: 'justify', icon: 'justify', action: 'justifyFull'}\n        ];\n        this.render = function () {\n            var scope = this;\n            arr.forEach(function (item) {\n                var el = MWEditor.core.button({\n                    props: {\n                        className: 'mdi-format-align-' + item.icon\n                    }\n                });\n                el.on('mousedown touchstart', function (e) {\n                    api.execCommand(item.action);\n                });\n                scope.root.append(el);\n                scope.buttons.push(el);\n            });\n            return scope.root;\n        };\n        this.checkSelection = function (opt) {\n            var align = opt.css.alignNormalize();\n            for (var i = 0; i< this.buttons.length; i++) {\n                var state = arr[i].align === align;\n                rootScope.controllerActive(this.buttons[i].node, state);\n            }\n        };\n        this.element = this.render();\n    },\n    bold: function (scope, api, rootScope) {\n        this.render = function () {\n            var scope = this;\n            var el = MWEditor.core.button({\n                props: {\n                    className: 'mdi-format-bold',\n                    tooltip: rootScope.lang('Bold')\n                }\n            });\n            el.on('mousedown touchstart', function (e) {\n                api.execCommand('bold');\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            if(opt.css.is().bold) {\n                rootScope.controllerActive(opt.controller.element.node, true);\n            } else {\n                rootScope.controllerActive(opt.controller.element.node, false);\n            }\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n        };\n        this.element = this.render();\n    },\n    strikeThrough: function (scope, api, rootScope) {\n        this.render = function () {\n            var scope = this;\n            var el = MWEditor.core.button({\n                props: {\n                    className: 'mdi-format-strikethrough',\n                    tooltip: rootScope.lang('Strike through')\n                }\n            });\n\n            el.on('mousedown touchstart', function (e) {\n                api.execCommand('strikeThrough');\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            if(opt.css.is().striked) {\n                rootScope.controllerActive(opt.controller.element.node, true);\n            } else {\n                rootScope.controllerActive(opt.controller.element.node, false);\n            }\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n        };\n        this.element = this.render();\n    },\n    italic: function(scope, api, rootScope){\n        this.render = function () {\n            var el = MWEditor.core.button({\n                props: {\n                    className: 'mdi-format-italic',\n                    tooltip: rootScope.lang('Italic')\n                }\n            });\n            el.on('mousedown touchstart', function (e) {\n                api.execCommand('italic');\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n            if(opt.css.is().italic) {\n                rootScope.controllerActive(opt.controller.element.node, true);\n            } else {\n                rootScope.controllerActive(opt.controller.element.node, false);\n            }\n        };\n        this.element = this.render();\n    },\n    'underline': function(scope, api, rootScope){\n        this.render = function () {\n            var el = MWEditor.core.button({\n                props: {\n                    className: 'mdi-format-underline',\n                    tooltip: rootScope.lang('Underline')\n                }\n            });\n            el.on('mousedown touchstart', function (e) {\n                api.execCommand('underline');\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n            if(opt.css.is().underlined) {\n                rootScope.controllerActive(opt.controller.element.node, true);\n            } else {\n                rootScope.controllerActive(opt.controller.element.node, false);\n            }\n        };\n        this.element = this.render();\n    },\n    'image': function(scope, api, rootScope){\n        this.render = function () {\n            var el = MWEditor.core.button({\n                props: {\n                    className: 'mdi-folder-multiple-image',\n                    tooltip: rootScope.lang('Insert Image')\n                }\n            });\n            el.on('click', function (e) {\n                var dialog;\n                var picker = new mw.filePicker({\n                    type: 'images',\n                    label: false,\n                    autoSelect: false,\n                    footer: true,\n                    _frameMaxHeight: true,\n                    onResult: function (res) {\n                        var url = res.src ? res.src : res;\n                        if(!url) return;\n                        url = url.toString();\n                        api.insertImage(url);\n                        dialog.remove();\n                    }\n                });\n                dialog = mw.top().dialog({\n                    content: picker.root,\n                    title: mw.lang('Select image'),\n                    footer: false\n                });\n\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n        };\n        this.element = this.render();\n    },\n    link: function(scope, api, rootScope){\n\n        this.render = function () {\n            var el = MWEditor.core.button({\n                props: {\n                    className: 'mdi-link',\n                    tooltip: rootScope.lang('Insert link')\n                }\n            });\n\n            el.on('click', function (e) {\n                api.saveSelection();\n                var sel = scope.getSelection();\n\n                var target = mw.tools.firstParentWithTag(sel.focusNode, 'a');\n\n                var val;\n                if(target) {\n                    val = {\n                        url: target.href,\n                        text: target.innerHTML,\n                        target: target.target === '_blank'\n                    };\n                } else if(!sel.isCollapsed) {\n                    val = {\n                        url: '',\n                        text: api.getSelectionHTML(),\n                        target: false\n                    };\n                }\n                var linkEditor = new mw.LinkEditor({\n                    mode: 'dialog',\n                });\n                if(val) {\n                    linkEditor.setValue(val);\n                }\n\n                linkEditor.promise().then(function (data){\n                    var modal = linkEditor.dialog;\n                    if(data) {\n                        api.restoreSelection();\n                        api.link(data);\n                        modal.remove();\n                    } else {\n                        modal.remove();\n                    }\n                });\n\n\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n        };\n        this.element = this.render();\n    },\n    fontSize: function (scope, api, rootScope) {\n        this.checkSelection = function (opt) {\n            var css = opt.css;\n            var font = css.font();\n            var size = font.size;\n            opt.controller.element.displayValue(size);\n            opt.controller.element.disabled = !opt.api.isSelectionEditable();\n        };\n        this.render = function () {\n            var dropdown = new MWEditor.core.dropdown({\n                data: [\n                    { label: '8px', value: 8 },\n                    { label: '10px', value: 10 },\n                    { label: '12px', value: 12 },\n                    { label: '14px', value: 14 },\n                    { label: '16px', value: 16 },\n                    { label: '18px', value: 18 },\n                    { label: '20px', value: 20 },\n                    { label: '22px', value: 22 },\n                    { label: '24px', value: 24 },\n                    { label: '28px', value: 28 },\n                    { label: '32px', value: 32 },\n                    { label: '36px', value: 36 },\n                    { label: '42px', value: 42 },\n                ],\n                placeholder: rootScope.lang('Font Size')\n            });\n            dropdown.select.on('change', function (e, val) {\n                if(val) {\n                    api.fontSize(val.value);\n                }\n            });\n            return dropdown.root;\n        };\n        this.element = this.render();\n    },\n    lineHeight: function (scope, api, rootScope) {\n        this.checkSelection = function (opt) {\n            var css = opt.css;\n            var font = css.font();\n            var size = font.height;\n            opt.controller.element.displayValue(size);\n            opt.controller.element.disabled = !opt.api.isSelectionEditable();\n        };\n        this.render = function () {\n            var dropdown = new MWEditor.core.dropdown({\n                icon: 'format-line-spacing',\n                data: [\n                    { label: 'normal', value: 'normal' },\n                    { label: '14px', value:'14px' },\n                    { label: '16px', value:'16px' },\n                    { label: '19px', value:'19px' },\n                    { label: '21px', value:'21px' },\n                    { label: '24px', value:'24px' },\n                    { label: '25px', value:'25px' },\n                    { label: '27px', value:'27px' },\n                    { label: '30px', value:'30px' },\n                    { label: '35px', value:'35px' },\n                    { label: '40px', value:'40px' },\n                    { label: '45px', value:'45px' },\n                    { label: '50px', value:'50px' },\n                    { label: '55px', value:'55px' },\n                    { label: '60px', value:'60px' },\n                ],\n                placeholder: rootScope.lang('Line height')\n            });\n            dropdown.select.on('change', function (e, val) {\n                api.lineHeight(val.value);\n            });\n            return dropdown.root;\n        };\n        this.element = this.render();\n    },\n    format: function (scope, api, rootScope) {\n\n        this._availableTags = [\n            { label: '<h1>Title</h1>', value: 'h1' },\n            { label: '<h2>Title</h2>', value: 'h2' },\n            { label: '<h3>Title</h3>', value: 'h3' },\n            { label: '<h4>Title</h4>', value: 'h4' },\n            { label: '<h5>Title</h5>', value: 'h5' },\n            { label: '<h6>Title</h6>', value: 'h6' },\n            { label: 'Paragraph', value: 'p' },\n            { label: 'Block', value: 'div' },\n            { label: 'Pre formated', value: 'pre' }\n        ];\n\n        this.availableTags = function () {\n            if(this.__availableTags) {\n                return this.__availableTags;\n            }\n            this.__availableTags = this._availableTags.map(function (item) {\n                return item.value;\n            });\n            return this.availableTags();\n        };\n\n        this.getTagDisplayName = function (tag) {\n            tag = (tag || '').trim().toLowerCase();\n            if(!tag) return;\n            for (var i = 0; i < this._availableTags.length; i++) {\n                if(this._availableTags[i].value === tag) {\n                    return this._availableTags[i].label;\n                }\n            }\n        };\n\n        this.checkSelection = function (opt) {\n            var el = opt.api.elementNode(opt.selection.focusNode);\n            var parentEl = mw.tools.firstParentOrCurrentWithTag(el, this.availableTags());\n            opt.controller.element.displayValue(parentEl ? this.getTagDisplayName(parentEl.nodeName) : '');\n            opt.controller.element.disabled = !opt.api.isSelectionEditable();\n        };\n        this.render = function () {\n            var dropdown = new MWEditor.core.dropdown({\n                data: this._availableTags,\n                placeholder: rootScope.lang('Format')\n            });\n            dropdown.select.on('change', function (e, val) {\n                api.execCommand('formatBlock', false, e.detail.value);\n            });\n            return dropdown.root;\n        };\n        this.element = this.render();\n    },\n    fontSelector: function (scope, api, rootScope) {\n        this.checkSelection = function (opt) {\n            var css = opt.css;\n                var font = css.font();\n                var family_array = font.family.split(','), fam;\n                if (family_array.length === 1) {\n                    fam = font.family;\n                } else {\n                    fam = family_array.shift();\n                }\n                fam = fam.replace(/['\"]+/g, '');\n                opt.controller.element.displayValue(fam);\n                opt.controller.element.disabled = !opt.api.isSelectionEditable();\n\n        };\n        this.render = function () {\n            var dropdown = new MWEditor.core.dropdown({\n                data: [\n                    { label: 'Arial 1', value: 'Arial' },\n                    { label: 'Verdana 1', value: 'Verdana' },\n                ],\n                placeholder: rootScope.lang('Font')\n            });\n            dropdown.select.on('change', function (e, val, b) {\n                api.fontFamily(val.value);\n            });\n            return dropdown.root;\n        };\n        this.element = this.render();\n    },\n    undoRedo: function(scope, api, rootScope) {\n        this.render = function () {\n            this.root = MWEditor.core.element();\n            this.root.addClass('mw-ui-btn-nav mw-editor-state-component')\n            var undo = MWEditor.core.button({\n                props: {\n                    className: 'mdi-undo',\n                    tooltip: rootScope.lang('Undo')\n                }\n            });\n            undo.on('mousedown touchstart', function (e) {\n                rootScope.state.undo();\n                rootScope._syncTextArea();\n            });\n\n            var redo = MWEditor.core.button({\n                props: {\n                    className: 'mdi-redo',\n                    tooltip: rootScope.lang('Redo')\n                }\n            });\n            redo.on('mousedown touchstart', function (e) {\n                rootScope.state.redo();\n                rootScope._syncTextArea();\n            });\n            this.root.node.appendChild(undo.node);\n            this.root.node.appendChild(redo.node);\n            $(rootScope.state).on('stateRecord', function(e, data){\n                undo.node.disabled = !data.hasNext;\n                redo.node.disabled = !data.hasPrev;\n            })\n            .on('stateUndo stateRedo', function(e, data){\n                if(!data.active || !data.active.target) {\n                    undo.node.disabled = !data.hasNext;\n                    redo.node.disabled = !data.hasPrev;\n                    return;\n                }\n                if(scope.actionWindow.document.body.contains(data.active.target)) {\n                    mw.$(data.active.target).html(data.active.value);\n                } else{\n                    if(data.active.target.id) {\n                        mw.$(scope.actionWindow.document.getElementById(data.active.target.id)).html(data.active.value);\n                    }\n                }\n                if(data.active.prev) {\n                    mw.$(data.active.prev).html(data.active.prevValue);\n                }\n                // mw.drag.load_new_modules();\n                undo.node.disabled = !data.hasNext;\n                redo.node.disabled = !data.hasPrev;\n                $(scope).trigger(e.type, [data]);\n            });\n            setTimeout(function () {\n                var data = rootScope.state.eventData();\n                undo.node.disabled = !data.hasNext;\n                redo.node.disabled = !data.hasPrev;\n            }, 78);\n            return this.root;\n        };\n        this.element = this.render();\n    },\n    'ul': function(scope, api, rootScope){\n        this.render = function () {\n            var el = MWEditor.core.button({\n                props: {\n                    className: 'mdi-format-list-bulleted'\n                }\n            });\n            el.on('mousedown touchstart', function (e) {\n                var sel = api.getSelection();\n                var node = api.elementNode(sel.focusNode);\n                var paragraph = mw.tools.firstParentOrCurrentWithTag(node, 'p');\n                if(paragraph) {\n                    scope.api.action(paragraph.parentNode, function () {\n                        var ul = scope.actionWindow.document.createElement('ul');\n                        var li = scope.actionWindow.document.createElement('li');\n                        ul.appendChild(li);\n                        while (paragraph.firstChild) {\n                            li.appendChild(node.firstChild);\n                        }\n                        paragraph.parentNode.insertBefore(ul, paragraph.nextSibling);\n                        paragraph.remove();\n                    });\n                } else {\n                    api.execCommand('insertUnorderedList');\n                }\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n        };\n        this.element = this.render();\n    },\n    'ol': function(scope, api, rootScope){\n        this.render = function () {\n            var el = MWEditor.core.button({\n                props: {\n                    className: 'mdi-format-list-numbered tip',\n                    'data-tip': 'Ordered list'\n                }\n            });\n            el.on('mousedown touchstart', function (e) {\n                var sel = api.getSelection();\n                var node = api.elementNode(sel.focusNode);\n                var paragraph = mw.tools.firstParentOrCurrentWithTag(node, 'p');\n                if(paragraph) {\n                    scope.api.action(paragraph.parentNode, function () {\n                        var ul = scope.actionWindow.document.createElement('ol');\n                        var li = scope.actionWindow.document.createElement('li');\n                        ul.appendChild(li);\n                        while (paragraph.firstChild) {\n                            li.appendChild(paragraph.firstChild);\n                        }\n                        paragraph.parentNode.insertBefore(ul, paragraph.nextSibling);\n                        paragraph.remove();\n                    });\n                } else {\n                    api.execCommand('insertOrderedList');\n                }\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n        };\n        this.element = this.render();\n    },\n    'indent': function(scope, api, rootScope){\n        this.render = function () {\n            var el = MWEditor.core.button({\n                props: {\n                    className: 'mdi-format-indent-increase',\n                    'data-tip': 'Indent'\n                }\n            });\n            el.on('mousedown touchstart', function (e) {\n                api.execCommand('indent');\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n        };\n        this.element = this.render();\n    },\n    'outdent': function(scope, api, rootScope){\n        this.render = function () {\n            var el = MWEditor.core.button({\n                props: {\n                    className: 'mdi-format-indent-decrease',\n                    'data-tip': 'Indent'\n                }\n            });\n            el.on('mousedown touchstart', function (e) {\n                api.execCommand('outdent');\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n        };\n        this.element = this.render();\n    },\n    removeFormat: function (scope, api, rootScope) {\n        this.render = function () {\n            var el = MWEditor.core.button({\n                props: {\n                    className: 'mdi-format-clear',\n                    tooltip: 'Remove Format'\n                }\n            });\n            el.on('mousedown touchstart', function (e) {\n                api.execCommand('removeFormat');\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n        };\n        this.element = this.render();\n    },\n    unlink: function (scope, api, rootScope) {\n        this.render = function () {\n            var el = MWEditor.core.button({\n                props: {\n                    className: 'mdi-link-off', tooltip: 'Unlink'\n                }\n            });\n            el.on('mousedown touchstart', function (e) {\n                api.execCommand('unlink');\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n        };\n        this.element = this.render();\n    },\n    textColor: function (scope, api, rootScope) {\n        this.render = function () {\n            var el = MWEditor.core.colorPicker({\n                props: {\n                    className: 'mdi-format-color-text', tooltip: 'Text color'\n                }\n            });\n            el.on('change', function (e, val) {\n                api.execCommand('foreColor', false, val);\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n        };\n        this.element = this.render();\n    },\n    textBackgroundColor: function (scope, api, rootScope) {\n        this.render = function () {\n            var el = MWEditor.core.colorPicker({\n                props: {\n                    className: 'mdi-format-color-fill', tooltip: 'Text background color'\n                }\n            });\n            el.on('change', function (e, val) {\n                api.execCommand('backcolor', false, val);\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n        };\n        this.element = this.render();\n    },\n    table: function (scope, api, rootScope) {\n        this.render = function () {\n            var el = MWEditor.core.button({\n                props: {\n                    className: 'mdi-table-large', tooltip: 'Insert Table'\n                }\n            });\n            el.on('mousedown touchstart', function (e) {\n                api.insertHTML('<table class=\"mw-ui-table\" border=\"1\" width=\"100%\"><tr><td></td><td></td></tr><tr><td></td><td></td></tr></table>');\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n        };\n        this.element = this.render();\n    },\n    wordPaste: function (scope, api, rootScope) {\n        this.render = function () {\n            var el = MWEditor.core.button({\n                props: {\n                    className: 'mdi-file-word', tooltip: 'Paste from Word'\n                }\n            });\n            el.on('mousedown touchstart', function (e) {\n                api.saveSelection();\n                var dialog;\n                var ok = MWEditor.core.element({\n                    tag: 'span',\n                    props: {\n                        className: 'mw-ui-btn mw-ui-btn-info',\n                        innerHTML: rootScope.lang('OK')\n                    }\n                });\n                var cancel = MWEditor.core.element({\n                    tag: 'span',\n                    props: {\n                        className: 'mw-ui-btn',\n                        innerHTML: rootScope.lang('Cancel')\n                    }\n                });\n                var cleanEl = mw.element({\n                    props: {\n                        contentEditable: true,\n                        autofocus: true,\n                        style: {\n                            height: '250px'\n                        }\n                    }\n                });\n\n                var footer = mw.element();\n                cancel.on('click', function (){\n                    dialog.remove();\n                })\n                ok.on('click', function (){\n                    var content = cleanEl.html().trim();\n                    dialog.remove();\n                    api.restoreSelection();\n                    if(content){\n                        api.insertHTML(api.cleanWord(content));\n                    }\n\n                });\n                footer.append(cancel);\n                footer.append(ok);\n                dialog = mw.dialog({\n                    content: cleanEl.node,\n                    footer: footer.node\n                });\n            });\n            return el;\n        };\n        this.checkSelection = function (opt) {\n            opt.controller.element.node.disabled = !opt.api.isSelectionEditable(opt.selection);\n        };\n        this.element = this.render();\n    },\n\n\n\n};\n","\r\n/*************************************************************\r\n *\r\n        MWEditor.addController(\r\n            'underline',\r\n            function () {\r\n\r\n            }, function () {\r\n\r\n            }\r\n        );\r\n\r\n        MWEditor.addController({\r\n            name: 'underline',\r\n            render: function () {\r\n\r\n            },\r\n            checkSelection: function () {\r\n\r\n            }\r\n        })\r\n\r\n **************************************************************/\r\n\r\n\r\n\r\nMWEditor.controllers.editSource = function (scope, api, rootScope) {\r\n    this.render = function () {\r\n\r\n        var scope = this;\r\n        var el = MWEditor.core.button({\r\n            props: {\r\n                className: 'mdi mdi-xml',\r\n                tooltip:  'Edit source'\r\n            }\r\n        });\r\n        el.on('mousedown touchstart', function (e) {\r\n\r\n            var ok = mw.element('<span class=\"mw-ui-btn mw-ui-btn-info\">'+mw.lang('OK')+'</span>');\r\n            var cancel = mw.element('<span class=\"mw-ui-btn\">'+mw.lang('Cancel')+'</span>');\r\n            var area = mw.element({ tag: 'textarea', props: {\r\n                    className: 'mw-ui-field',\r\n                }});\r\n            area.css({\r\n                height: 400\r\n            })\r\n            area.val(rootScope.$editArea.html());\r\n            var footer = mw.element();\r\n            footer.append(cancel).append(ok)\r\n            var dialog = mw.dialog({\r\n                overlay: true,\r\n                content: area.get(0),\r\n                footer: footer.get(0),\r\n                title: mw.lang('Edit source')\r\n            });\r\n\r\n            cancel.on('click', function (){\r\n                dialog.remove()\r\n            });\r\n            ok.on('click', function (){\r\n                rootScope.setContent(area.val(), true);\r\n                dialog.remove();\r\n            });\r\n\r\n        });\r\n        return el;\r\n    };\r\n    this.checkSelection = function () {\r\n        return true;\r\n    };\r\n};\r\n\r\n\r\nMWEditor.addController = function (name, render, checkSelection, dependencies) {\r\n    if (MWEditor.controllers[name]) {\r\n        console.warn(name + ' already defined');\r\n        return;\r\n    }\r\n    if (typeof name === 'object') {\r\n        var obj = name;\r\n        name = obj.name;\r\n        render = obj.render;\r\n        checkSelection = obj.checkSelection;\r\n        dependencies = obj.dependencies;\r\n    }\r\n    if(MWEditor.controllers[name]) {\r\n        console.warn(name + ' controller is already registered in the editor');\r\n        return;\r\n    }\r\n    MWEditor.controllers[name] = function () {\r\n        this.render = render;\r\n        if(checkSelection) {\r\n            this.checkSelection = checkSelection;\r\n        }\r\n        this.element = this.render();\r\n        this.dependencies = dependencies;\r\n    };\r\n};\r\n\r\n\r\nMWEditor.addInteractionController = function (name, render, interact, dependencies) {\r\n    if (MWEditor.controllers[name]) {\r\n        console.warn(name + ' already defined');\r\n        return;\r\n    }\r\n    if (typeof name === 'object') {\r\n        var obj = name;\r\n        name = obj.name;\r\n        render = obj.render;\r\n        interact = obj.interact;\r\n        dependencies = obj.dependencies;\r\n    }\r\n    if(MWEditor.interactionControls[name]) {\r\n        console.warn(name + ' controller is already registered in the editor')\r\n        return;\r\n    }\r\n    MWEditor.interactionControls[name] = function () {\r\n        this.render = render;\r\n        if(interact) {\r\n            this.interact = interact;\r\n        }\r\n        this.element = this.render();\r\n        this.dependencies = dependencies;\r\n    };\r\n};\r\n","\nimport {ElementManager} from  '../classes/element'\n\n\n/*\n*\n*  interface data {\n        target: Element,\n        component: Element,\n        isImage: boolean,\n        event: Event\n    };\n*\n*\n* */\n\nMWEditor.interactionControls = {\n    linkTooltip: function (rootScope) {\n        this.render = function () {\n            var scope = this;\n            var el = ElementManager({\n                props: {\n                    className: 'mw-editor-link-tooltip'\n                }\n            });\n            var urlElement = ElementManager({\n                tag: 'a',\n                props: {\n                    className: 'mw-editor-link-tooltip-url',\n                    target: 'blank'\n                }\n            });\n            var urlUnlink = MWEditor.core.button({\n                props: {\n                    className: 'mdi-link-off',\n                }\n            });\n\n            urlUnlink.on('click', function () {\n                rootScope.api.unlink();\n            });\n\n            el.urlElement = urlElement;\n            el.urlUnlink = urlUnlink;\n            el.append(urlElement);\n            el.append(urlUnlink);\n            el.target = null;\n            el.hide();\n            return el;\n        };\n        this.interact = function (data) {\n            var tg = mw.tools.firstParentOrCurrentWithTag(data.target,'a');\n            if(!tg) {\n                this.element.hide();\n                return;\n            }\n            var $target = $(data.target);\n            this.$target = $target;\n            var css = $target.offset();\n            css.top += $target.height();\n            this.element.urlElement.html(data.target.href);\n            this.element.urlElement.prop('href', data.target.href);\n            this.element.css(css).show();\n        };\n        this.element = this.render();\n    },\n    image: function (rootScope) {\n        this.nodes = [];\n        this.render = function () {\n            var scope = this;\n            var el = ElementManager({\n                props: {\n                    className: 'mw-editor-image-handle-wrap'\n                }\n            });\n            var changeButton = ElementManager({\n                props: {\n                    innerHTML: '<i class=\"mdi mdi-folder-multiple-image\"></i>',\n                    className: 'mw-ui-btn mw-ui-btn-medium tip',\n                    dataset: {\n                        tip: rootScope.lang('Change image')\n                    }\n                }\n            });\n            changeButton.on('click', function () {\n                var dialog;\n                var picker = new mw.filePicker({\n                    type: 'images',\n                    label: false,\n                    autoSelect: false,\n                    footer: true,\n                    _frameMaxHeight: true,\n                    onResult: function (res) {\n                        var url = res.src ? res.src : res;\n                        if(!url) return;\n                        url = url.toString();\n                        scope.$target.attr('src', url);\n                        dialog.remove();\n                    }\n                });\n                dialog = mw.top().dialog({\n                    content: picker.root,\n                    title: mw.lang('Select image'),\n                    footer: false\n                })\n\n            });\n            var editButton = ElementManager({\n                props: {\n                    innerHTML: '<i class=\"mdi mdi-image-edit\"></i>',\n                    className: 'mw-ui-btn mw-ui-btn-medium tip',\n                    dataset: {\n                        tip: rootScope.lang('Edit image')\n                    }\n                }\n            });\n            var nav = ElementManager({\n                props: {\n                    className: 'mw-ui-btn-nav'\n                }\n            });\n            nav.append(changeButton);\n            el.append(nav);\n            // nav.append(editButton);\n            this.nodes.push(el.node, changeButton.node, editButton.node);\n            el.hide();\n            return el;\n        };\n        this.interact = function (data) {\n\n            if(MWEditor.tools.dom.firstParentOrCurrentWithClass(data.localTarget, 'mw-editor-image-handle-wrap')) {\n                return;\n            }\n            if(this.nodes.indexOf(data.target) !== -1) {\n                this.element.$node.hide();\n                return;\n            }\n            if (data.isImage) {\n                var $target = $(data.localTarget);\n                this.$target = $target;\n                var css = $target.offset();\n                css.width = $target.outerWidth();\n                css.height = $target.outerHeight();\n                this.element.css(css).show();\n            } else {\n                this.element.hide();\n            }\n        };\n        this.element = this.render();\n    },\n    tableManager: function(rootScope){\n        var lscope = this;\n        this.interact = function (data) {\n            if (!data.eventIsActionLike) { return; }\n            var td = mw.tools.firstParentOrCurrentWithTag(data.localTarget, 'td');\n            if (td) {\n                var $target = $(td);\n                this.$target = $target;\n                var css = $target.offset();\n                css.top -= lscope.element.node.offsetHeight;\n                this.element.$node.css(css).show();\n            } else {\n                this.element.$node.hide();\n            }\n        };\n\n        this._afterAction = function () {\n            this.element.$node.hide();\n            rootScope.state.record({\n                target: rootScope.$editArea[0],\n                value: rootScope.$editArea[0].innerHTML\n            });\n        };\n\n        this.render = function () {\n            var root = ElementManager({\n                props: {\n                    className: 'mw-editor-table-manager'\n                }\n            });\n            var bar = mw.bar();\n            bar.createRow();\n            root.append(bar.bar);\n\n            var insertDD = new MWEditor.core.dropdown({\n                data: [\n                    { label: 'Row Above', value: {action: 'insertRow', type: 'above'} },\n                    { label: 'Row Under', value: {action: 'insertRow', type: 'under'} },\n                    { label: 'Column on the left', value: {action: 'insertColumn', type: 'left'} },\n                    { label: 'Column on the right', value: {action: 'insertColumn', type: 'right'} },\n                ],\n                placeholder: 'Insert'\n            });\n\n            insertDD.select.on('change', function (e, data, node) {\n                rootScope.state.record({\n                    target: rootScope.$editArea[0],\n                    value: rootScope.$editArea[0].innerHTML\n                });\n                lscope[data.value.action](data.value.type);\n                lscope._afterAction();\n            });\n            var deletetDD = new MWEditor.core.dropdown({\n                data: [\n                    { label: 'Row', value: {action: 'deleteRow'} },\n                    { label: 'Column', value: {action: 'deleteColumn'} },\n                ],\n                placeholder: 'Delete'\n            });\n\n            deletetDD.select.on('change', function (e, data, node) {\n                rootScope.state.record({\n                    target: rootScope.$editArea[0],\n                    value: rootScope.$editArea[0].innerHTML\n                });\n                lscope[data.value.action]();\n                lscope._afterAction()\n            });\n\n            bar.add(insertDD.root.node);\n            bar.add(deletetDD.root.node);\n            root.hide();\n\n            return root;\n        };\n\n        this.deleteRow = function (cell) {\n            cell = cell || this.getActiveCell();\n            cell.parentNode.remove();\n        };\n\n\n        this.deleteColumn = function (cell) {\n            cell = cell || this.getActiveCell();\n            var index = mw.tools.index(cell),\n                body = cell.parentNode.parentNode,\n                rows = mw.$(body).children('tr'),\n                l = rows.length,\n                i = 0;\n            for (; i < l; i++) {\n                var row = rows[i];\n                row.getElementsByTagName('td')[index].remove();\n            }\n        };\n\n        this.getActiveCell = function () {\n            var node = rootScope.api.elementNode( rootScope.getSelection().focusNode);\n            return mw.tools.firstParentOrCurrentWithTag(node,'td');\n        };\n\n        this.insertColumn = function (dir, cell) {\n            cell = cell || this.getActiveCell();\n            cell = mw.$(cell)[0];\n            if (cell === null) {\n                return false;\n            }\n            dir = dir || 'right';\n            var rows = mw.$(cell.parentNode.parentNode).children('tr');\n            var i = 0, l = rows.length, index = mw.tools.index(cell);\n            for (; i < l; i++) {\n                var row = rows[i];\n                cell = mw.$(row).children('td')[index];\n                if (dir === 'left' || dir === 'both') {\n                    mw.$(cell).before(\"<td>&nbsp;</td>\");\n                }\n                if (dir === 'right' || dir === 'both') {\n                    mw.$(cell).after(\"<td>&nbsp;</td>\");\n                }\n            }\n        };\n        this.insertRow = function (dir, cell) {\n            cell = cell || this.getActiveCell();\n            cell = mw.$(cell)[0];\n            if (cell === null) {\n                return false;\n            }\n            dir = dir || 'under';\n            var parent = cell.parentNode, cells = mw.$(parent).children('td'), i = 0, l = cells.length,\n                html = '';\n            for (; i < l; i++) {\n                html += '<td>&nbsp;</td>';\n            }\n            html = '<tr>' + html + '</tr>';\n            if (dir === 'under' || dir === 'both') {\n                mw.$(parent).after(html)\n            }\n            if (dir === 'above' || dir === 'both') {\n                mw.$(parent).before(html)\n            }\n        };\n        this.deleteRow = function (cell) {\n            cell = cell || this.getActiveCell();\n            mw.$(cell.parentNode).remove();\n        };\n        this.deleteColumn = function (cell) {\n            cell = cell || this.getActiveCell();\n            var index = mw.tools.index(cell), body = cell.parentNode.parentNode, rows = mw.$(body).children('tr'), l = rows.length, i = 0;\n            for (; i < l; i++) {\n                var row = rows[i];\n                mw.$(row.getElementsByTagName('td')[index]).remove();\n            }\n        };\n\n        this.setStyle = function (cls, cell) {\n            cell = cell || this.getActiveCell();\n            var table = mw.tools.firstParentWithTag(cell, 'table');\n            mw.tools.classNamespaceDelete(table, 'mw-wysiwyg-table');\n            mw.$(table).addClass(cls);\n        };\n        this.element = this.render();\n    }\n\n};\n","MWEditor.i18n = {\r\n    en: {\r\n        'Change': 'Change',\r\n        'Edit image': 'Edit',\r\n    }\r\n};\r\n","\r\nvar canDestroy = function (event) {\r\n    var target = event.target;\r\n    return !mw.tools.hasAnyOfClassesOnNodeOrParent(event, ['safe-element'])\r\n        && mw.tools.parentsOrCurrentOrderMatchOrOnlyFirstOrNone(target, ['allow-drop', 'nodrop']);\r\n};\r\n\r\n\r\n\r\n\r\nMWEditor.leSave = {\r\n   prepare: function(root){\r\n        if(!root) {\r\n            return null;\r\n        }\r\n       var doc = mw.tools.parseHtml();\r\n       var doc = document.implementation.createHTMLDocument(\"\");\r\n       doc.body.innerHTML = root.innerHTML;\r\n\r\n       mw.$('.element-current', doc).removeClass('element-current');\r\n       mw.$('.element-active', doc).removeClass('element-active');\r\n       mw.$('.disable-resize', doc).removeClass('disable-resize');\r\n       mw.$('.mw-webkit-drag-hover-binded', doc).removeClass('mw-webkit-drag-hover-binded');\r\n       mw.$('.module-cat-toggle-Modules', doc).removeClass('module-cat-toggle-Modules');\r\n       mw.$('.mw-module-drag-clone', doc).removeClass('mw-module-drag-clone');\r\n       mw.$('-module', doc).removeClass('-module');\r\n       mw.$('.empty-element', doc).remove();\r\n       mw.$('.empty-element', doc).remove();\r\n       mw.$('.edit .ui-resizable-handle', doc).remove();\r\n       mw.$('script', doc).remove();\r\n       mw.tools.classNamespaceDelete('all', 'ui-', doc, 'starts');\r\n       mw.$(\"[contenteditable]\", doc).removeAttr(\"contenteditable\");\r\n       var all = doc.querySelectorAll('[contenteditable]'),\r\n           l = all.length,\r\n           i = 0;\r\n       for (; i < l; i++) {\r\n           all[i].removeAttribute('contenteditable');\r\n       }\r\n       var all1 = doc.querySelectorAll('.module'),\r\n           l1 = all.length,\r\n           i1 = 0;\r\n       for (; i1 < l1; i1++) {\r\n           if (all[i1].querySelector('.edit') === null) {\r\n               all[i1].innerHTML = '';\r\n           }\r\n       }\r\n       return doc;\r\n   },\r\n   htmlAttrValidate:function(edits){\r\n        var final = [];\r\n        $.each(edits, function(){\r\n            var html = this.outerHTML;\r\n            html = html.replace(/url\\(&quot;/g, \"url('\");\r\n            html = html.replace(/jpg&quot;/g, \"jpg'\");\r\n            html = html.replace(/jpeg&quot;/g, \"jpeg'\");\r\n            html = html.replace(/png&quot;/g, \"png'\");\r\n            html = html.replace(/gif&quot;/g, \"gif'\");\r\n            final.push($(html)[0]);\r\n        })\r\n        return final;\r\n   },\r\n    pastedFromExcel: function (clipboard) {\r\n        var html = clipboard.getData('text/html');\r\n        return html.indexOf('ProgId content=Excel.Sheet') !== -1\r\n    },\r\n    areSameLike: function (el1, el2) {\r\n        if (!el1 || !el2) return false;\r\n        if (el1.nodeType !== el2.nodeType) return false;\r\n        if (!!el1.className.trim() || !!el2.className.trim()) {\r\n            return false;\r\n        }\r\n\r\n        var css1 = (el1.getAttribute('style') || '').replace(/\\s/g, '');\r\n        var css2 = (el2.getAttribute('style') || '').replace(/\\s/g, '');\r\n\r\n        if (css1 === css2 && el1.nodeName === el2.nodeName) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    },\r\n    cleanUnwantedTags: function (body) {\r\n        var scope = this;\r\n        mw.$('*', body).each(function () {\r\n            if (this.nodeName !== 'A' && mw.ea.helpers.isInlineLevel(this) && (this.className.trim && !this.className.trim())) {\r\n                if (scope.areSameLike(this, this.nextElementSibling) && this.nextElementSibling === this.nextSibling) {\r\n                    if (this.nextSibling !== this.nextElementSibling) {\r\n                        this.appendChild(this.nextSibling);\r\n                    }\r\n                    this.innerHTML = this.innerHTML + this.nextElementSibling.innerHTML;\r\n                    this.nextElementSibling.innerHTML = '';\r\n                    this.nextElementSibling.className = 'mw-skip-and-remove';\r\n                }\r\n            }\r\n        });\r\n        mw.$('.mw-skip-and-remove', body).remove();\r\n        return body;\r\n    },\r\n   getData: function(edits) {\r\n        mw.$(edits).each(function(){\r\n            mw.$('meta', this).remove();\r\n        });\r\n\r\n        edits = this.htmlAttrValidate(edits);\r\n        var l = edits.length,\r\n            i = 0,\r\n            helper = {},\r\n            master = {};\r\n        if (l > 0) {\r\n            for (; i < l; i++) {\r\n                helper.item = edits[i];\r\n                var rel = mw.tools.mwattr(helper.item, 'rel');\r\n                if (!rel) {\r\n                    mw.$(helper.item).removeClass('changed');\r\n                    mw.tools.foreachParents(helper.item, function(loop) {\r\n                        var cls = this.className;\r\n                        var rel = mw.tools.mwattr(this, 'rel');\r\n                        if (mw.tools.hasClass(cls, 'edit') && mw.tools.hasClass(cls, 'changed') && (!!rel)) {\r\n                            helper.item = this;\r\n                            mw.tools.stopLoop(loop);\r\n                        }\r\n                    });\r\n                }\r\n                var rel = mw.tools.mwattr(helper.item, 'rel');\r\n                if (!rel) {\r\n                    var field = !!helper.item.id ? '#'+helper.item.id : '';\r\n                    console.warn('Skipped save: .edit'+field+' element does not have rel attribute.');\r\n                    continue;\r\n                }\r\n                mw.$(helper.item).removeClass('changed orig_changed');\r\n                mw.$(helper.item).removeClass('module-over');\r\n\r\n                mw.$('.module-over', helper.item).each(function(){\r\n                    mw.$(this).removeClass('module-over');\r\n                });\r\n                mw.$('[class]', helper.item).each(function(){\r\n                    var cls = this.getAttribute(\"class\");\r\n                    if(typeof cls === 'string'){\r\n                        cls = cls.trim();\r\n                    }\r\n                    if(!cls){\r\n                        this.removeAttribute(\"class\");\r\n                    }\r\n                });\r\n                var content = this.cleanUnwantedTags(helper.item).innerHTML;\r\n                var attr_obj = {};\r\n                var attrs = helper.item.attributes;\r\n                if (attrs.length > 0) {\r\n                    var ai = 0,\r\n                        al = attrs.length;\r\n                    for (; ai < al; ai++) {\r\n                        attr_obj[attrs[ai].nodeName] = attrs[ai].nodeValue;\r\n                    }\r\n                }\r\n                var obj = {\r\n                    attributes: attr_obj,\r\n                    html: content\r\n                };\r\n                var objdata = \"field_data_\" + i;\r\n                master[objdata] = obj;\r\n            }\r\n        }\r\n        return master;\r\n    }\r\n};\r\n\r\nMWEditor.leCore = {};\r\n\r\n// methods accessible by scope.liveedit\r\n\r\nMWEditor.liveeditMode = function(scope){\r\n    return {\r\n\r\n        prepare: {\r\n            titles: function () {\r\n                var t = scope.querySelectorAll('[field=\"title\"]'),\r\n                    l = t.length,\r\n                    i = 0;\r\n\r\n                for (; i < l; i++) {\r\n                    mw.$(t[i]).addClass(\"nodrop\");\r\n                }\r\n            }\r\n        },\r\n\r\n        isSafeMode: function (el) {\r\n            if (!el) {\r\n                var sel = scope.selection;\r\n                if(!sel.rangeCount) return false;\r\n                var range = sel.getRangeAt(0);\r\n                el = scope.api.elementNode(range.commonAncestorContainer);\r\n            }\r\n            var hasSafe = mw.tools.hasAnyOfClassesOnNodeOrParent(el, ['safe-mode']);\r\n            var regInsafe = mw.tools.parentsOrCurrentOrderMatchOrNone(el, ['regular-mode', 'safe-mode']);\r\n            return hasSafe && !regInsafe;\r\n        },\r\n        init: function (body, scope) {\r\n            mw.$(body).on('keydown', function (event) {\r\n                if (event.type === 'keydown') {\r\n                    if (mw.tools.isField(event.target) || !event.target.isContentEditable) {\r\n                        return true;\r\n                    }\r\n                    var sel = scope.selection;\r\n                    if (mw.event.is.enter(event)) {\r\n                        if (MWEditor.liveeditMode.isSafeMode(event.target)) {\r\n                            var isList = mw.tools.firstMatchesOnNodeOrParent(event.target, ['li', 'ul', 'ol']);\r\n                            if (!isList) {\r\n                                event.preventDefault();\r\n                                scope.api.insertHTML('<br>\\u200C');\r\n                            }\r\n                        }\r\n                    }\r\n                    if (sel.rangeCount > 0) {\r\n                        var r = sel.getRangeAt(0);\r\n                        if (event.keyCode === 9 && !event.shiftKey && sel.focusNode.parentNode.isContentEditable && sel.isCollapsed) {   /* tab key */\r\n                            scope.api.insertHTML('&nbsp;&nbsp;&nbsp;&nbsp;');\r\n                            return false;\r\n                        }\r\n                        return manageDeleteAndBackspace(event, sel);\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        manageDeleteAndBackspaceInSafeMode : function (event, sel) {\r\n            var node = scope.api.elementNode(sel.focusNode);\r\n            var range = sel.getRangeAt(0);\r\n            if(!node.textContent.replace(/\\s/gi, '')){\r\n                MWEditor.liveeditMode._manageDeleteAndBackspaceInSafeMode.emptyNode(event, node, sel, range);\r\n                return false;\r\n            }\r\n            MWEditor.liveeditMode._manageDeleteAndBackspaceInSafeMode.nodeBoundaries(event, node, sel, range);\r\n            return true;\r\n        },\r\n        merge: {\r\n            /* Executes on backspace or delete */\r\n            isMergeable: function (el) {\r\n                if (!el) return false;\r\n                if (el.nodeType === 3) return true;\r\n                var is = false;\r\n                var css =  getComputedStyle(el);\r\n                var display = css.getPropertyValue('display');\r\n                var position = css.getPropertyValue('position');\r\n                var isInline = display === 'inline';\r\n                if (isInline) return true;\r\n                var mergeables = ['p', '.element', 'div:not([class])', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'];\r\n                mergeables.forEach(function (item) {\r\n                    if (el.matches(item)) {\r\n                        is = true;\r\n                    }\r\n                });\r\n\r\n                if (is) {\r\n                    if (el.querySelector('.module') !== null || mw.tools.hasClass(el, 'module')) {\r\n                        is = false;\r\n                    }\r\n                }\r\n                return is;\r\n            },\r\n            manageBreakables: function (curr, next, dir, event) {\r\n                var isnonbreakable = scope.liveedit.merge.isInNonbreakable(curr, dir);\r\n                if (isnonbreakable) {\r\n                    var conts = scope.selection.getRangeAt(0);\r\n                    event.preventDefault();\r\n                    if (next !== null) {\r\n                        if (next.nodeType === 3 && /\\r|\\n/.exec(next.nodeValue) !== null) {\r\n                            event.preventDefault();\r\n                            return false;\r\n                        }\r\n                        if (dir === 'next') {\r\n                            scope.liveedit.cursorToElement(next);\r\n                        }\r\n                        else {\r\n                            scope.liveedit.cursorToElement(next, 'end');\r\n                        }\r\n                    }\r\n                    else {\r\n                        return false;\r\n                    }\r\n                }\r\n            },\r\n            isInNonbreakable: function (el, dir) {\r\n                var absNext = scope.liveedit.merge.findNextNearest(el, dir);\r\n\r\n                if (absNext.nodeType === 3 && /\\r|\\n/.exec(absNext.nodeValue) !== null) {\r\n                    absNext = scope.liveedit.merge.findNextNearest(el, dir, true)\r\n                }\r\n\r\n                if (absNext.nodeType === 1) {\r\n                    if (mw.tools.hasAnyOfClasses(absNext, ['nodrop', 'allow-drop'])) {\r\n                        return false;\r\n                    }\r\n                    if (absNext.querySelector('.nodrop', '.allow-drop') !== null) {\r\n                        return false;\r\n                    }\r\n                }\r\n                if (scope.liveedit.merge.alwaysMergeable(absNext) && (scope.liveedit.merge.alwaysMergeable(absNext.firstElementChild) || !absNext.firstElementChild)) {\r\n                    return false;\r\n                }\r\n                if (el.textContent === '') {\r\n\r\n                    var absNextNext = scope.liveedit.merge.findNextNearest(absNext, dir);\r\n                    if (absNext.nodeType === 3 && /\\r|\\n/.exec(absNext.nodeValue) !== null) {\r\n                        return scope.liveedit.merge.isInNonbreakableClass(absNextNext)\r\n                    }\r\n                }\r\n\r\n                if (el.nodeType === 1 && !!el.textContent.trim()) {\r\n                    return false;\r\n                }\r\n                if (el.nextSibling === null && el.nodeType === 3 && dir == 'next') {\r\n                    var absNext = scope.liveedit.merge.findNextNearest(el, dir);\r\n                    var absNextNext = scope.liveedit.merge.findNextNearest(absNext, dir);\r\n                    if (/\\r|\\n/.exec(absNext.nodeValue) !== null) {\r\n                        return scope.liveedit.merge.isInNonbreakableClass(absNextNext)\r\n                    }\r\n\r\n                    if (absNextNext.nodeType === 1) {\r\n                        return scope.liveedit.merge.isInNonbreakableClass(absNextNext) || scope.liveedit.merge.isInNonbreakableClass(absNextNext.firstChild);\r\n                    }\r\n                    else if (absNextNext.nodeType === 3) {\r\n                        return true;\r\n                    }\r\n                    else {\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                if (el.previousSibling === null && el.nodeType === 3 && dir === 'prev') {\r\n                    var absNext = scope.liveedit.merge.findNextNearest(el, 'prev');\r\n                    var absNextNext = scope.liveedit.merge.findNextNearest(absNext, 'prev');\r\n                    if (absNextNext.nodeType === 1) {\r\n                        return scope.liveedit.merge.isInNonbreakableClass(absNextNext);\r\n                    }\r\n                    else if (absNextNext.nodeType === 3) {\r\n                        return true;\r\n                    }\r\n                    else {\r\n                        return false;\r\n                    }\r\n                }\r\n                el = scope.api.elementNode(el);\r\n\r\n                var is = scope.liveedit.merge.isInNonbreakableClass(el);\r\n                return is;\r\n            },\r\n            isInNonbreakableClass: function (el, dir) {\r\n                var absNext = scope.liveedit.merge.findNextNearest(el, dir);\r\n\r\n                if (el.nodeType === 3 && /\\r|\\n/.exec(absNext.nodeValue) === null) return false;\r\n                el = scope.api.elementNode(el);\r\n                var classes = ['unbreakable', '*col', '*row', '*btn', '*icon', 'module', 'edit'];\r\n                var is = false;\r\n                classes.forEach(function (item) {\r\n                    if (item.indexOf('*') === 0) {\r\n                        var item = item.split('*')[1];\r\n                        if (el.className.indexOf(item) !== -1) {\r\n                            is = true;\r\n                        }\r\n                        else {\r\n                            mw.tools.foreachParents(el, function (loop) {\r\n                                if (this.className.indexOf(item) !== -1 && !this.contains(el)) {\r\n                                    is = true;\r\n                                    mw.tools.stopLoop(loop);\r\n                                }\r\n                                else {\r\n                                    is = false;\r\n                                    mw.tools.stopLoop(loop);\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (mw.tools.hasClass(el, item) || mw.tools.hasParentsWithClass(el, item)) {\r\n                            is = true;\r\n                        }\r\n                    }\r\n                });\r\n                return is;\r\n            },\r\n            getNext: function (curr) {\r\n                var next = curr.nextSibling;\r\n                while (curr !== null && curr.nextSibling === null) {\r\n                    curr = curr.parentNode;\r\n                    next = curr.nextSibling;\r\n                }\r\n                return next;\r\n            },\r\n            getPrev: function (curr) {\r\n                var next = curr.previousSibling;\r\n                while (curr !== null && curr.previousSibling === null) {\r\n                    curr = curr.parentNode;\r\n                    next = curr.previousSibling;\r\n                }\r\n                return next;\r\n            },\r\n            findNextNearest: function (el, dir, searchElement) {\r\n                searchElement = typeof searchElement === 'undefined' ? false : true;\r\n                if (dir === 'next') {\r\n                    var dosearch = searchElement ? 'nextElementSibling' : 'nextSibling';\r\n                    var next = el[dosearch];\r\n                    if (next === null) {\r\n                        while (el[dosearch] === null) {\r\n                            el = el.parentNode;\r\n                            next = el[dosearch];\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    var dosearch = searchElement ? 'previousElementSibling' : 'previousSibling';\r\n                    var next = el[dosearch];\r\n                    if (next === null) {\r\n                        while (el[dosearch] === null) {\r\n                            el = el.parentNode;\r\n                            next = el[dosearch];\r\n                        }\r\n                    }\r\n                }\r\n                return next;\r\n            },\r\n            alwaysMergeable: function (el) {\r\n                if (!el) {\r\n                    return false;\r\n                }\r\n                if (el.nodeType === 3) {\r\n                    return scope.liveedit.merge.alwaysMergeable(scope.api.elementNode(el))\r\n                }\r\n                if (el.nodeType === 1) {\r\n                    if (/^(?:area|br|col|embed|hr|img|input|link|meta|param)$/i.test(el.tagName)) {\r\n                        return true;\r\n                    }\r\n                    if (/^(?:strong|em|i|b|li)$/i.test(el.tagName)) {\r\n                        return true;\r\n                    }\r\n                    if (/^(?:span)$/i.test(el.tagName) && !el.className) {\r\n                        return true;\r\n                    }\r\n                }\r\n                if (mw.tools.hasClass(el, 'module')) return false;\r\n                if (mw.tools.hasParentsWithClass(el, 'module')) {\r\n                    var ord = mw.tools.parentsOrder(el, ['edit', 'module']);\r\n                }\r\n                var selectors = [\r\n                        'p.element', 'div.element', 'div:not([class])',\r\n                        'h1.element', 'h2.element', 'h3.element', 'h4.element', 'h5.element', 'h6.element',\r\n                        '.edit  h1', '.edit  h2', '.edit  h3', '.edit  h4', '.edit  h5', '.edit  h6',\r\n                        '.edit p'\r\n                    ],\r\n                    final = false,\r\n                    i = 0;\r\n                for (; i < selectors.length; i++) {\r\n                    var item = selectors[i];\r\n                    if (el.matches(item)) {\r\n                        final = true;\r\n                        break;\r\n                    }\r\n                }\r\n                return final;\r\n            }\r\n        },\r\n        _manageDeleteAndBackspaceInSafeMode : {\r\n            emptyNode: function (event, node, sel, range) {\r\n                if(!canDestroy(node)) {\r\n                    return;\r\n                }\r\n                var todelete = node;\r\n                if(mw.tools.hasAnyOfClasses(node.parentNode, ['text', 'title'])){\r\n                    todelete = node.parentNode;\r\n                }\r\n                var transfer, transferPosition;\r\n                if (mw.event.is.delete(event)) {\r\n                    transfer = todelete.nextElementSibling;\r\n                    transferPosition = 'start';\r\n                } else {\r\n                    transfer = todelete.previousElementSibling;\r\n                    transferPosition = 'end';\r\n                }\r\n                var parent = todelete.parentNode;\r\n                scope.record({\r\n                    target: parent,\r\n                    value: parent.innerHTML\r\n                });\r\n                $(todelete).remove();\r\n                if(transfer && mw.tools.isEditable(transfer)) {\r\n                    setTimeout(function () {\r\n                        scope.liveedit.cursorToElement(transfer, transferPosition);\r\n                    });\r\n                }\r\n                scope.record({\r\n                    target: parent,\r\n                    value: parent.innerHTML\r\n                });\r\n            },\r\n            nodeBoundaries: function (event, node, sel, range) {\r\n                var isStart = range.startOffset === 0 || !((sel.anchorNode.data || '').substring(0, range.startOffset).replace(/\\s/g, ''));\r\n                var curr, content;\r\n                if(mw.event.is.backSpace(event) && isStart && range.collapsed){ // is at the beginning\r\n                    curr = node;\r\n                    if(mw.tools.hasAnyOfClasses(node.parentNode, ['text', 'title'])){\r\n                        curr = node.parentNode;\r\n                    }\r\n                    var prev = curr.previousElementSibling;\r\n                    if(prev && prev.nodeName === node.nodeName && canDestroy(node)) {\r\n                        content = node.innerHTML;\r\n                        scope.liveedit.cursorToElement(prev, 'end');\r\n                        prev.appendChild(range.createContextualFragment(content));\r\n                        $(curr).remove();\r\n                    }\r\n                } else if(mw.event.is.delete(event)\r\n                    && range.collapsed\r\n                    && range.startOffset === sel.anchorNode.data.replace(/\\s*$/,'').length // is at the end\r\n                    && canDestroy(node)){\r\n                    curr = node;\r\n                    if(mw.tools.hasAnyOfClasses(node.parentNode, ['text', 'title'])){\r\n                        curr = node.parentNode;\r\n                    }\r\n                    var next = curr.nextElementSibling, deleteParent;\r\n                    if(mw.tools.hasAnyOfClasses(next, ['text', 'title'])){\r\n                        next = next.firstElementChild;\r\n                        deleteParent = true;\r\n                    }\r\n                    if(next && next.nodeName === curr.nodeName) {\r\n                        content = next.innerHTML;\r\n                        setTimeout(function(){\r\n                            var parent = deleteParent ? next.parentNode.parentNode : next.parentNode;\r\n                            scope.actionRecord(function() {\r\n                                    return {\r\n                                        target: parent,\r\n                                        value: parent.innerHTML\r\n                                    };\r\n                                }, function () {\r\n                                    curr.append(range.createContextualFragment(content));\r\n                                }\r\n                            );\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        manageDeleteAndBackspace: function (event, sel) {\r\n            if (mw.event.is.delete(event) || mw.event.is.backSpace(event)) {\r\n                if(!sel.rangeCount) return;\r\n                var r = sel.getRangeAt(0);\r\n                var isSafe = scope.liveedit.isSafeMode();\r\n\r\n                if(isSafe) {\r\n                    return scope.liveedit.manageDeleteAndBackspaceInSafeMode(event, sel);\r\n                }\r\n                var nextNode = null, nextchar, nextnextchar, nextel;\r\n\r\n                if (mw.event.is.delete(event)) {\r\n                    nextchar = sel.focusNode.textContent.charAt(sel.focusOffset);\r\n                    nextnextchar = sel.focusNode.textContent.charAt(sel.focusOffset + 1);\r\n                    nextel = sel.focusNode.nextSibling || sel.focusNode.nextElementSibling;\r\n\r\n                } else {\r\n                    nextchar = sel.focusNode.textContent.charAt(sel.focusOffset - 1);\r\n                    nextnextchar = sel.focusNode.textContent.charAt(sel.focusOffset - 2);\r\n                    nextel = sel.focusNode.previouSibling || sel.focusNode.previousElementSibling;\r\n                }\r\n\r\n                if ((nextchar === ' ' || /\\r|\\n/.exec(nextchar) !== null) && sel.focusNode.nodeType === 3 && !nextnextchar) {\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                if (nextnextchar === '') {\r\n\r\n                    if (nextchar.replace(/\\s/g, '') === '' && r.collapsed) {\r\n\r\n                        if (nextel && !mw.tools.isBlockLevel(nextel) && ( typeof nextel.className === 'undefined' || !nextel.className.trim())) {\r\n                            return true;\r\n                        }\r\n                        else if (nextel && nextel.nodeName !== 'BR') {\r\n                            if (sel.focusNode.nodeName === 'P') {\r\n                                if (event.keyCode === 46) {\r\n                                    if (sel.focusNode.nextElementSibling.nodeName === 'P') {\r\n                                        return true;\r\n                                    }\r\n                                }\r\n                                if (event.keyCode === 8) {\r\n\r\n                                    if (sel.focusNode.previousElementSibling.nodeName === 'P') {\r\n                                        return true;\r\n                                    }\r\n                                }\r\n                            }\r\n                            event.preventDefault();\r\n                            return false;\r\n                        }\r\n\r\n                    }\r\n                    else if (\r\n                        (focus.previousElementSibling === null && rootfocus.previousElementSibling === null)\r\n                        && mw.tools.hasAnyOfClassesOnNodeOrParent(rootfocus, ['nodrop', 'allow-drop'])) {\r\n                        return false;\r\n                    }\r\n                }\r\n                if (nextchar === '') {\r\n\r\n                    if (mw.event.is.delete(event)) {\r\n                        nextNode = scope.liveedit.merge.getNext(sel.focusNode);\r\n                    }\r\n                    if (mw.event.is.backSpace(event)) {\r\n                        nextNode = scope.liveedit.merge.getPrev(sel.focusNode);\r\n                    }\r\n                    if (scope.liveedit.merge.alwaysMergeable(nextNode)) {\r\n                        return true;\r\n                    }\r\n\r\n                    var nonbr = scope.liveedit.merge.isInNonbreakable(nextNode)\r\n                    if (nonbr) {\r\n                        event.preventDefault();\r\n                        return false;\r\n                    }\r\n                    if (nextNode !== null && scope.liveedit.merge.isMergeable(nextNode)) {\r\n                        if (mw.event.is.delete(event)) {\r\n                            scope.liveedit.merge.manageBreakables(sel.focusNode, nextNode, 'next', event)\r\n                        }\r\n                        else {\r\n                            scope.liveedit.merge.manageBreakables(sel.focusNode, nextNode, 'prev', event)\r\n                        }\r\n                    }\r\n                    else {\r\n                        event.preventDefault();\r\n                    }\r\n                    if (nextNode === null) {\r\n                        nextNode = sel.focusNode.parentNode.nextSibling;\r\n                        if (!scope.liveedit.merge.isMergeable(nextNode)) {\r\n                            event.preventDefault();\r\n                        }\r\n                        if (mw.event.is.delete(event)) {\r\n                            scope.liveedit.merge.manageBreakables(sel.focusNode, nextNode, 'next', event)\r\n                        }\r\n                        else {\r\n                            scope.liveedit.merge.manageBreakables(sel.focusNode, nextNode, 'prev', event)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n\r\n    };\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;;;;;;;;AC3fA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;AChKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnljBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACXA;AACA;AACA;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxxrxsourceRoot":""}